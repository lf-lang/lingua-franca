name: C/CCpp tests

on:
  workflow_call:
    inputs:
      compiler-ref:
        required: false
        type: string
      runtime-ref:
        required: false
        type: string
      use-cpp:
        required: false
        type: boolean
        default: false

jobs:
  run:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11
      - name: Check out lingua-franca repository
        uses: actions/checkout@v2
        with:
          repository: lf-lang/lingua-franca
          submodules: true
          ref: ${{ inputs.compiler-ref }}
      - name: Check out specific ref of reactor-c
        uses: actions/checkout@v2
        with:
          repository: lf-lang/reactor-c
          path: org.lflang/src/lib/c/reactor-c
          ref: ${{ inputs.runtime-ref }}
        if: ${{ inputs.runtime-ref }}
      - name: Install dependencies Ubuntu
        run: sudo apt-get install libprotobuf-c-dev protobuf-c-compiler protobuf-compiler libprotobuf-dev
        if: ${{ runner.os == 'Linux' }}
      - name: Install dependencies OS X
        run: |
          brew install protobuf
          brew install protobuf-c
          brew install coreutils
        if: ${{ runner.os == 'macOS' }}
      - name: Install RTI
        uses: ./.github/actions/install-rti
        if: ${{ runner.os == 'macOS' || runner.os == 'Linux' }}
      - name: Build RTI docker image
        uses: ./.github/actions/build-rti-docker
        if: ${{ runner.os == 'Linux' }} 
      - name: Perform tests for C target
        run: |
          ./gradlew test --tests org.lflang.tests.runtime.CTest.* --tests org.lflang.tests.lsp.LspTests.lspWithDependenciesTestC
        if: ${{ !inputs.use-cpp }}
      - name: Perform tests for CCpp target
        run: |
          ./gradlew test --tests org.lflang.tests.runtime.CCppTest.*
        if: ${{ inputs.use-cpp }}
      - name: Report to CodeCov
        uses: codecov/codecov-action@v2.1.0
        with:
          file: org.lflang.tests/build/reports/xml/jacoco
          fail_ci_if_error: false
          verbose: true
        if: ${{ !inputs.compiler-ref }}  # i.e., if this is part of the main repo's CI
