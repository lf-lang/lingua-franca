<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.14.0">
  <compound kind="class">
    <name>org::lflang::analyses::c::AbstractAstVisitor</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1AbstractAstVisitor.html</filename>
    <templarg>T</templarg>
    <base>org.lflang.analyses.c.AstVisitor&lt; T &gt;</base>
    <member kind="function">
      <type>T</type>
      <name>visit</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1AbstractAstVisitor.html</anchorfile>
      <anchor>a9ee48a093e6a0bbebc39badebcd85cef</anchor>
      <arglist>(CAst.AstNode tree)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visit</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1AbstractAstVisitor.html</anchorfile>
      <anchor>a15a2a25a3fef43816e5ff0189230065b</anchor>
      <arglist>(CAst.AstNode tree, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::AstUtils</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1AstUtils.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>printStackTraceAndMatchedText</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1AstUtils.html</anchorfile>
      <anchor>ae5be19705769e11fa276af8cfb593620</anchor>
      <arglist>(ParserRuleContext ctx)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CAst.AstNode</type>
      <name>takeConjunction</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1AstUtils.html</anchorfile>
      <anchor>a89d5dd487f9dea530e16e2329b76a9e5</anchor>
      <arglist>(List&lt; CAst.AstNode &gt; conditions)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CAst.AstNode</type>
      <name>takeDisjunction</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1AstUtils.html</anchorfile>
      <anchor>a7906f36078d1641c7235a50dc27011b8</anchor>
      <arglist>(List&lt; CAst.AstNode &gt; conditions)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::analyses::c::AstVisitor</name>
    <filename>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1AstVisitor.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type>T</type>
      <name>visit</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1AstVisitor.html</anchorfile>
      <anchor>a78d8893d849ffb4bb86e5f0164701fe3</anchor>
      <arglist>(CAst.AstNode tree)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visit</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1AstVisitor.html</anchorfile>
      <anchor>a6b61c3fbc2beac17b2e405a39b76501c</anchor>
      <arglist>(CAst.AstNode tree, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::BuildAstParseTreeVisitor</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</filename>
    <member kind="function">
      <type></type>
      <name>BuildAstParseTreeVisitor</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>ac143cd2cdda22a6145d521c2b9bd3eab</anchor>
      <arglist>(MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitAdditiveExpression</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>aa6ad8b25cc5ac704da7b253828cdd067</anchor>
      <arglist>(AdditiveExpressionContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitAndExpression</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>a5cb5262fa81b2a75fbd45ee40b950056</anchor>
      <arglist>(AndExpressionContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitAssignmentExpression</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>a80402c483e439cda79e4b47114b99b92</anchor>
      <arglist>(AssignmentExpressionContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitBlockItem</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>ae23d025d4bc7a352e3a4997e89fae569</anchor>
      <arglist>(BlockItemContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitBlockItemList</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>ab6252526e9085e165771ad1abbb3775a</anchor>
      <arglist>(BlockItemListContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitCastExpression</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>a90aec33d288925c7a83999947c40c755</anchor>
      <arglist>(CastExpressionContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitConditionalExpression</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>ae87d4bfefff184bea1c2164b053553f1</anchor>
      <arglist>(ConditionalExpressionContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitDeclaration</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>a082002b995e478ce650e3f15e4325b82</anchor>
      <arglist>(DeclarationContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitEqualityExpression</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>ac9d8c4f765d7d85f2cd2d7da9ae757b5</anchor>
      <arglist>(EqualityExpressionContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitExclusiveOrExpression</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>a696e166b110ab9714e89c99b7970ef21</anchor>
      <arglist>(ExclusiveOrExpressionContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitExpression</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>a0d144525321aadda43a712ab60ef200b</anchor>
      <arglist>(ExpressionContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitInclusiveOrExpression</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>ab75c0836538e5d8fd463b5c3a8c7ba56</anchor>
      <arglist>(InclusiveOrExpressionContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitLogicalAndExpression</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>a62c3c978d7b0eac3d08f2293c44c5ba2</anchor>
      <arglist>(LogicalAndExpressionContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitLogicalOrExpression</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>a3de10e8797ebe0855170829ff403c306</anchor>
      <arglist>(LogicalOrExpressionContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitMultiplicativeExpression</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>a4f50c478329e77550e9fdabab9a42419</anchor>
      <arglist>(MultiplicativeExpressionContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitPostfixExpression</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>a3a9e9d7f605274b9713a04751f1c53e6</anchor>
      <arglist>(PostfixExpressionContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitPrimaryExpression</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>aea8a75146ec5f2ef8777e8f3e0e7be25</anchor>
      <arglist>(PrimaryExpressionContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitRelationalExpression</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>a673a683515d8f7920175bc98eb601aa8</anchor>
      <arglist>(RelationalExpressionContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitSelectionStatement</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>adc443ab7d1c3412ae6a3fc54ca3774f6</anchor>
      <arglist>(SelectionStatementContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitShiftExpression</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>af0ea80f5612644c8b9793c82e70d7734</anchor>
      <arglist>(ShiftExpressionContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitStatement</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>a7acf341047c194ade8912aa858aba5b1</anchor>
      <arglist>(StatementContext ctx)</arglist>
    </member>
    <member kind="function">
      <type>CAst.AstNode</type>
      <name>visitUnaryExpression</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>a188b5a913b1ba7f07e42d76bd8f6ef0c</anchor>
      <arglist>(UnaryExpressionContext ctx)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>MessageReporter</type>
      <name>messageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1BuildAstParseTreeVisitor.html</anchorfile>
      <anchor>aa189c6189db506c9e7fdc8145d1e63a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst.html</filename>
    <class kind="class">org::lflang::analyses::c::CAst::AdditionNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::AssignmentNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::AstNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::AstNodeBinary</class>
    <class kind="class">org::lflang::analyses::c::CAst::AstNodeDynamic</class>
    <class kind="class">org::lflang::analyses::c::CAst::AstNodeUnary</class>
    <class kind="class">org::lflang::analyses::c::CAst::DivisionNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::EqualNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::GreaterEqualNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::GreaterThanNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::IfBlockNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::IfBodyNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::LessEqualNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::LessThanNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::LiteralNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::LogicalAndNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::LogicalNotNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::LogicalOrNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::MultiplicationNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::NegativeNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::NotEqualNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::OpaqueNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::ScheduleActionIntNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::ScheduleActionNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::SetPortNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::StatementSequenceNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::StateVarNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::SubtractionNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::TriggerIsPresentNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::TriggerValueNode</class>
    <class kind="class">org::lflang::analyses::c::CAst::VariableNode</class>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::AdditionNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AdditionNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeBinary</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>left</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>a8965234907b33d8866ec5bcaf753786b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AstNode</type>
      <name>right</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>ab7a1571537b1ce9d2ca4d57e1c753704</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AdditionNode.html</anchorfile>
      <anchor>a9c532ae9dcbaec4641083fde0a23f463</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AdditionNode.html</anchorfile>
      <anchor>a5827cfbbd488a7e9f96361108b4b1d1e</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::AssignmentNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AssignmentNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeBinary</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>left</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>a8965234907b33d8866ec5bcaf753786b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AstNode</type>
      <name>right</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>ab7a1571537b1ce9d2ca4d57e1c753704</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AssignmentNode.html</anchorfile>
      <anchor>a01c938a525640237e596f6ca0bad6982</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AssignmentNode.html</anchorfile>
      <anchor>a77c18d2c5aa86669f6ab5728f146e8d2</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::AstNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNode.html</filename>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNode.html</anchorfile>
      <anchor>a780aebda3b976d6a33b0efbd68cc589f</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNode.html</anchorfile>
      <anchor>af0878773a530818edfed6c3d5e1d748d</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::AstNodeBinary</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNode</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>left</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>a8965234907b33d8866ec5bcaf753786b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AstNode</type>
      <name>right</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>ab7a1571537b1ce9d2ca4d57e1c753704</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>a3e633b75826eb2e3e29a406deae0a47c</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>a0cd145cc9d067f7662337b7bec74e5e4</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::AstNodeDynamic</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeDynamic.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNode</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>ArrayList&lt; AstNode &gt;</type>
      <name>children</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeDynamic.html</anchorfile>
      <anchor>a22f8ab0d2d4ce753a1d3ed2e2dc832f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeDynamic.html</anchorfile>
      <anchor>a60f9994373fe995b7e45ff8a497e66b8</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeDynamic.html</anchorfile>
      <anchor>a4790f1a0f12d228ad9b9464e9b6b293c</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::AstNodeUnary</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeUnary.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNode</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>child</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeUnary.html</anchorfile>
      <anchor>a194df4e1031d47e94e2718e1bdb18b61</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeUnary.html</anchorfile>
      <anchor>a5a1095bd41a84705a3f8c5f796a8b595</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeUnary.html</anchorfile>
      <anchor>a071844cb9d1c3bb5fb1da21c54db2666</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::DivisionNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1DivisionNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeBinary</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>left</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>a8965234907b33d8866ec5bcaf753786b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AstNode</type>
      <name>right</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>ab7a1571537b1ce9d2ca4d57e1c753704</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1DivisionNode.html</anchorfile>
      <anchor>a667b3ef0fb209f273dcc7499bbb6c16d</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1DivisionNode.html</anchorfile>
      <anchor>a0d1a524b02212f6d6f1d3e9285d80946</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::EqualNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1EqualNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeBinary</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>left</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>a8965234907b33d8866ec5bcaf753786b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AstNode</type>
      <name>right</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>ab7a1571537b1ce9d2ca4d57e1c753704</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1EqualNode.html</anchorfile>
      <anchor>ae4cc803ac441d6363f8ca0d236a09e68</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1EqualNode.html</anchorfile>
      <anchor>a01e1789ac68a92a454532a1fa27ed1bb</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::GreaterEqualNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1GreaterEqualNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeBinary</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>left</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>a8965234907b33d8866ec5bcaf753786b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AstNode</type>
      <name>right</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>ab7a1571537b1ce9d2ca4d57e1c753704</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1GreaterEqualNode.html</anchorfile>
      <anchor>a87046941a5d9e56aaa3b1d491b3afd70</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1GreaterEqualNode.html</anchorfile>
      <anchor>a3a9790ca384d690b96c6d0a1e2e62b02</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::GreaterThanNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1GreaterThanNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeBinary</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>left</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>a8965234907b33d8866ec5bcaf753786b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AstNode</type>
      <name>right</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>ab7a1571537b1ce9d2ca4d57e1c753704</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1GreaterThanNode.html</anchorfile>
      <anchor>a2059ee4a869c1fbd4c8a3d0f152e2d52</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1GreaterThanNode.html</anchorfile>
      <anchor>a7c3ba1275b033138005750f9babc8211</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::IfBlockNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1IfBlockNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeBinary</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>left</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>a8965234907b33d8866ec5bcaf753786b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AstNode</type>
      <name>right</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>ab7a1571537b1ce9d2ca4d57e1c753704</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1IfBlockNode.html</anchorfile>
      <anchor>a1eb332b0d91ec71de5a6fa7d9336272e</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1IfBlockNode.html</anchorfile>
      <anchor>ad9ef9a6d2e8a2b6475ab5479d15518fc</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::IfBodyNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1IfBodyNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeBinary</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>left</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>a8965234907b33d8866ec5bcaf753786b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AstNode</type>
      <name>right</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>ab7a1571537b1ce9d2ca4d57e1c753704</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1IfBodyNode.html</anchorfile>
      <anchor>a1f86380fe68bd976dda6d7a794fdcb0c</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1IfBodyNode.html</anchorfile>
      <anchor>ac359cd85e81ac0ab27e1427dc8a76321</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::LessEqualNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LessEqualNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeBinary</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>left</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>a8965234907b33d8866ec5bcaf753786b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AstNode</type>
      <name>right</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>ab7a1571537b1ce9d2ca4d57e1c753704</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LessEqualNode.html</anchorfile>
      <anchor>a07eeb1140085088f9765f39d698011e6</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LessEqualNode.html</anchorfile>
      <anchor>a0863f0eda4a797bc11d9bd9844b73ec9</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::LessThanNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LessThanNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeBinary</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>left</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>a8965234907b33d8866ec5bcaf753786b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AstNode</type>
      <name>right</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>ab7a1571537b1ce9d2ca4d57e1c753704</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LessThanNode.html</anchorfile>
      <anchor>a72d0933a61e0c5832418197b03073055</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LessThanNode.html</anchorfile>
      <anchor>aefaf39f3f2f22751472d83f482f2a50e</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::LiteralNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LiteralNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNode</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="function">
      <type></type>
      <name>LiteralNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LiteralNode.html</anchorfile>
      <anchor>aa9830b43f461146ebfb7ef3ea6b31937</anchor>
      <arglist>(String literal)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>literal</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LiteralNode.html</anchorfile>
      <anchor>ab9826809ecb41f2569c05e208c213aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LiteralNode.html</anchorfile>
      <anchor>a57c88bfbec1fe6a391dca2f2b31b7b1a</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LiteralNode.html</anchorfile>
      <anchor>af82012a0c9819ec9671d09d67bae8404</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::LogicalAndNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LogicalAndNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeBinary</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>left</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>a8965234907b33d8866ec5bcaf753786b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AstNode</type>
      <name>right</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>ab7a1571537b1ce9d2ca4d57e1c753704</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LogicalAndNode.html</anchorfile>
      <anchor>ae5aa983d4f648d8321036786e6762a4d</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LogicalAndNode.html</anchorfile>
      <anchor>a860a76a1720c6c0801593ab358034dbb</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::LogicalNotNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LogicalNotNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeUnary</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>child</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeUnary.html</anchorfile>
      <anchor>a194df4e1031d47e94e2718e1bdb18b61</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LogicalNotNode.html</anchorfile>
      <anchor>a9c595a7082a6b9695a32fcd4fb8f2e4b</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LogicalNotNode.html</anchorfile>
      <anchor>a071c87708ef6285703a9a171d369e42f</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::LogicalOrNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LogicalOrNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeBinary</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>left</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>a8965234907b33d8866ec5bcaf753786b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AstNode</type>
      <name>right</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>ab7a1571537b1ce9d2ca4d57e1c753704</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LogicalOrNode.html</anchorfile>
      <anchor>a8f2a4233550880510823b87398fd33da</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1LogicalOrNode.html</anchorfile>
      <anchor>a348349f63c9d31648e0275b264740db9</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::MultiplicationNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1MultiplicationNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeBinary</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>left</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>a8965234907b33d8866ec5bcaf753786b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AstNode</type>
      <name>right</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>ab7a1571537b1ce9d2ca4d57e1c753704</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1MultiplicationNode.html</anchorfile>
      <anchor>a4beaac7a29583fbfdcebf5eabb274e2a</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1MultiplicationNode.html</anchorfile>
      <anchor>a72aff33a7f3fca8534134483cc556ffa</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::NegativeNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1NegativeNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeUnary</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>child</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeUnary.html</anchorfile>
      <anchor>a194df4e1031d47e94e2718e1bdb18b61</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1NegativeNode.html</anchorfile>
      <anchor>adb27ed7a6915955abc4eb9587c3d9267</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1NegativeNode.html</anchorfile>
      <anchor>a2fdbcd32fdd4fe4caca879d9cc00bc29</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::NotEqualNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1NotEqualNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeBinary</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>left</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>a8965234907b33d8866ec5bcaf753786b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AstNode</type>
      <name>right</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>ab7a1571537b1ce9d2ca4d57e1c753704</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1NotEqualNode.html</anchorfile>
      <anchor>a6021657d7c65b3d7ae3b07610c96584b</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1NotEqualNode.html</anchorfile>
      <anchor>a91a37e442b4d0b8888ac7a5761b46332</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::OpaqueNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1OpaqueNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNode</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1OpaqueNode.html</anchorfile>
      <anchor>af19f53c60f5791e862925fafdf9a6ec4</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1OpaqueNode.html</anchorfile>
      <anchor>a4600633c2a29b3448d6504efd1fc023d</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::ScheduleActionIntNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1ScheduleActionIntNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeDynamic</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>ArrayList&lt; AstNode &gt;</type>
      <name>children</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeDynamic.html</anchorfile>
      <anchor>a22f8ab0d2d4ce753a1d3ed2e2dc832f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1ScheduleActionIntNode.html</anchorfile>
      <anchor>a495015729762fdfcda44d3af21cf6175</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1ScheduleActionIntNode.html</anchorfile>
      <anchor>a8bbbbe57a535fd35926ccfd01dd68e3b</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::ScheduleActionNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1ScheduleActionNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeDynamic</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>ArrayList&lt; AstNode &gt;</type>
      <name>children</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeDynamic.html</anchorfile>
      <anchor>a22f8ab0d2d4ce753a1d3ed2e2dc832f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1ScheduleActionNode.html</anchorfile>
      <anchor>a88806a95b0b824f84fcb5b5f39a45935</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1ScheduleActionNode.html</anchorfile>
      <anchor>abe4049170eb783a3b3a6bb04644768fb</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::SetPortNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1SetPortNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeBinary</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>left</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>a8965234907b33d8866ec5bcaf753786b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AstNode</type>
      <name>right</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>ab7a1571537b1ce9d2ca4d57e1c753704</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1SetPortNode.html</anchorfile>
      <anchor>a5dfd24d18ecb57a26b615875c234cc3f</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1SetPortNode.html</anchorfile>
      <anchor>a7ce780791befc72571239520ff79ea57</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::StatementSequenceNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1StatementSequenceNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeDynamic</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>ArrayList&lt; AstNode &gt;</type>
      <name>children</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeDynamic.html</anchorfile>
      <anchor>a22f8ab0d2d4ce753a1d3ed2e2dc832f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1StatementSequenceNode.html</anchorfile>
      <anchor>a387ce3edabbc5b12d8ef905d08c877ed</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1StatementSequenceNode.html</anchorfile>
      <anchor>aa3d9d147540a02b801f53d02f6034e79</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::StateVarNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1StateVarNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNode</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="function">
      <type></type>
      <name>StateVarNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1StateVarNode.html</anchorfile>
      <anchor>a1228ec8419b963d827259199bb8daf23</anchor>
      <arglist>(String name)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1StateVarNode.html</anchorfile>
      <anchor>a363e9525ac84126077833aff01d4752a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>prev</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1StateVarNode.html</anchorfile>
      <anchor>a1313786c2267c90b9fb425b03497b10d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1StateVarNode.html</anchorfile>
      <anchor>a53d61bd488ff2dd597dd1bea3a18b4f4</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1StateVarNode.html</anchorfile>
      <anchor>a6eca7b4e43d455926b0ac1a743815857</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::SubtractionNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1SubtractionNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNodeBinary</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="variable">
      <type>AstNode</type>
      <name>left</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>a8965234907b33d8866ec5bcaf753786b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AstNode</type>
      <name>right</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1AstNodeBinary.html</anchorfile>
      <anchor>ab7a1571537b1ce9d2ca4d57e1c753704</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1SubtractionNode.html</anchorfile>
      <anchor>a7678bce8e8d49a5f4391b4c347cd614e</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1SubtractionNode.html</anchorfile>
      <anchor>ac9f52e0b65ea13903e38091f239d1bbf</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::TriggerIsPresentNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1TriggerIsPresentNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNode</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="function">
      <type></type>
      <name>TriggerIsPresentNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1TriggerIsPresentNode.html</anchorfile>
      <anchor>a9b79571ec7ffb8d01f1c70db9e819227</anchor>
      <arglist>(String name)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1TriggerIsPresentNode.html</anchorfile>
      <anchor>a4fea98a486d8643d3b9c3af5f3802dea</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1TriggerIsPresentNode.html</anchorfile>
      <anchor>a71c2012d12e7563068f23604d393483a</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1TriggerIsPresentNode.html</anchorfile>
      <anchor>a311d8a32b44fd41875b274ea3da63901</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::TriggerValueNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1TriggerValueNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNode</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <member kind="function">
      <type></type>
      <name>TriggerValueNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1TriggerValueNode.html</anchorfile>
      <anchor>aed5d2aad3ec0042af05d9585a8e1f2ad</anchor>
      <arglist>(String name)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1TriggerValueNode.html</anchorfile>
      <anchor>a01829bff63b5d72f1ad0abf7e29bcbd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1TriggerValueNode.html</anchorfile>
      <anchor>ad5ce71e97cefedcb2d8f948c3c6c2da9</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1TriggerValueNode.html</anchorfile>
      <anchor>a437cabfa35132730fe55bff523abcc5c</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CAst::VariableNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1VariableNode.html</filename>
    <base>org.lflang.analyses.c.CAst.AstNode</base>
    <base>org.lflang.analyses.c.Visitable</base>
    <class kind="enum">org::lflang::analyses::c::CAst::VariableNode::Type</class>
    <member kind="function">
      <type></type>
      <name>VariableNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1VariableNode.html</anchorfile>
      <anchor>a984fdf5b01c3c5f16af5b5a387261def</anchor>
      <arglist>(String name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VariableNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1VariableNode.html</anchorfile>
      <anchor>ab61e3f6903dd4d8b2ae632d3d3aac948</anchor>
      <arglist>(Type type, String name)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1VariableNode.html</anchorfile>
      <anchor>a5f4610bfafea33cd85c16a092634bcb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1VariableNode.html</anchorfile>
      <anchor>a0c7bc7ff25ec4e8cb173cd1af80867d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1VariableNode.html</anchorfile>
      <anchor>a88035c875ec2f7974a410f7d985e820f</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1VariableNode.html</anchorfile>
      <anchor>a355eb75796055f0830fa323df7f9dc25</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::analyses::c::CAst::VariableNode::Type</name>
    <filename>enumorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1VariableNode_1_1Type.html</filename>
    <member kind="variable">
      <type></type>
      <name>BOOLEAN</name>
      <anchorfile>enumorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1VariableNode_1_1Type.html</anchorfile>
      <anchor>a31725610f61416f2039ace26b0a195ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>INT</name>
      <anchorfile>enumorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1VariableNode_1_1Type.html</anchorfile>
      <anchor>af3ab2f1d35a15c87fdd9aeaf6a321c81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNKNOWN</name>
      <anchorfile>enumorg_1_1lflang_1_1analyses_1_1c_1_1CAst_1_1VariableNode_1_1Type.html</anchorfile>
      <anchor>aa3f76d1279aa41d1bd1645babb2caf00</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::analyses::c::CAstVisitor</name>
    <filename>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</filename>
    <templarg>T</templarg>
    <base>org.lflang.analyses.c.AstVisitor&lt; T &gt;</base>
    <member kind="function">
      <type>T</type>
      <name>visit</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1AstVisitor.html</anchorfile>
      <anchor>a78d8893d849ffb4bb86e5f0164701fe3</anchor>
      <arglist>(CAst.AstNode tree)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visit</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1AstVisitor.html</anchorfile>
      <anchor>a6b61c3fbc2beac17b2e405a39b76501c</anchor>
      <arglist>(CAst.AstNode tree, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAdditionNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a8a098556a637c169c4e6b87240281673</anchor>
      <arglist>(CAst.AdditionNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAdditionNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>ac453dcb8d5aed9ad70e1b6bb0922a6cb</anchor>
      <arglist>(CAst.AdditionNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAssignmentNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>acb7689ceb5692eb835125e2a3fe7298d</anchor>
      <arglist>(CAst.AssignmentNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAssignmentNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>ad980cc55bb07fd3b418aba8f1f977815</anchor>
      <arglist>(CAst.AssignmentNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a6d4a62e9f8fe12c29c7405eb37bc0069</anchor>
      <arglist>(CAst.AstNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>af3dd2ed602507aedb72a25ed37fb211c</anchor>
      <arglist>(CAst.AstNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeBinary</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>aa14180dcaddc8200a74f21251c763a9a</anchor>
      <arglist>(CAst.AstNodeBinary node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeBinary</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>aaabd4e7cb1529068b9c7fcb09f5e8823</anchor>
      <arglist>(CAst.AstNodeBinary node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeDynamic</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a5369b2d001efa8d644cb2ced372243a4</anchor>
      <arglist>(CAst.AstNodeDynamic node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeDynamic</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>af2785e8373e57f2a03fa5c0cfb66fded</anchor>
      <arglist>(CAst.AstNodeDynamic node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeUnary</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a653dbd9147c55841bf83bb7beacccd7a</anchor>
      <arglist>(CAst.AstNodeUnary node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeUnary</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>afe6b35358093df21e0ad33f793a15735</anchor>
      <arglist>(CAst.AstNodeUnary node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitDivisionNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>adeb412a8e2a268c53682db13e2c09d79</anchor>
      <arglist>(CAst.DivisionNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitDivisionNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>aa301ac210e65c7e84e9d54d35141ca8e</anchor>
      <arglist>(CAst.DivisionNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitEqualNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a0815669e88b4a3f13aab906e1cc9870d</anchor>
      <arglist>(CAst.EqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitEqualNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a9173d0e68d0100cc97433ddb83544485</anchor>
      <arglist>(CAst.EqualNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitGreaterEqualNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a52f99ded08cfd200c0a0eebccde27fe2</anchor>
      <arglist>(CAst.GreaterEqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitGreaterEqualNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>ac1a899c6f9a2806973dd9191953f3b71</anchor>
      <arglist>(CAst.GreaterEqualNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitGreaterThanNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>ac7da63c136afc47006583eafe49a0fe4</anchor>
      <arglist>(CAst.GreaterThanNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitGreaterThanNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a534ba9e75ff04b138edb377942a7c876</anchor>
      <arglist>(CAst.GreaterThanNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitIfBlockNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a00eb4b897fa83ad5341769c23ec2543e</anchor>
      <arglist>(CAst.IfBlockNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitIfBlockNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>abcf654704c2b1885313d3f3834e9edd8</anchor>
      <arglist>(CAst.IfBlockNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitIfBodyNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a0f26fa3c1c14297f8359f35966959afb</anchor>
      <arglist>(CAst.IfBodyNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitIfBodyNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a1bb15e80b482c46037027e889900269b</anchor>
      <arglist>(CAst.IfBodyNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLessEqualNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a96607b634d7afaddc0a4e3ef1e905d2b</anchor>
      <arglist>(CAst.LessEqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLessEqualNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a216411e8648984c3753c0fa0dca27123</anchor>
      <arglist>(CAst.LessEqualNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLessThanNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>adabd4ab987405f38a0efdb43402b7333</anchor>
      <arglist>(CAst.LessThanNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLessThanNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a68006008849ca1aa14fb0e760ecf044b</anchor>
      <arglist>(CAst.LessThanNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLiteralNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a67515349f6defe2b9c2b6aaa8423afda</anchor>
      <arglist>(CAst.LiteralNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLiteralNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a570987398bc1150cfd2e14f916e42b40</anchor>
      <arglist>(CAst.LiteralNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalAndNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>ada24889700cefbef4f97aa035e8fef32</anchor>
      <arglist>(CAst.LogicalAndNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalAndNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a8d2aa8485f7b61b12233f6fb0d6fc484</anchor>
      <arglist>(CAst.LogicalAndNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalNotNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a94cc50b2a17b9341d1a487258b82dee4</anchor>
      <arglist>(CAst.LogicalNotNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalNotNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>aaa8f6bd2609c970e9608c578c3c4891a</anchor>
      <arglist>(CAst.LogicalNotNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalOrNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a87586b2b0c191d799de7cccb7204137f</anchor>
      <arglist>(CAst.LogicalOrNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalOrNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>af607d2ffa5e054bad56c7264dcf3ed0f</anchor>
      <arglist>(CAst.LogicalOrNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitMultiplicationNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>aaed53cda2fb7c7b4c55a97b5655f100b</anchor>
      <arglist>(CAst.MultiplicationNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitMultiplicationNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a57d57c94d5a96caadb428a4b26a4a3cb</anchor>
      <arglist>(CAst.MultiplicationNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitNegativeNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a6313ac1192b6c480bec93468dd7b2cde</anchor>
      <arglist>(CAst.NegativeNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitNegativeNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>ae66c725f671f6330675eea71e562dcbc</anchor>
      <arglist>(CAst.NegativeNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitNotEqualNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a9cab2ff98ade5f49b3e8a659dea59806</anchor>
      <arglist>(CAst.NotEqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitNotEqualNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>ae27ffb5a159a864779924d2119531682</anchor>
      <arglist>(CAst.NotEqualNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitOpaqueNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>ac77be5d0e3905982c98c63ba5b85b9fa</anchor>
      <arglist>(CAst.OpaqueNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitOpaqueNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a415f2f7204267ff506829fefc2bf47d3</anchor>
      <arglist>(CAst.OpaqueNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitScheduleActionIntNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a689a59b257720a221b048dc915eb1645</anchor>
      <arglist>(CAst.ScheduleActionIntNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitScheduleActionIntNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a283af6de4e4bf20f1b5c3f901686a52c</anchor>
      <arglist>(CAst.ScheduleActionIntNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitScheduleActionNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>ae5c2cbeead3fec24e81c6caf9acd863d</anchor>
      <arglist>(CAst.ScheduleActionNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitScheduleActionNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>acfbb84a4fead49097d261901b2a27cae</anchor>
      <arglist>(CAst.ScheduleActionNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitSetPortNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a80cce6f4f36c94b23539d4474a824f40</anchor>
      <arglist>(CAst.SetPortNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitSetPortNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>ac2ffb801d6f399878f455cbe26395e92</anchor>
      <arglist>(CAst.SetPortNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitStatementSequenceNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>ab3cadc6ec5ed2f4480354065c784c794</anchor>
      <arglist>(CAst.StatementSequenceNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitStatementSequenceNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a877895ba2e811c2a4dcd7c7af1b87c5e</anchor>
      <arglist>(CAst.StatementSequenceNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitStateVarNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a833d9cdd070d7e873b996f4f3488dc5e</anchor>
      <arglist>(CAst.StateVarNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitStateVarNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>aa9333afc5ed9084855a61958f89e4b8a</anchor>
      <arglist>(CAst.StateVarNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitSubtractionNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a3f8487a938d7eb139035e18c7d1335e7</anchor>
      <arglist>(CAst.SubtractionNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitSubtractionNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a4c8f5585f8b2c89e2720da91c4586477</anchor>
      <arglist>(CAst.SubtractionNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitTriggerIsPresentNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>ad216c614966edbe1bfc6cb0f70ca56de</anchor>
      <arglist>(CAst.TriggerIsPresentNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitTriggerIsPresentNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a72c8062b68d2838cbe4462fadb7e8ac9</anchor>
      <arglist>(CAst.TriggerIsPresentNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitTriggerValueNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a41658bc7bc0e6f5497a4672ed43200de</anchor>
      <arglist>(CAst.TriggerValueNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitTriggerValueNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>a31e160bcc4e16c17e0d212dfc73d4b64</anchor>
      <arglist>(CAst.TriggerValueNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitVariableNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>aaff55a3968da0ca8cb81d0ccac9cf100</anchor>
      <arglist>(CAst.VariableNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitVariableNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1CAstVisitor.html</anchorfile>
      <anchor>ade39ba6676e7a3ff53b50908b3a6a743</anchor>
      <arglist>(CAst.VariableNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CBaseAstVisitor</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</filename>
    <templarg>T</templarg>
    <base>org.lflang.analyses.c.AbstractAstVisitor&lt; T &gt;</base>
    <base>org.lflang.analyses.c.CAstVisitor&lt; T &gt;</base>
    <member kind="function">
      <type>T</type>
      <name>visit</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1AbstractAstVisitor.html</anchorfile>
      <anchor>a9ee48a093e6a0bbebc39badebcd85cef</anchor>
      <arglist>(CAst.AstNode tree)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visit</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1AbstractAstVisitor.html</anchorfile>
      <anchor>a15a2a25a3fef43816e5ff0189230065b</anchor>
      <arglist>(CAst.AstNode tree, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAdditionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>acda00737969b78fe3729b848b5a4e74f</anchor>
      <arglist>(CAst.AdditionNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAdditionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a2c9ed7af1f48159f2d2ed740063682d2</anchor>
      <arglist>(CAst.AdditionNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAssignmentNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a19cd654deefa9185a66d9ad6940bb76b</anchor>
      <arglist>(CAst.AssignmentNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAssignmentNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aba8da16fa8139cd6b7139f2fe7d7b5ac</anchor>
      <arglist>(CAst.AssignmentNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a28b36f8d746ecc5ee453bca95635d993</anchor>
      <arglist>(CAst.AstNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a305ac69ccae0460b51144c11f92ab305</anchor>
      <arglist>(CAst.AstNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeBinary</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a22943a36b2dce96784e4c946cac0ec70</anchor>
      <arglist>(CAst.AstNodeBinary node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeBinary</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ac901483a3c6d01604cb8e2ca8e1ab4f0</anchor>
      <arglist>(CAst.AstNodeBinary node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeDynamic</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a14c0122190142a746ba4eb2e47b23076</anchor>
      <arglist>(CAst.AstNodeDynamic node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeDynamic</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a01323a71aa1d3fb17310a8447f4b4805</anchor>
      <arglist>(CAst.AstNodeDynamic node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeUnary</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ad8b23ddaa443e11eca1e89361417f189</anchor>
      <arglist>(CAst.AstNodeUnary node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeUnary</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a13641b96ec9e4952e1f0cae1c7252e03</anchor>
      <arglist>(CAst.AstNodeUnary node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitDivisionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aa62734b2882c354c1023c3c148666344</anchor>
      <arglist>(CAst.DivisionNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitDivisionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ad2cac69fda2c17b97cd497ecc138ad28</anchor>
      <arglist>(CAst.DivisionNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a6b31a2ab0cb48440db7bf1f3e6080c9e</anchor>
      <arglist>(CAst.EqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a90481c13b1e726f834446fdddaa3219f</anchor>
      <arglist>(CAst.EqualNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitGreaterEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a51f10bde723ec67f86480882491455bc</anchor>
      <arglist>(CAst.GreaterEqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitGreaterEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a03768715efd844705f1f47a5367c45ec</anchor>
      <arglist>(CAst.GreaterEqualNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitGreaterThanNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a473bd348c438d168f46c871f4424a108</anchor>
      <arglist>(CAst.GreaterThanNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitGreaterThanNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a7688ce793b25f1e2d0ddb71d3a876012</anchor>
      <arglist>(CAst.GreaterThanNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitIfBlockNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a9c6f3778e2c64f11d0baec71957a9bf2</anchor>
      <arglist>(CAst.IfBlockNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitIfBlockNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ab9f7685ab24d8e3e9e0d6b9059ee4faf</anchor>
      <arglist>(CAst.IfBlockNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitIfBodyNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a55ef4c2da6107b243babd1a2cbcb2ff1</anchor>
      <arglist>(CAst.IfBodyNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitIfBodyNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a103d38a04141d58229fc8e0e7f5f8735</anchor>
      <arglist>(CAst.IfBodyNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLessEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ad09f7cc7af55311f3bedce57642460a7</anchor>
      <arglist>(CAst.LessEqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLessEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a711f8e7549c9fb76da1e5668b1eb9e11</anchor>
      <arglist>(CAst.LessEqualNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLessThanNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a5da60c7dfa2b28b567952a02c218b9ce</anchor>
      <arglist>(CAst.LessThanNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLessThanNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>af098a31d3578d4eeba98f4420a1904fc</anchor>
      <arglist>(CAst.LessThanNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLiteralNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a2be7c7237f6feb9e0a6c7b67664b2679</anchor>
      <arglist>(CAst.LiteralNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLiteralNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a1830e8a2ba3c3b6ce6f45547d1fd1e18</anchor>
      <arglist>(CAst.LiteralNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalAndNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ae736cfa31b3a9b7fa993179e81044172</anchor>
      <arglist>(CAst.LogicalAndNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalAndNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>af3191a420e5d3327444cfdc3aec4cd20</anchor>
      <arglist>(CAst.LogicalAndNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalNotNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a4f936081b401119fa30944bdfde8be50</anchor>
      <arglist>(CAst.LogicalNotNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalNotNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a00584e214010ef18ae7b708cf1fe980e</anchor>
      <arglist>(CAst.LogicalNotNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalOrNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ad3e6294490a1c65bfbafaa41a2029044</anchor>
      <arglist>(CAst.LogicalOrNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalOrNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aeff536fe4c1391e065401c86e38619f1</anchor>
      <arglist>(CAst.LogicalOrNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitMultiplicationNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ae7836d083ec742ca3cc289e566551b7f</anchor>
      <arglist>(CAst.MultiplicationNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitMultiplicationNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aee9d74b12c7c7ec686835f6a2e2decee</anchor>
      <arglist>(CAst.MultiplicationNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitNegativeNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ac3f27f7058d1ec7f15daa062b17f0a56</anchor>
      <arglist>(CAst.NegativeNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitNegativeNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a74acb84fcb610722ea2cadd20bfd94d7</anchor>
      <arglist>(CAst.NegativeNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitNotEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>adc4188b85d7beb06eddd820c96d896a8</anchor>
      <arglist>(CAst.NotEqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitNotEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a11765776179b9713a2dd96d0e2f1a5c5</anchor>
      <arglist>(CAst.NotEqualNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitOpaqueNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>af94415b2c3eff3599677e00666edde80</anchor>
      <arglist>(CAst.OpaqueNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitOpaqueNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a522b71f122a84ec28e3a2048d6636d85</anchor>
      <arglist>(CAst.OpaqueNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitScheduleActionIntNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a2b93ac69a80ebcaca5ae201ca09aa9ad</anchor>
      <arglist>(CAst.ScheduleActionIntNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitScheduleActionIntNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a29bdbcb68600f66eb4c62b3d37115c26</anchor>
      <arglist>(CAst.ScheduleActionIntNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitScheduleActionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a817756c3f3ff4dd509de3f7d88a13147</anchor>
      <arglist>(CAst.ScheduleActionNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitScheduleActionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>afbd27ef17319d0ae36782c2c61b6132f</anchor>
      <arglist>(CAst.ScheduleActionNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitSetPortNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aeba173bbf67189399e88da2974f7323b</anchor>
      <arglist>(CAst.SetPortNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitSetPortNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aaa9b55e386fe36115ae34b3318d2b019</anchor>
      <arglist>(CAst.SetPortNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitStatementSequenceNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a95d9306d6857435aa8eebf2501c357d2</anchor>
      <arglist>(CAst.StatementSequenceNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitStatementSequenceNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a8a0c819b5476f6d077d5f7bc7ec70871</anchor>
      <arglist>(CAst.StatementSequenceNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitStateVarNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a6b390143ef5e0592de9f729da612afc2</anchor>
      <arglist>(CAst.StateVarNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitStateVarNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aaa32166acfc37329c6b0e215b4ad2f52</anchor>
      <arglist>(CAst.StateVarNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitSubtractionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aa1f228c1c1bc67ae0f59ccb27a71638d</anchor>
      <arglist>(CAst.SubtractionNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitSubtractionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a7e70146057778c8597ca9e1406aca600</anchor>
      <arglist>(CAst.SubtractionNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitTriggerIsPresentNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a745d46029d4f5343c9f90e945b780851</anchor>
      <arglist>(CAst.TriggerIsPresentNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitTriggerIsPresentNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>af5d3f39f82c78f64d9d3208b338c2f41</anchor>
      <arglist>(CAst.TriggerIsPresentNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitTriggerValueNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aaddda2b30e1096d6250c8b46db5a1610</anchor>
      <arglist>(CAst.TriggerValueNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitTriggerValueNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a94b20e21f7084cc910d24097b346d6db</anchor>
      <arglist>(CAst.TriggerValueNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitVariableNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a64b78802b4f182da761e8d8538570470</anchor>
      <arglist>(CAst.VariableNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitVariableNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a77779fb725b58eac7f65595d2893e72b</anchor>
      <arglist>(CAst.VariableNode node, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::CToUclidVisitor</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</filename>
    <base>org.lflang.analyses.c.CBaseAstVisitor&lt; String &gt;</base>
    <member kind="function">
      <type></type>
      <name>CToUclidVisitor</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>a871022cc1dc999fcbd4d7104dd0331c7</anchor>
      <arglist>(UclidGenerator generator, ReactionInstance.Runtime reaction)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visit</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1AbstractAstVisitor.html</anchorfile>
      <anchor>a9ee48a093e6a0bbebc39badebcd85cef</anchor>
      <arglist>(CAst.AstNode tree)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visit</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1AbstractAstVisitor.html</anchorfile>
      <anchor>a15a2a25a3fef43816e5ff0189230065b</anchor>
      <arglist>(CAst.AstNode tree, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAdditionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>acda00737969b78fe3729b848b5a4e74f</anchor>
      <arglist>(CAst.AdditionNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitAdditionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>a6d76f4e914244887ccc4332915dfd5c6</anchor>
      <arglist>(AdditionNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAssignmentNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a19cd654deefa9185a66d9ad6940bb76b</anchor>
      <arglist>(CAst.AssignmentNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitAssignmentNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>a97b661a79775963129c8470e8371658b</anchor>
      <arglist>(AssignmentNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a28b36f8d746ecc5ee453bca95635d993</anchor>
      <arglist>(CAst.AstNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeBinary</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a22943a36b2dce96784e4c946cac0ec70</anchor>
      <arglist>(CAst.AstNodeBinary node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeDynamic</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a14c0122190142a746ba4eb2e47b23076</anchor>
      <arglist>(CAst.AstNodeDynamic node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeUnary</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ad8b23ddaa443e11eca1e89361417f189</anchor>
      <arglist>(CAst.AstNodeUnary node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitDivisionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aa62734b2882c354c1023c3c148666344</anchor>
      <arglist>(CAst.DivisionNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitDivisionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>ab00e818944bb0504e0eafd01842e7c6b</anchor>
      <arglist>(DivisionNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a6b31a2ab0cb48440db7bf1f3e6080c9e</anchor>
      <arglist>(CAst.EqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>a2692180be49e0581693af2971b105fe5</anchor>
      <arglist>(EqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitGreaterEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a51f10bde723ec67f86480882491455bc</anchor>
      <arglist>(CAst.GreaterEqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitGreaterEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>ad5f83660e3eee9678a3c78ae154ddc81</anchor>
      <arglist>(GreaterEqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitGreaterThanNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a473bd348c438d168f46c871f4424a108</anchor>
      <arglist>(CAst.GreaterThanNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitGreaterThanNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>ae151b6eab0c7460de031b0e51fcd9267</anchor>
      <arglist>(GreaterThanNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitIfBlockNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a9c6f3778e2c64f11d0baec71957a9bf2</anchor>
      <arglist>(CAst.IfBlockNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitIfBlockNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>a96d8c23f17090af067cc82c2a5a3006f</anchor>
      <arglist>(IfBlockNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitIfBodyNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a55ef4c2da6107b243babd1a2cbcb2ff1</anchor>
      <arglist>(CAst.IfBodyNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLessEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ad09f7cc7af55311f3bedce57642460a7</anchor>
      <arglist>(CAst.LessEqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitLessEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>aefce93142e1a034a2046874ec020cb80</anchor>
      <arglist>(LessEqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLessThanNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a5da60c7dfa2b28b567952a02c218b9ce</anchor>
      <arglist>(CAst.LessThanNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitLessThanNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>aba869e00e46a98431935c4a08167b66f</anchor>
      <arglist>(LessThanNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLiteralNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a2be7c7237f6feb9e0a6c7b67664b2679</anchor>
      <arglist>(CAst.LiteralNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitLiteralNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>acceff3019d3be086ae087ad50a7642f2</anchor>
      <arglist>(LiteralNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalAndNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ae736cfa31b3a9b7fa993179e81044172</anchor>
      <arglist>(CAst.LogicalAndNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitLogicalAndNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>ad15d9aff17ea391936ed1656f224311c</anchor>
      <arglist>(LogicalAndNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalNotNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a4f936081b401119fa30944bdfde8be50</anchor>
      <arglist>(CAst.LogicalNotNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitLogicalNotNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>aa203d53cee7fabd8415d7aa757e80d09</anchor>
      <arglist>(LogicalNotNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalOrNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ad3e6294490a1c65bfbafaa41a2029044</anchor>
      <arglist>(CAst.LogicalOrNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitLogicalOrNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>a130954d5fc031f58823d0d4e00653574</anchor>
      <arglist>(LogicalOrNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitMultiplicationNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ae7836d083ec742ca3cc289e566551b7f</anchor>
      <arglist>(CAst.MultiplicationNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitMultiplicationNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>ad53211cea20b7a789ab3e9607cb00850</anchor>
      <arglist>(MultiplicationNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitNegativeNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ac3f27f7058d1ec7f15daa062b17f0a56</anchor>
      <arglist>(CAst.NegativeNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitNegativeNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>a24d10bac43f0eccc6d6f832668bcd67a</anchor>
      <arglist>(NegativeNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitNotEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>adc4188b85d7beb06eddd820c96d896a8</anchor>
      <arglist>(CAst.NotEqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitNotEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>a8dd07530cf205458f9e849079468d59f</anchor>
      <arglist>(NotEqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitOpaqueNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>af94415b2c3eff3599677e00666edde80</anchor>
      <arglist>(CAst.OpaqueNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitScheduleActionIntNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a2b93ac69a80ebcaca5ae201ca09aa9ad</anchor>
      <arglist>(CAst.ScheduleActionIntNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitScheduleActionIntNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>ae337d5670dd2ab5869c5850fdfa9d07a</anchor>
      <arglist>(ScheduleActionIntNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitScheduleActionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a817756c3f3ff4dd509de3f7d88a13147</anchor>
      <arglist>(CAst.ScheduleActionNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitScheduleActionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>aaae79b5c34eb478cf4582fbbe11e0d97</anchor>
      <arglist>(ScheduleActionNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitSetPortNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aeba173bbf67189399e88da2974f7323b</anchor>
      <arglist>(CAst.SetPortNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitSetPortNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>a2f7dff0428fb81342d583abbee79c70e</anchor>
      <arglist>(SetPortNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitStatementSequenceNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a95d9306d6857435aa8eebf2501c357d2</anchor>
      <arglist>(CAst.StatementSequenceNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitStatementSequenceNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>aaeaada76e6ef0a9e41ff0bb6cf2ecbd0</anchor>
      <arglist>(StatementSequenceNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitStateVarNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a6b390143ef5e0592de9f729da612afc2</anchor>
      <arglist>(CAst.StateVarNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitStateVarNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>a99d36161abc81324a34ace3e9aae4325</anchor>
      <arglist>(StateVarNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitSubtractionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aa1f228c1c1bc67ae0f59ccb27a71638d</anchor>
      <arglist>(CAst.SubtractionNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitSubtractionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>a77e84faea7d45d13c371e4388abe7f61</anchor>
      <arglist>(SubtractionNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitTriggerIsPresentNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a745d46029d4f5343c9f90e945b780851</anchor>
      <arglist>(CAst.TriggerIsPresentNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitTriggerIsPresentNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>abf653f198a8e0e0f894543d530e70d47</anchor>
      <arglist>(TriggerIsPresentNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitTriggerValueNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aaddda2b30e1096d6250c8b46db5a1610</anchor>
      <arglist>(CAst.TriggerValueNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitTriggerValueNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>a57e5b96fb6d2fd07bb06ff745a2ca1c6</anchor>
      <arglist>(TriggerValueNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitVariableNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a64b78802b4f182da761e8d8538570470</anchor>
      <arglist>(CAst.VariableNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitVariableNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CToUclidVisitor.html</anchorfile>
      <anchor>ab30f5e48beadc87c8d3767afdce302cb</anchor>
      <arglist>(VariableNode node)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::IfNormalFormAstVisitor</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1IfNormalFormAstVisitor.html</filename>
    <base>org.lflang.analyses.c.CBaseAstVisitor&lt; Void &gt;</base>
    <member kind="function">
      <type>T</type>
      <name>visit</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1AbstractAstVisitor.html</anchorfile>
      <anchor>a9ee48a093e6a0bbebc39badebcd85cef</anchor>
      <arglist>(CAst.AstNode tree)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visit</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1AbstractAstVisitor.html</anchorfile>
      <anchor>a15a2a25a3fef43816e5ff0189230065b</anchor>
      <arglist>(CAst.AstNode tree, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAdditionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>acda00737969b78fe3729b848b5a4e74f</anchor>
      <arglist>(CAst.AdditionNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAssignmentNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a19cd654deefa9185a66d9ad6940bb76b</anchor>
      <arglist>(CAst.AssignmentNode node)</arglist>
    </member>
    <member kind="function">
      <type>Void</type>
      <name>visitAssignmentNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1IfNormalFormAstVisitor.html</anchorfile>
      <anchor>adc1b9ec1940baa00009687fd44dbb0f9</anchor>
      <arglist>(CAst.AssignmentNode node, List&lt; CAst.AstNode &gt; conditions)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a28b36f8d746ecc5ee453bca95635d993</anchor>
      <arglist>(CAst.AstNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeBinary</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a22943a36b2dce96784e4c946cac0ec70</anchor>
      <arglist>(CAst.AstNodeBinary node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeDynamic</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a14c0122190142a746ba4eb2e47b23076</anchor>
      <arglist>(CAst.AstNodeDynamic node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeUnary</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ad8b23ddaa443e11eca1e89361417f189</anchor>
      <arglist>(CAst.AstNodeUnary node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitDivisionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aa62734b2882c354c1023c3c148666344</anchor>
      <arglist>(CAst.DivisionNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a6b31a2ab0cb48440db7bf1f3e6080c9e</anchor>
      <arglist>(CAst.EqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitGreaterEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a51f10bde723ec67f86480882491455bc</anchor>
      <arglist>(CAst.GreaterEqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitGreaterThanNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a473bd348c438d168f46c871f4424a108</anchor>
      <arglist>(CAst.GreaterThanNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitIfBlockNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a9c6f3778e2c64f11d0baec71957a9bf2</anchor>
      <arglist>(CAst.IfBlockNode node)</arglist>
    </member>
    <member kind="function">
      <type>Void</type>
      <name>visitIfBlockNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1IfNormalFormAstVisitor.html</anchorfile>
      <anchor>a8e1567014be1719c8190e623096cd61b</anchor>
      <arglist>(CAst.IfBlockNode node, List&lt; CAst.AstNode &gt; conditions)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitIfBodyNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a55ef4c2da6107b243babd1a2cbcb2ff1</anchor>
      <arglist>(CAst.IfBodyNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLessEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ad09f7cc7af55311f3bedce57642460a7</anchor>
      <arglist>(CAst.LessEqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLessThanNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a5da60c7dfa2b28b567952a02c218b9ce</anchor>
      <arglist>(CAst.LessThanNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLiteralNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a2be7c7237f6feb9e0a6c7b67664b2679</anchor>
      <arglist>(CAst.LiteralNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalAndNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ae736cfa31b3a9b7fa993179e81044172</anchor>
      <arglist>(CAst.LogicalAndNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalNotNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a4f936081b401119fa30944bdfde8be50</anchor>
      <arglist>(CAst.LogicalNotNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalOrNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ad3e6294490a1c65bfbafaa41a2029044</anchor>
      <arglist>(CAst.LogicalOrNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitMultiplicationNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ae7836d083ec742ca3cc289e566551b7f</anchor>
      <arglist>(CAst.MultiplicationNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitNegativeNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ac3f27f7058d1ec7f15daa062b17f0a56</anchor>
      <arglist>(CAst.NegativeNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitNotEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>adc4188b85d7beb06eddd820c96d896a8</anchor>
      <arglist>(CAst.NotEqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitOpaqueNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>af94415b2c3eff3599677e00666edde80</anchor>
      <arglist>(CAst.OpaqueNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitScheduleActionIntNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a2b93ac69a80ebcaca5ae201ca09aa9ad</anchor>
      <arglist>(CAst.ScheduleActionIntNode node)</arglist>
    </member>
    <member kind="function">
      <type>Void</type>
      <name>visitScheduleActionIntNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1IfNormalFormAstVisitor.html</anchorfile>
      <anchor>acd6492d7ed65fd9c5f4e16c9158b6cef</anchor>
      <arglist>(CAst.ScheduleActionIntNode node, List&lt; CAst.AstNode &gt; conditions)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitScheduleActionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a817756c3f3ff4dd509de3f7d88a13147</anchor>
      <arglist>(CAst.ScheduleActionNode node)</arglist>
    </member>
    <member kind="function">
      <type>Void</type>
      <name>visitScheduleActionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1IfNormalFormAstVisitor.html</anchorfile>
      <anchor>a18b84c1650030eefc15435e4b144ea54</anchor>
      <arglist>(CAst.ScheduleActionNode node, List&lt; CAst.AstNode &gt; conditions)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitSetPortNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aeba173bbf67189399e88da2974f7323b</anchor>
      <arglist>(CAst.SetPortNode node)</arglist>
    </member>
    <member kind="function">
      <type>Void</type>
      <name>visitSetPortNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1IfNormalFormAstVisitor.html</anchorfile>
      <anchor>af1caf5ebe7197864ba3aae651be20187</anchor>
      <arglist>(CAst.SetPortNode node, List&lt; CAst.AstNode &gt; conditions)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitStatementSequenceNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a95d9306d6857435aa8eebf2501c357d2</anchor>
      <arglist>(CAst.StatementSequenceNode node)</arglist>
    </member>
    <member kind="function">
      <type>Void</type>
      <name>visitStatementSequenceNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1IfNormalFormAstVisitor.html</anchorfile>
      <anchor>af91579304f195607172f82d17fc6f749</anchor>
      <arglist>(CAst.StatementSequenceNode node, List&lt; CAst.AstNode &gt; conditions)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitStateVarNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a6b390143ef5e0592de9f729da612afc2</anchor>
      <arglist>(CAst.StateVarNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitSubtractionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aa1f228c1c1bc67ae0f59ccb27a71638d</anchor>
      <arglist>(CAst.SubtractionNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitTriggerIsPresentNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a745d46029d4f5343c9f90e945b780851</anchor>
      <arglist>(CAst.TriggerIsPresentNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitTriggerValueNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aaddda2b30e1096d6250c8b46db5a1610</anchor>
      <arglist>(CAst.TriggerValueNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitVariableNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a64b78802b4f182da761e8d8538570470</anchor>
      <arglist>(CAst.VariableNode node)</arglist>
    </member>
    <member kind="variable">
      <type>CAst.StatementSequenceNode</type>
      <name>INF</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1IfNormalFormAstVisitor.html</anchorfile>
      <anchor>a93c5a820d091fbff80d3eda4eed6a98c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::c::VariablePrecedenceVisitor</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1c_1_1VariablePrecedenceVisitor.html</filename>
    <base>org.lflang.analyses.c.CBaseAstVisitor&lt; Void &gt;</base>
    <member kind="function">
      <type>T</type>
      <name>visit</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1AbstractAstVisitor.html</anchorfile>
      <anchor>a9ee48a093e6a0bbebc39badebcd85cef</anchor>
      <arglist>(CAst.AstNode tree)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visit</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1AbstractAstVisitor.html</anchorfile>
      <anchor>a15a2a25a3fef43816e5ff0189230065b</anchor>
      <arglist>(CAst.AstNode tree, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAdditionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>acda00737969b78fe3729b848b5a4e74f</anchor>
      <arglist>(CAst.AdditionNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAssignmentNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a19cd654deefa9185a66d9ad6940bb76b</anchor>
      <arglist>(CAst.AssignmentNode node)</arglist>
    </member>
    <member kind="function">
      <type>Void</type>
      <name>visitAssignmentNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1VariablePrecedenceVisitor.html</anchorfile>
      <anchor>a39f6da68e9a408047542b1a28e23b58e</anchor>
      <arglist>(AssignmentNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a28b36f8d746ecc5ee453bca95635d993</anchor>
      <arglist>(CAst.AstNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeBinary</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a22943a36b2dce96784e4c946cac0ec70</anchor>
      <arglist>(CAst.AstNodeBinary node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeDynamic</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a14c0122190142a746ba4eb2e47b23076</anchor>
      <arglist>(CAst.AstNodeDynamic node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitAstNodeUnary</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ad8b23ddaa443e11eca1e89361417f189</anchor>
      <arglist>(CAst.AstNodeUnary node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitDivisionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aa62734b2882c354c1023c3c148666344</anchor>
      <arglist>(CAst.DivisionNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a6b31a2ab0cb48440db7bf1f3e6080c9e</anchor>
      <arglist>(CAst.EqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitGreaterEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a51f10bde723ec67f86480882491455bc</anchor>
      <arglist>(CAst.GreaterEqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitGreaterThanNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a473bd348c438d168f46c871f4424a108</anchor>
      <arglist>(CAst.GreaterThanNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitIfBlockNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a9c6f3778e2c64f11d0baec71957a9bf2</anchor>
      <arglist>(CAst.IfBlockNode node)</arglist>
    </member>
    <member kind="function">
      <type>Void</type>
      <name>visitIfBlockNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1VariablePrecedenceVisitor.html</anchorfile>
      <anchor>a1998620651908b26a5ba5cb63348962d</anchor>
      <arglist>(IfBlockNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitIfBodyNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a55ef4c2da6107b243babd1a2cbcb2ff1</anchor>
      <arglist>(CAst.IfBodyNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLessEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ad09f7cc7af55311f3bedce57642460a7</anchor>
      <arglist>(CAst.LessEqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLessThanNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a5da60c7dfa2b28b567952a02c218b9ce</anchor>
      <arglist>(CAst.LessThanNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLiteralNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a2be7c7237f6feb9e0a6c7b67664b2679</anchor>
      <arglist>(CAst.LiteralNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalAndNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ae736cfa31b3a9b7fa993179e81044172</anchor>
      <arglist>(CAst.LogicalAndNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalNotNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a4f936081b401119fa30944bdfde8be50</anchor>
      <arglist>(CAst.LogicalNotNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitLogicalOrNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ad3e6294490a1c65bfbafaa41a2029044</anchor>
      <arglist>(CAst.LogicalOrNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitMultiplicationNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ae7836d083ec742ca3cc289e566551b7f</anchor>
      <arglist>(CAst.MultiplicationNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitNegativeNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>ac3f27f7058d1ec7f15daa062b17f0a56</anchor>
      <arglist>(CAst.NegativeNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitNotEqualNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>adc4188b85d7beb06eddd820c96d896a8</anchor>
      <arglist>(CAst.NotEqualNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitOpaqueNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>af94415b2c3eff3599677e00666edde80</anchor>
      <arglist>(CAst.OpaqueNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitScheduleActionIntNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a2b93ac69a80ebcaca5ae201ca09aa9ad</anchor>
      <arglist>(CAst.ScheduleActionIntNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitScheduleActionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a817756c3f3ff4dd509de3f7d88a13147</anchor>
      <arglist>(CAst.ScheduleActionNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitSetPortNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aeba173bbf67189399e88da2974f7323b</anchor>
      <arglist>(CAst.SetPortNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitStatementSequenceNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a95d9306d6857435aa8eebf2501c357d2</anchor>
      <arglist>(CAst.StatementSequenceNode node)</arglist>
    </member>
    <member kind="function">
      <type>Void</type>
      <name>visitStatementSequenceNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1VariablePrecedenceVisitor.html</anchorfile>
      <anchor>a6852c9cb7e29fd1ba87fafa4dd275eb9</anchor>
      <arglist>(StatementSequenceNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitStateVarNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a6b390143ef5e0592de9f729da612afc2</anchor>
      <arglist>(CAst.StateVarNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitSubtractionNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aa1f228c1c1bc67ae0f59ccb27a71638d</anchor>
      <arglist>(CAst.SubtractionNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitTriggerIsPresentNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a745d46029d4f5343c9f90e945b780851</anchor>
      <arglist>(CAst.TriggerIsPresentNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitTriggerValueNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>aaddda2b30e1096d6250c8b46db5a1610</anchor>
      <arglist>(CAst.TriggerValueNode node)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>visitVariableNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1c_1_1CBaseAstVisitor.html</anchorfile>
      <anchor>a64b78802b4f182da761e8d8538570470</anchor>
      <arglist>(CAst.VariableNode node)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::analyses::c::Visitable</name>
    <filename>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1Visitable.html</filename>
    <member kind="function">
      <type>&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1Visitable.html</anchorfile>
      <anchor>a7ba0f101cca3417db36f4f6573128fac</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor)</arglist>
    </member>
    <member kind="function">
      <type>&lt; T &gt; T</type>
      <name>accept</name>
      <anchorfile>interfaceorg_1_1lflang_1_1analyses_1_1c_1_1Visitable.html</anchorfile>
      <anchor>a940e6f4f01b7ddb52b46b86853cf9ef6</anchor>
      <arglist>(AstVisitor&lt;? extends T &gt; visitor, List&lt; CAst.AstNode &gt; nodeList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::statespace::Event</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1statespace_1_1Event.html</filename>
    <member kind="function">
      <type>int</type>
      <name>compareTo</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1Event.html</anchorfile>
      <anchor>a87f97b8bdbf1e03b419273a8e3e58baf</anchor>
      <arglist>(Event e)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Event</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1Event.html</anchorfile>
      <anchor>a7db3da0f466db3b2e7c198daebdd5863</anchor>
      <arglist>(TriggerInstance trigger, Tag tag)</arglist>
    </member>
    <member kind="function">
      <type>Tag</type>
      <name>getTag</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1Event.html</anchorfile>
      <anchor>ac308b8004ad412837bf32467839fb4ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TriggerInstance&lt;?&gt;</type>
      <name>getTrigger</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1Event.html</anchorfile>
      <anchor>ac441be90b07aebb4ceb7a438760db6a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasSameTriggers</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1Event.html</anchorfile>
      <anchor>a9399c815390ca6d42c64eb6a638a93cd</anchor>
      <arglist>(Object o)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1Event.html</anchorfile>
      <anchor>aad4103281f42bf68e212684aa45883f5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::statespace::EventQueue</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1statespace_1_1EventQueue.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>add</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1EventQueue.html</anchorfile>
      <anchor>a094545145df7b0d2e1dd7c54ee721f30</anchor>
      <arglist>(Event e)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::statespace::StateInfo</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateInfo.html</filename>
    <member kind="function">
      <type>void</type>
      <name>display</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateInfo.html</anchorfile>
      <anchor>a669590a138274001144cfe67ea562169</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>HashMap&lt; String, String &gt;</type>
      <name>payloads</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateInfo.html</anchorfile>
      <anchor>a48da775e384a6227a661835be2fcc343</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ArrayList&lt; String &gt;</type>
      <name>reactions</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateInfo.html</anchorfile>
      <anchor>a2244a791c42ed9d707788cbf61c8f03b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HashMap&lt; String, String &gt;</type>
      <name>scheduled</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateInfo.html</anchorfile>
      <anchor>ae0e9b783490dcfa404ce1d11dc3e06dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Tag</type>
      <name>tag</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateInfo.html</anchorfile>
      <anchor>a145b2e3d3921ed1762b13d0b33d8d2b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HashMap&lt; String, String &gt;</type>
      <name>triggers</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateInfo.html</anchorfile>
      <anchor>abd95110c4c2d72df4f167ba47ce1aaf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HashMap&lt; String, String &gt;</type>
      <name>variables</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateInfo.html</anchorfile>
      <anchor>ac0d8b5488404a54ebae7ac116240a30b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::statespace::StateSpaceDiagram</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceDiagram.html</filename>
    <base>org.lflang.graph.DirectedGraph&lt; T &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>addEdge</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a79976fea3b8edfe34d5acd1fe03a657d</anchor>
      <arglist>(T sink, T source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEdges</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a6e02cd9b2b9d7aea518ab6258d54499f</anchor>
      <arglist>(T sink, List&lt; T &gt; sources)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceDiagram.html</anchorfile>
      <anchor>a650c5fd56aa4ca14691858185c873065</anchor>
      <arglist>(StateSpaceNode node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNode</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a1823b6dbd01d14f962977e12f8039a04</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a84014f8e63978cc9d878ae9e6f699ccf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DirectedGraph&lt; T &gt;</type>
      <name>copy</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a831d7cce6b02b9bcb420e806e9dff101</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>display</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceDiagram.html</anchorfile>
      <anchor>a03c53d1534f07b38a53a752a06802e78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>edgeCount</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>af936723670ae67027e8ebc5939ee608b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CodeBuilder</type>
      <name>generateDot</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceDiagram.html</anchorfile>
      <anchor>a7a61133f2de5150b48a8456d7b64e6e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>getDownstreamAdjacentNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>aa2040d57bb667d0873929a28087f5f84</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>StateSpaceNode</type>
      <name>getDownstreamNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceDiagram.html</anchorfile>
      <anchor>a8aa031be55ad4457cd846958b0fa67b3</anchor>
      <arglist>(StateSpaceNode node)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>getUpstreamAdjacentNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>abf2060c566c6d70029955b62bf7f0950</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasNode</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>ac0c59e8f8ecfc71f3d9d3049eb68bff3</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>leafNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>af29fe843aa5ca59f94600394d98fcc91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>adf02be5b4e0170a644398205a05fd88d</anchor>
      <arglist>(DirectedGraph&lt; T &gt; another)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nodeCount</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a0873d1c38d0b96b72fbf53922bc66852</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>nodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a6c2707742551e842c6451df76545216d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEdge</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a754c594897046d2a03f3d3b160d9a55e</anchor>
      <arglist>(T sink, T source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeNode</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a72a5ccacfb9e69eeeb7d38304483885f</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>rootNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a0586417c29ca2eff77a5bb77afae5b87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toDOT</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a64d921937ae05f6c2639fcf066fe250e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>abf3d4686cb6dc873f5129b0d0c014591</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>StateSpaceNode</type>
      <name>head</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceDiagram.html</anchorfile>
      <anchor>a119bd3ed5f8ce4b0c17f8fdb42fe3452</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StateSpaceNode</type>
      <name>loopNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceDiagram.html</anchorfile>
      <anchor>acb1249aa44460fba1d87374a265bc90c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StateSpaceNode</type>
      <name>loopNodeNext</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceDiagram.html</anchorfile>
      <anchor>a608601ec8aee481f3efa232a2e3d8d4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long</type>
      <name>loopPeriod</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceDiagram.html</anchorfile>
      <anchor>a1d48211d739926277c799408f9b2386d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StateSpaceNode</type>
      <name>tail</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceDiagram.html</anchorfile>
      <anchor>a0ea1eae615e57c74c2b6a0f2089cbfa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>graphChanged</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a1b9eefb1995eccc2354908a929cbb2ed</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::statespace::StateSpaceExplorer</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceExplorer.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addInitialEvents</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceExplorer.html</anchorfile>
      <anchor>a1b0fb8cfb38f86f04075569e0cb72262</anchor>
      <arglist>(ReactorInstance reactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>explore</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceExplorer.html</anchorfile>
      <anchor>a853da419a459ba61507176a779593653</anchor>
      <arglist>(Tag horizon, boolean findLoop)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StateSpaceExplorer</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceExplorer.html</anchorfile>
      <anchor>a896b61f90c5838826bd59c6f3ca403d1</anchor>
      <arglist>(ReactorInstance main)</arglist>
    </member>
    <member kind="variable">
      <type>StateSpaceDiagram</type>
      <name>diagram</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceExplorer.html</anchorfile>
      <anchor>a8121b54d9505bbe846778c89958299f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventQueue</type>
      <name>eventQ</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceExplorer.html</anchorfile>
      <anchor>ae333db1687bbe17e2fb1faf57aa8240f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>loopFound</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceExplorer.html</anchorfile>
      <anchor>a51a51d9fce576d20bdbb7585c9796dec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ReactorInstance</type>
      <name>main</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceExplorer.html</anchorfile>
      <anchor>a67b25172de431aa495badc76bbcf914a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::statespace::StateSpaceNode</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceNode.html</filename>
    <member kind="function">
      <type>void</type>
      <name>display</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceNode.html</anchorfile>
      <anchor>a1e757eb1650aa7a795b7786553f1f2e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayList&lt; Event &gt;</type>
      <name>getEventQcopy</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceNode.html</anchorfile>
      <anchor>aefa54178b7ed6a307ef91f5b8c839c41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndex</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceNode.html</anchorfile>
      <anchor>acfec817cb4750de1ad15f9d27c346e5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>getReactionsInvoked</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceNode.html</anchorfile>
      <anchor>a4b00cc3cf112682906f9a4a94c923861</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Tag</type>
      <name>getTag</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceNode.html</anchorfile>
      <anchor>a2a2b72db63c1540519f9044d5511b022</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeValue</type>
      <name>getTime</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceNode.html</anchorfile>
      <anchor>a28aaa7d94180d1ad8ee020c13d597115</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hash</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceNode.html</anchorfile>
      <anchor>aff7623813c93782ad2ef0177d9565b6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEventQcopy</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceNode.html</anchorfile>
      <anchor>a70679d899c0f92c5f41bcdd06d533901</anchor>
      <arglist>(ArrayList&lt; Event &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIndex</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceNode.html</anchorfile>
      <anchor>a56aa376bcabd0bc1e70bc5894d5818e8</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StateSpaceNode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceNode.html</anchorfile>
      <anchor>afd7da6bb9d5399730686965bd475c38d</anchor>
      <arglist>(Tag tag, Set&lt; ReactionInstance &gt; reactionsInvoked, ArrayList&lt; Event &gt; eventQcopy)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1StateSpaceNode.html</anchorfile>
      <anchor>a94a8658fb377eed02a3a07712243ec2a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::statespace::Tag</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1statespace_1_1Tag.html</filename>
    <member kind="function">
      <type>int</type>
      <name>compareTo</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1Tag.html</anchorfile>
      <anchor>a80fc9e4c13306e6c1902c960796f790f</anchor>
      <arglist>(Tag t)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1Tag.html</anchorfile>
      <anchor>ae68900056f9bf8c4e25a33ef6e607c0e</anchor>
      <arglist>(Object o)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tag</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1Tag.html</anchorfile>
      <anchor>a646572edb39a32672403eed3b303d30e</anchor>
      <arglist>(long timestamp, long microstep, boolean forever)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1Tag.html</anchorfile>
      <anchor>a02802bace8f78df287f99bf290cdd3d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>final boolean</type>
      <name>forever</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1Tag.html</anchorfile>
      <anchor>ab7e5f28653de64ba5f8ac2c873018a65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final long</type>
      <name>microstep</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1Tag.html</anchorfile>
      <anchor>a6e5437bb2f7aee854d161e7791665714</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final long</type>
      <name>timestamp</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1statespace_1_1Tag.html</anchorfile>
      <anchor>a92e431889a18d853197cd9c1e22cfd4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::uclid::MTLVisitor</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</filename>
    <member kind="function">
      <type>String</type>
      <name>_visitUnaryOp</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>a979eb1083a81adf1f444634f6d1b95a7</anchor>
      <arglist>(MTLParser.UnaryOpContext ctx, String prefixIdx, int QFIdx, String prevPrefixIdx, long horizon)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getHorizon</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>a9afa6760f19480736159a16efd304a65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MTLVisitor</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>adf7b53d363ab0b891fc40f880c07e7bf</anchor>
      <arglist>(Tactic tactic)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitAtomicProp</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>ac26f375307a4e53ec71f97e8e8aa9965</anchor>
      <arglist>(MTLParser.AtomicPropContext ctx, String prefixIdx, int QFIdx, String prevPrefixIdx, long horizon)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitConjunction</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>ac79c78272607e2d1d35fa8d7868b5216</anchor>
      <arglist>(MTLParser.ConjunctionContext ctx, String prefixIdx, int QFIdx, String prevPrefixIdx, long horizon)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitDifference</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>ab9ba328222222ef0a8619301b9ee95bc</anchor>
      <arglist>(MTLParser.DifferenceContext ctx, String prefixIdx, int QFIdx, String prevPrefixIdx, long horizon)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitDisjunction</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>a4cfb899419b71835f39ca7bfa84e6747</anchor>
      <arglist>(MTLParser.DisjunctionContext ctx, String prefixIdx, int QFIdx, String prevPrefixIdx, long horizon)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitEquivalence</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>a0dc9af9e2eb7858fc8894f801b288a55</anchor>
      <arglist>(MTLParser.EquivalenceContext ctx, String prefixIdx, int QFIdx, String prevPrefixIdx, long horizon)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitExpr</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>abd88ac9a04437d651767955085e4a5d3</anchor>
      <arglist>(MTLParser.ExprContext ctx, String prefixIdx, int QFIdx, String prevPrefixIdx, long horizon)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitFinally</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>ad0a860cdb8d6b883507b9f430f068086</anchor>
      <arglist>(MTLParser.FinallyContext ctx, String prefixIdx, int QFIdx, String prevPrefixIdx, long horizon)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitGlobally</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>a918461216b474229a4ebc0cd3b338492</anchor>
      <arglist>(MTLParser.GloballyContext ctx, String prefixIdx, int QFIdx, String prevPrefixIdx, long horizon)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitImplication</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>ae9e4ebc461fa2e01b16c3ec7a6ac4d3b</anchor>
      <arglist>(MTLParser.ImplicationContext ctx, String prefixIdx, int QFIdx, String prevPrefixIdx, long horizon)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitMtl</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>a413bbc96b4681f3ca7a967eb7b348bac</anchor>
      <arglist>(MTLParser.MtlContext ctx, String prefixIdx, int QFIdx, String prevPrefixIdx, long horizon)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitNegation</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>aa176a29af13a9c468ea56cf65f4fc165</anchor>
      <arglist>(MTLParser.NegationContext ctx, String prefixIdx, int QFIdx, String prevPrefixIdx, long horizon)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitNext</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>af2727c1e46affcf85bf58eca0551750c</anchor>
      <arglist>(MTLParser.NextContext ctx, String prefixIdx, int QFIdx, String prevPrefixIdx, long horizon)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitNoUnaryOp</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>a4a870f2fe37ab98abc9a954b1179a456</anchor>
      <arglist>(MTLParser.NoUnaryOpContext ctx, String prefixIdx, int QFIdx, String prevPrefixIdx, long horizon)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitPrimary</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>a68c0687b51739f4cf0ee8c2cc3226e58</anchor>
      <arglist>(MTLParser.PrimaryContext ctx, String prefixIdx, int QFIdx, String prevPrefixIdx, long horizon)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitProduct</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>a8149ca6e44fba76cc973de3d966a8d00</anchor>
      <arglist>(MTLParser.ProductContext ctx, String prefixIdx, int QFIdx, String prevPrefixIdx, long horizon)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitQuotient</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>aa96e2e2bc7abd74be0baa489aca47dc4</anchor>
      <arglist>(MTLParser.QuotientContext ctx, String prefixIdx, int QFIdx, String prevPrefixIdx, long horizon)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitSum</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>a203681ae606df67a779b2a6e0591f215</anchor>
      <arglist>(MTLParser.SumContext ctx, String prefixIdx, int QFIdx, String prevPrefixIdx, long horizon)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>visitUntil</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>a5ff10d85072fc2b7150509c13f2d4251</anchor>
      <arglist>(MTLParser.UntilContext ctx, String prefixIdx, int QFIdx, String prevPrefixIdx, long horizon)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CodeBuilder</type>
      <name>code</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>a0f6dfd771645ee8d7a60689bc39f3ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long</type>
      <name>horizon</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>aab5b66e1508e06701e8c755624b3e696</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Tactic</type>
      <name>tactic</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1MTLVisitor.html</anchorfile>
      <anchor>a78c264a369d9cafd4a41af660571d436</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::uclid::UclidGenerator</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</filename>
    <base>org.lflang.generator.GeneratorBase</base>
    <class kind="enum">org::lflang::analyses::uclid::UclidGenerator::Tactic</class>
    <member kind="function">
      <type>void</type>
      <name>doGenerate</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>a3a8fc0dedb678438db14d167f62800b1</anchor>
      <arglist>(Resource resource, LFGeneratorContext context)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>errorsOccurred</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a4bfcd2402734c85e95a48adec2469ecd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GeneratorCommandFactory</type>
      <name>getCommandFactory</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a9b51c74f19faa0824615a88441fcec9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Instantiation</type>
      <name>getMainDef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a336488d0091b4ac7209758abf7ab0290</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getReactionBankIndex</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a467957ed9c6c738b60bccdb0b97f1004</anchor>
      <arglist>(Reaction reaction)</arglist>
    </member>
    <member kind="function">
      <type>Target</type>
      <name>getTarget</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>a4e442ae56d83d7da2b66ac89b845bb37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TargetConfig</type>
      <name>getTargetConfig</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a5e78d5eb676f985a18d026030728e623</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TargetTypes</type>
      <name>getTargetTypes</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>aa594f80cc82a6a9d5206d2f25ef33e89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printInfo</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>aefc1b3ca1f8d97f8698e6fbe3165f720</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reportCommandErrors</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>aaeb55fee83eaf9360d71dcd8f943ab40</anchor>
      <arglist>(String stderr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReactionBankIndex</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a377eb5ed8dcd6bb63316f5f6de1a63bc</anchor>
      <arglist>(Reaction reaction, int bankIndex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UclidGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>ac24cc8792b11c54c27608ae1ddeb5cb3</anchor>
      <arglist>(LFGeneratorContext context, List&lt; Attribute &gt; properties)</arglist>
    </member>
    <member kind="variable">
      <type>List&lt; ActionInstance &gt;</type>
      <name>actionInstances</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>ae21c53deb45f8130ad41a24644e38fad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final LFGeneratorContext</type>
      <name>context</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a5d8b3a0c17a0d139e2c6e9ef8dff5f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>CT</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>a0761b9664bc500b173ef49f92646dbf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Map&lt; Path, String &gt;</type>
      <name>expectations</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>ad3f88801dd345919f6921f35aef4f450</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; Path &gt;</type>
      <name>generatedFiles</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>a73bcae06d8a17fba5a1ec003afa53b65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>hasModalReactors</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>abbc8eb791ff878c8a4c2455317bc2356</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>hasWatchdogs</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a16ad311724fcd9a9c3fe518e1c3867ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ReactorInstance</type>
      <name>main</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a15120128a9146cf649a0defbf050e0b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MessageReporter</type>
      <name>messageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a667b3435299a11670e38d5446144ad89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; NamedInstance &gt;</type>
      <name>namedInstances</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>a31b1a8e7512a17e0ed8265a8671e8123</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Path</type>
      <name>outputDir</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>a1a25f81e515462c5e51dbda4432568cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; ReactionInstance.Runtime &gt;</type>
      <name>reactionInstances</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>aba47e8518edbdfb9a5c1257131ec9390</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UclidRunner</type>
      <name>runner</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>a08b95d2b4441a6a285cc4ed50f3cc389</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; TriggerInstance &gt;</type>
      <name>triggerInstances</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>ac33a36fe72b719499596a03abe60bf90</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>additionalPostProcessingForModes</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a3471e4881e3f2ac3c90d67f04250f38e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>buildUsingDocker</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>afb0e93b376214115893f8482add44d02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkModalReactorSupport</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a9fa510d65403927b6d5b3bac927a02b6</anchor>
      <arglist>(boolean isSupported)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkWatchdogSupport</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a64c3e94a38cac0ce103d2e264c83db27</anchor>
      <arglist>(boolean isSupported)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>cleanIfNeeded</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>aaa20bf0994f7162a7be5476a3a2de1f0</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>copyUserFiles</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a6db28beb3f6ffb5ba51f2570f15474cb</anchor>
      <arglist>(TargetConfig targetConfig, FileConfig fileConfig)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createMainInstantiation</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a99817f623739bf8840acc2c2f12f4351</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateActionAxioms</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>a5062b3e6801ad2b7a58e7c18ed70a16c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateConnectionAxioms</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>aaab35b018afa1d4c2eba85eb3ed74e62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateControlBlock</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>a77fe4f1192ff76f4ed4f6bf2e2efd92f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateInitialConditions</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>a0ffde6a9c62f241c928484354aca40b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateProperty</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>a6817752e62592ee9c7f093752dfcdffd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateReactionAxioms</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>ad7cf5ac9ae92e50721fbabe427c47e5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateReactionIdsAndStateVars</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>a4ca14b8c5785aa889968084563f525fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateReactionTriggerAxioms</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>ac13603ea885d4f6124faf392366bd6e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateReactorSemantics</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>a0a9edb2a30b28cb4e8ed4f19035268d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateTimerAxioms</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>a97975f1356398e6b100ddd1b77521256</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateTimingSemantics</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>a18adc46b34c4e6a8520020834c193184</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateTraceDefinition</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>a52ce0ea83cdffcd8a7b103bb32b3de4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateTriggersAndReactions</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>aa49bb5dfad8ee39ac7c338e740bc573a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateUclidCode</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>af3358f6a199d73cd605d3063aadf7535</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateUclidFile</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>a4286fc6ee7985cae31031efa6b527132</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>getConflictingConnectionsInModalReactorsBody</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>aaba754fe24422d5beaafbd3fb2ca0259</anchor>
      <arglist>(VarRef source, VarRef dest)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>DockerGenerator</type>
      <name>getDockerGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator.html</anchorfile>
      <anchor>ac86944b4aec6b5b540dde787d6a5ed98</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ErrorFileAndLine</type>
      <name>parseCommandOutput</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>ac93f5e61a886e94ad600f4ddd1532b50</anchor>
      <arglist>(String line)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerTransformation</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a2e38efc5be65b8ce39fa751caeecb2d7</anchor>
      <arglist>(AstTransformation transformation)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setReactorsAndInstantiationGraph</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a651b7331a0a87503d0f674f8d9ea182e</anchor>
      <arglist>(LFGeneratorContext.Mode mode)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GeneratorCommandFactory</type>
      <name>commandFactory</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a4bfacb8fb4e80bb444d1c1ff4fb773b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>InstantiationGraph</type>
      <name>instantiationGraph</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a6c4bab272ae039836ea92bfff851fc8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Instantiation</type>
      <name>mainDef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a596a9538e19ceca48377bfa7e6279ce9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Map&lt; Reaction, Integer &gt;</type>
      <name>reactionBankIndices</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>aaba9f3fc436a133cd61a140967e73706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>List&lt; Reactor &gt;</type>
      <name>reactors</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>adf20e0d64aa14fda544445708d6fdf51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final TargetConfig</type>
      <name>targetConfig</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a3b9c60edb15a9b1584a07732bb7c5e65</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::analyses::uclid::UclidGenerator::Tactic</name>
    <filename>enumorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator_1_1Tactic.html</filename>
    <member kind="variable">
      <type></type>
      <name>BMC</name>
      <anchorfile>enumorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator_1_1Tactic.html</anchorfile>
      <anchor>a7dfa8965469410da623b739a058e6ffb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>INDUCTION</name>
      <anchorfile>enumorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidGenerator_1_1Tactic.html</anchorfile>
      <anchor>a2165d748a4ca5447f3a3fa465054546a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::analyses::uclid::UclidRunner</name>
    <filename>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidRunner.html</filename>
    <member kind="function">
      <type>StateInfo</type>
      <name>parseStateInfo</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidRunner.html</anchorfile>
      <anchor>ac3f1cc9f09601a61cb41c624a9648d88</anchor>
      <arglist>(String smtStr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidRunner.html</anchorfile>
      <anchor>a3426897cfb4f521d20d4d0f06d39e71e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UclidRunner</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidRunner.html</anchorfile>
      <anchor>ae878ec5b99778163b84637fffef3de79</anchor>
      <arglist>(UclidGenerator generator)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>GeneratorCommandFactory</type>
      <name>commandFactory</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidRunner.html</anchorfile>
      <anchor>a49416588bc1b618e2d6ef0b697854be9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>UclidGenerator</type>
      <name>generator</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidRunner.html</anchorfile>
      <anchor>ab0d81607ea7a420a340a3e980816422b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>MessageReporter</type>
      <name>reporter</name>
      <anchorfile>classorg_1_1lflang_1_1analyses_1_1uclid_1_1UclidRunner.html</anchorfile>
      <anchor>a55acc786a3c6d10de0b4b0ae2e955881</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::ast::AstTransformation</name>
    <filename>interfaceorg_1_1lflang_1_1ast_1_1AstTransformation.html</filename>
    <member kind="function">
      <type>void</type>
      <name>applyTransformation</name>
      <anchorfile>interfaceorg_1_1lflang_1_1ast_1_1AstTransformation.html</anchorfile>
      <anchor>a1364195c302212fb923035cb0b0e007d</anchor>
      <arglist>(List&lt; Reactor &gt; reactors)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::ast::ASTUtils</name>
    <filename>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addReactionAttribute</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a61a25f1794a06e70fa046a7481b4aba0</anchor>
      <arglist>(Reaction reaction, String name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>addZeroToLeadingDot</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a923207e6300628713bbf87a59d4d59d2</anchor>
      <arglist>(String literal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; Action &gt;</type>
      <name>allActions</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a890ac3e003f30f1f2e09e1085d281379</anchor>
      <arglist>(Reactor definition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; Connection &gt;</type>
      <name>allConnections</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a3f0ffcc68adb5225e63e44b6060e8338</anchor>
      <arglist>(Reactor definition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static&lt; T extends EObject &gt; Iterable&lt; T &gt;</type>
      <name>allElementsOfClass</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a881d6607d5f2e4c86a26de178f8f7496</anchor>
      <arglist>(Resource resource, Class&lt; T &gt; elementClass)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LinkedHashSet&lt; Preamble &gt;</type>
      <name>allFileLevelPreambles</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a13778f011fbe670abe7e25fce2a50453</anchor>
      <arglist>(Reactor reactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; Input &gt;</type>
      <name>allInputs</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a2b8fadfb705167ebb70bdb94cd7fee91</anchor>
      <arglist>(Reactor definition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; Instantiation &gt;</type>
      <name>allInstantiations</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ab4d92c0070017343f8881f60ef175563</anchor>
      <arglist>(Reactor definition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; Method &gt;</type>
      <name>allMethods</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ac1d6f71e3c30be264693c7b01c2c4fea</anchor>
      <arglist>(Reactor definition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; Mode &gt;</type>
      <name>allModes</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a8e2397fd65ae2e2dbefde31cc854421d</anchor>
      <arglist>(Reactor definition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Stream&lt; Reactor &gt;</type>
      <name>allNestedClasses</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ae62bf38443143f5ae1cba879ba01ee84</anchor>
      <arglist>(Reactor definition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; Output &gt;</type>
      <name>allOutputs</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a7c5abff89b512f31cc55db9076d02f9d</anchor>
      <arglist>(Reactor definition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; Parameter &gt;</type>
      <name>allParameters</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a7287c430d326a14286437307afe0ca9d</anchor>
      <arglist>(Reactor definition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; Port &gt;</type>
      <name>allPorts</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a00e829763a01b7fa30caf2971fa0492c</anchor>
      <arglist>(Reactor definition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; Preamble &gt;</type>
      <name>allPreambles</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ad51768bfb0abbda77468419cd445118b</anchor>
      <arglist>(Reactor definition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; Reaction &gt;</type>
      <name>allReactions</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a7c5adafb00297428378e45369cf34816</anchor>
      <arglist>(Reactor definition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; StateVar &gt;</type>
      <name>allStateVars</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a53734494c8f233c62428d01cadc9f2e9</anchor>
      <arglist>(Reactor definition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; Timer &gt;</type>
      <name>allTimers</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ad67216fd631ceb79c486937712ee0fae</anchor>
      <arglist>(Reactor definition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; Watchdog &gt;</type>
      <name>allWatchdogs</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>af03a5eeb27f4c770f5efa50d2b9891f3</anchor>
      <arglist>(Reactor definition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>baseType</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a225b6c632726650b28237da26be422f3</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>belongsTo</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a629b8d6326c0e517a273db945add27bd</anchor>
      <arglist>(EObject eobject, Instantiation instantiation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>belongsTo</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a70480616aa2d318eb3821a7f9da193a7</anchor>
      <arglist>(EObject eobject, Reactor reactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>changeTargetName</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a6d7d5f665acdaf170b04d1124c1f620d</anchor>
      <arglist>(Resource resource, String newTargetName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static&lt; T extends EObject &gt; List&lt; T &gt;</type>
      <name>collectElements</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a887c058c7b60804437bd80b9d37b6c5b</anchor>
      <arglist>(Reactor definition, EStructuralFeature feature)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static&lt; T extends EObject &gt; List&lt; T &gt;</type>
      <name>collectElements</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ab1cc7d638cfa6016068b4923435b77bf</anchor>
      <arglist>(Reactor definition, EStructuralFeature feature, boolean includeSuperClasses, boolean includeModes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static&lt; T &gt; List&lt; T &gt;</type>
      <name>convertToEmptyListIfNull</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ac76d7b4c68d60dbb66625bae34421a87</anchor>
      <arglist>(List&lt; T &gt; list)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Instantiation</type>
      <name>createInstantiation</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a7f48ad014122efd603f56790bbffae92</anchor>
      <arglist>(Reactor reactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ReactorInstance</type>
      <name>createMainReactorInstance</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ab5ee7ced60eebd5756c6ca7a0bae7ee1</anchor>
      <arglist>(Instantiation mainDef, List&lt; Reactor &gt; reactors, MessageReporter messageReporter, TargetConfig targetConfig)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; String &gt;</type>
      <name>elementToListOfStrings</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a857d272d57b4104b646fec17bade4e0f</anchor>
      <arglist>(Element value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>elementToSingleString</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>af5abf045e3360ad49dfa9075ab2032d8</anchor>
      <arglist>(Element e)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Map&lt; String, String &gt;</type>
      <name>elementToStringMaps</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>af0ec7edb3b1b649c11c7ab4c5883a1b5</anchor>
      <arglist>(Element value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Collection&lt; Connection &gt;</type>
      <name>findConflictingConnectionsInModalReactors</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a16084956a9edf85553aac56a97d8f5dd</anchor>
      <arglist>(Resource resource)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Reactor</type>
      <name>findMainReactor</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ab695cd20f9bd6ebe6ecdb397695a09f6</anchor>
      <arglist>(Resource resource)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateVarRef</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a1a709f4e254096ed5cade2a17e6cff36</anchor>
      <arglist>(VarRef reference)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; Reactor &gt;</type>
      <name>getAllReactors</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ac1b7a3d6d8eb4c0819d333c184a2eda6</anchor>
      <arglist>(Resource resource)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimeValue</type>
      <name>getDefaultAsTimeValue</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a4237478951bdd83283c1e3b1444e1613</anchor>
      <arglist>(Parameter p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Long</type>
      <name>getDelay</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ade2069af1decfcf98ba907397d65ffe0</anchor>
      <arglist>(Expression delay)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimeValue</type>
      <name>getDelayAsTimeValue</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>aaca0db3203fba8180a0173fbbed93f98</anchor>
      <arglist>(Expression delay)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Set&lt; Instantiation &gt;</type>
      <name>getEnclaves</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ab4a86ae101cc7ad5a45d056d89d573e3</anchor>
      <arglist>(Reactor top)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Reactor</type>
      <name>getEnclosingReactor</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a676d4d1b846ed9a966b5de5edc21a430</anchor>
      <arglist>(EObject obj)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Optional&lt; Reactor &gt;</type>
      <name>getFederatedReactor</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ad0e5d2a954768a70fb84ab2a847f65a4</anchor>
      <arglist>(Resource resource)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static InferredType</type>
      <name>getInferredType</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>aed443b6568a72003af532953c7e23976</anchor>
      <arglist>(Action a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static InferredType</type>
      <name>getInferredType</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>adf96da217ed6318dd4bc34b3f2b32176</anchor>
      <arglist>(Parameter p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static InferredType</type>
      <name>getInferredType</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>adab486a08788734b2fbff3e25758e07e</anchor>
      <arglist>(Port p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static InferredType</type>
      <name>getInferredType</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ac58624d462b3e2a33dcfd934c271cc5d</anchor>
      <arglist>(StateVar s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static InferredType</type>
      <name>getInferredType</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>aa641005cc189d1268e1fccdb0bdfb1ad</anchor>
      <arglist>(Type type, Initializer init)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimeValue</type>
      <name>getLiteralTimeValue</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>afdb2d401add244aaac6fa1c22cdbe866</anchor>
      <arglist>(Expression expr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Optional&lt; Reactor &gt;</type>
      <name>getMainReactor</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>adf5ea3c71794aad58094f525b0812068</anchor>
      <arglist>(Resource resource)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Stream&lt; INode &gt;</type>
      <name>getPrecedingCommentNodes</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ac921bd374b9670d6a44861732e8ef394</anchor>
      <arglist>(ICompositeNode compNode, Predicate&lt; INode &gt; filter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Stream&lt; String &gt;</type>
      <name>getPrecedingComments</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a80e984a1467b214deedd6e7fd8be469c</anchor>
      <arglist>(ICompositeNode compNode, Predicate&lt; INode &gt; filter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Target</type>
      <name>getTarget</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a82cf6665147261dc664f9f2f1cbb4ebc</anchor>
      <arglist>(EObject object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>getUniqueIdentifier</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a94254d96ff632dee042ab4620b63ccad</anchor>
      <arglist>(Reactor reactor, String name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>hasMultipleConnections</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ad003ab6a315293b442952695c4e50f2a</anchor>
      <arglist>(Connection connection)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>inferPortWidth</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a0590d67332f488243792da5b1b16b714</anchor>
      <arglist>(VarRef reference, Connection connection, List&lt; Instantiation &gt; instantiations)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Expression</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a972779d0067b217bc5b6eeffcb6594b9</anchor>
      <arglist>(Parameter parameter, List&lt; Instantiation &gt; instantiations)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Integer</type>
      <name>initialValueInt</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a63696b3175b5fc356b48d2c4fe73f404</anchor>
      <arglist>(Parameter parameter, List&lt; Instantiation &gt; instantiations)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isBoolean</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a23431639133cb54299f96ba1c5439e0e</anchor>
      <arglist>(String literal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isComment</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a77321e27be109f520350dc8ed001c53f</anchor>
      <arglist>(INode node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isFloat</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>aa7d634dafa132cd296af16535fde2cb2</anchor>
      <arglist>(String literal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isForever</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a3dd00470815660c1c1feb1d49318a501</anchor>
      <arglist>(Expression expr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isForever</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>aeb6e32815d2eea5cf8d56c96e1696661</anchor>
      <arglist>(String literal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isGeneric</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a8a92bfa1d12f423e59ad95a210b31587</anchor>
      <arglist>(Reactor r)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isInCode</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a5f33e14a6c07ec06524b5828a1f29b3d</anchor>
      <arglist>(INode node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isInitialized</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a1f354f2b6fca268ab4047c1870483540</anchor>
      <arglist>(StateVar v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isInteger</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a1c63080f8e7fb48d21152412adb7d12c</anchor>
      <arglist>(String literal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isMultilineComment</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a1fd923488a818dd23d8e10413570118a</anchor>
      <arglist>(INode node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isMultiport</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a1de18d3fafd178ee0b3c0dc7861dc5b9</anchor>
      <arglist>(Port port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isNever</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a9eac2388abe4c5041b30a9b627f244c3</anchor>
      <arglist>(Expression expr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isNever</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a9a40605236ef14e378c3f6c5f29c3394</anchor>
      <arglist>(String literal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isOfTimeType</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a20b1eeef8fd4c7dcffd8b2bb7445d894</anchor>
      <arglist>(Parameter param)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isOfTimeType</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a4613a3eb8346686088828ef796a80235</anchor>
      <arglist>(StateVar state)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isParameterized</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a767603e8bce1e472236317ded1f7d181</anchor>
      <arglist>(StateVar s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isSingleLineComment</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ace6cdc245558e54f0ed0165fa6f18178</anchor>
      <arglist>(INode node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isTopLevel</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ad69c98a46f88598be5c12a7294ad5463</anchor>
      <arglist>(NamedInstance&lt;?&gt; instance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isValidTime</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ac731693b07d1f76b73d04cd17917ba8d</anchor>
      <arglist>(Time t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isZero</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a7bcb20b1dbd9f9d10546ab950c59a5aa</anchor>
      <arglist>(Expression expr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isZero</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a7c7e212f76b57748221a9a1bfedac207</anchor>
      <arglist>(String literal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>makeFederated</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a7ca0b842d0c2210f55647c9e7cf4bcb9</anchor>
      <arglist>(Resource resource)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>overrideParameter</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>aa16b34eaa2b65c0a12e0acd806dbe845</anchor>
      <arglist>(ParameterInstance param, CodeExpr expr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; ReactorInstance &gt;</type>
      <name>recursiveChildren</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>abe1ca7a73d8d7ad348a9155da2f42d04</anchor>
      <arglist>(ReactorInstance r)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>rerouteViaInstance</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a9585701f69b88e5f82db26f514ceedb7</anchor>
      <arglist>(List&lt; Pair&lt; Connection, Instantiation &gt; &gt; conns)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Predicate&lt; INode &gt;</type>
      <name>sameLine</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a923a27be50e08a645b39755b5d408fbe</anchor>
      <arglist>(ICompositeNode compNode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMainName</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a6a085e3e81593086d136e50b3ba63e6a</anchor>
      <arglist>(Resource resource, String name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LinkedHashSet&lt; Reactor &gt;</type>
      <name>superClasses</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a1d2e519a8e34871b3de3f6a1cc7d0efc</anchor>
      <arglist>(Reactor reactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TargetDecl</type>
      <name>targetDecl</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>aff2b1943106085d3a79273e9c27b4c94</anchor>
      <arglist>(Model model)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TargetDecl</type>
      <name>targetDecl</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a46e97a2ceaf7ffe7e61ac3614ff80b13</anchor>
      <arglist>(Resource model)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>toBoolean</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a728f32207d6df85be8bb4424071e0e1f</anchor>
      <arglist>(Element e)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Reactor</type>
      <name>toDefinition</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a9bdc967f0f91b66e93e85638d9097974</anchor>
      <arglist>(ReactorDecl r)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Element</type>
      <name>toElement</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a1e8b67a2f150c224169ced8895b21b89</anchor>
      <arglist>(boolean val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Element</type>
      <name>toElement</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a646a9c1bcfea4d561d9f85e35b7acf5b</anchor>
      <arglist>(int val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Element</type>
      <name>toElement</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a8bdf048f4548ac3c980a8b0464c9d286</anchor>
      <arglist>(List&lt; String &gt; list)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Element</type>
      <name>toElement</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>aaf5e299323180ad4c25e75bd114f91d7</anchor>
      <arglist>(Map&lt; String, String &gt; map)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Element</type>
      <name>toElement</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a75dae663a7a3f4fef84b48750379243d</anchor>
      <arglist>(String str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Element</type>
      <name>toElement</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ac174da7c818a5042636ff2e60abbf2ef</anchor>
      <arglist>(TimeValue tv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Integer</type>
      <name>toInteger</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a12f28df6bec4beb391078cce117cceb3</anchor>
      <arglist>(Element e)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>toOriginalText</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ac4dfcb837c635aee63201660b578f703</anchor>
      <arglist>(EObject node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>toText</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>ae5099c84660b45e4285229f8f07ba679</anchor>
      <arglist>(EObject node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimeValue</type>
      <name>toTimeValue</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>a5c128503eaec84a5231d64e607f6e4d8</anchor>
      <arglist>(Element e)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimeValue</type>
      <name>toTimeValue</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>aafbbcb779e57d09d15f2e67ef743d78e</anchor>
      <arglist>(Time e)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>width</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>abe61f1e228f51fdd8f16767b914f9741</anchor>
      <arglist>(WidthSpec spec, List&lt; Instantiation &gt; instantiations)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>widthSpecification</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>af94cd41300e91ce3555c6e07bcff7967</anchor>
      <arglist>(Instantiation instantiation)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final LfFactory</type>
      <name>factory</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>afa1bb67f74c2e652700aa24303af8dcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final LfPackage</type>
      <name>featurePackage</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ASTUtils.html</anchorfile>
      <anchor>afa7eacb6c02de57627f269cdee129cf2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::ast::DelayedConnectionTransformation</name>
    <filename>classorg_1_1lflang_1_1ast_1_1DelayedConnectionTransformation.html</filename>
    <base>org.lflang.ast.AstTransformation</base>
    <member kind="function">
      <type>void</type>
      <name>applyTransformation</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1DelayedConnectionTransformation.html</anchorfile>
      <anchor>af9e158401bf08ce4de675d3fd2b8ff49</anchor>
      <arglist>(List&lt; Reactor &gt; reactors)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DelayedConnectionTransformation</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1DelayedConnectionTransformation.html</anchorfile>
      <anchor>a9e24cb79aafd2042534c3fa61cb06a77</anchor>
      <arglist>(DelayBodyGenerator generator, TargetTypes targetTypes, Resource mainResource, boolean transformAfterDelays, boolean transformPhysicalConnections)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final LfFactory</type>
      <name>factory</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1DelayedConnectionTransformation.html</anchorfile>
      <anchor>a06ce8051ac4599aa3448b3a14f1535b6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::ast::FormattingUtil</name>
    <filename>classorg_1_1lflang_1_1ast_1_1FormattingUtil.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>render</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1FormattingUtil.html</anchorfile>
      <anchor>accdb8b5bd0da14a4d51837127cea1efc</anchor>
      <arglist>(EObject object, int lineLength, Target target, boolean codeMapTags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>render</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1FormattingUtil.html</anchorfile>
      <anchor>a2ab5f419ae0373945e079034f4d96a59</anchor>
      <arglist>(Model object)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>render</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1FormattingUtil.html</anchorfile>
      <anchor>afdde076989a545722ef6ba30ca0ac7ce</anchor>
      <arglist>(Model object, int lineLength)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Function&lt; EObject, String &gt;</type>
      <name>renderer</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1FormattingUtil.html</anchorfile>
      <anchor>ab1401c28db872b22fff4446a37882454</anchor>
      <arglist>(Target target)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final int</type>
      <name>DEFAULT_LINE_LENGTH</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1FormattingUtil.html</anchorfile>
      <anchor>ad7dfdee51a09e080a701c2472eddbc23</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package" static="yes">
      <type>static String</type>
      <name>lineWrapComments</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1FormattingUtil.html</anchorfile>
      <anchor>aa585597a3b41d19bd1c462f224ac450b</anchor>
      <arglist>(List&lt; String &gt; comments, int width, String singleLineCommentPrefix)</arglist>
    </member>
    <member kind="function" protection="package" static="yes">
      <type>static boolean</type>
      <name>placeComment</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1FormattingUtil.html</anchorfile>
      <anchor>afe32a4cbb7f1d9cfb68eae598693992c</anchor>
      <arglist>(List&lt; String &gt; comment, List&lt; String &gt; components, int i, int width, boolean keepCommentsOnSameLine, String singleLineCommentPrefix, int startColumn)</arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static final long</type>
      <name>BADNESS_PER_CHARACTER_VIOLATING_LINE_LENGTH</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1FormattingUtil.html</anchorfile>
      <anchor>a9996a5477906376e5f56665cf5a20ca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static final long</type>
      <name>BADNESS_PER_LEVEL_OF_COMMENT_DISPLACEMENT</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1FormattingUtil.html</anchorfile>
      <anchor>a91362b23850f506abbcdac999e756bfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static final long</type>
      <name>BADNESS_PER_NEWLINE</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1FormattingUtil.html</anchorfile>
      <anchor>a942d742f9a12dfdd38207854e50d0f0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static final int</type>
      <name>MAX_WHITESPACE_USED_FOR_ALIGNMENT</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1FormattingUtil.html</anchorfile>
      <anchor>ae5efa30b4f89a09db7b730c8d6705f64</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::ast::IsEqual</name>
    <filename>classorg_1_1lflang_1_1ast_1_1IsEqual.html</filename>
    <member kind="function">
      <type>Boolean</type>
      <name>caseAction</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a70f384e45b475f62d4ecf5d4e607c363</anchor>
      <arglist>(Action object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseArray</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>afb40bd4003157649807f596435102327</anchor>
      <arglist>(Array object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseAssignment</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>ab2ae0a9122e414dcca49c77b3ee4a2fc</anchor>
      <arglist>(Assignment object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseAttribute</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>af16a04ff72f64722c6f83d3171d2c66f</anchor>
      <arglist>(Attribute object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseAttrParm</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>ac7fc6c2296d6c1f13de77aedc23bb969</anchor>
      <arglist>(AttrParm object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseBracedListExpression</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>aea53083b4e73f55a0842b33fc932d91d</anchor>
      <arglist>(BracedListExpression object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseBracketListExpression</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a58c408d0d3676269e1d6547cb55af5ff</anchor>
      <arglist>(BracketListExpression object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseBuiltinTriggerRef</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a0bcade3f11026d6407fe017ebfade946</anchor>
      <arglist>(BuiltinTriggerRef object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseCode</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a9b2a6414d5c1793cf9aedd529e1ea645</anchor>
      <arglist>(Code object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseCodeExpr</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a09df3f74597d3a1102d1107bb8050024</anchor>
      <arglist>(CodeExpr object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseConnection</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a48f96d686a3b0d33f9ba0665dd447366</anchor>
      <arglist>(Connection object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseCStyleArraySpec</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>ac93ec9ab6b05e96368c9aa8b5214f551</anchor>
      <arglist>(CStyleArraySpec object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseDeadline</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>ad9d7deb6c87231b224623a93e386203f</anchor>
      <arglist>(Deadline object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseElement</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a15be08f78a60297b09b9e293c889beff</anchor>
      <arglist>(Element object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseExpression</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a3486ed8e8471e6baca376e9f3410bfc8</anchor>
      <arglist>(Expression object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseHost</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>aca38732e39cb6427f2b6b5fecf847eaa</anchor>
      <arglist>(Host object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseImport</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>aa248dc44b465de9569f2aa92b95350c9</anchor>
      <arglist>(Import object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseImportedReactor</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a73561a3a0a8cee71420e30bea3ba255f</anchor>
      <arglist>(ImportedReactor object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseInitializer</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a3cd9d09772721971f6df439ecf2408da</anchor>
      <arglist>(Initializer object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseInput</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a09c100e07b14ff62dda3131480927518</anchor>
      <arglist>(Input object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseInstantiation</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>ae290f6834e33d4560156c89a85bf5643</anchor>
      <arglist>(Instantiation object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseIPV4Host</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>af37e4714abc003ea26ecdafd97eded18</anchor>
      <arglist>(IPV4Host object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseIPV6Host</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a7b23dd24bb2a03d4cb71495fb4765a89</anchor>
      <arglist>(IPV6Host object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseKeyValuePair</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a43ee0a5c2e6253f9dce862cd4f2d3219</anchor>
      <arglist>(KeyValuePair object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseKeyValuePairs</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a8ef379a97478d7e62a4610a2cdadfbb5</anchor>
      <arglist>(KeyValuePairs object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseLiteral</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>af1524f64168717c75368cb061a579b19</anchor>
      <arglist>(Literal object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseMethod</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>ae75bf5020d8362bfecf5aae4d5c3d83f</anchor>
      <arglist>(Method object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseMethodArgument</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a0742cfe974862ba55ffa18b4cdc27833</anchor>
      <arglist>(MethodArgument object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseMode</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>aadeed744bb3dc3e2fcd6274f7d983a7d</anchor>
      <arglist>(Mode object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseModel</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>abf1f89256bd0f712d2b1bfffaa3e69f4</anchor>
      <arglist>(Model object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseNamedHost</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>ac332b0b8e1411e5944aaf5d2ee256a9a</anchor>
      <arglist>(NamedHost object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseOutput</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>affc0a2d85c85b71db2001a81acb43059</anchor>
      <arglist>(Output object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseParameter</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a04ec82ab0e067dc8a154c852d5092851</anchor>
      <arglist>(Parameter object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseParameterReference</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>af8b43b69f36be81f90dd350d69e61c46</anchor>
      <arglist>(ParameterReference object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseParenthesisListExpression</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a70e48cd6809338eff86adc611ae10585</anchor>
      <arglist>(ParenthesisListExpression object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>casePort</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a7475bef725935e430a2eb8d7cac37ff0</anchor>
      <arglist>(Port object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>casePreamble</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a7ceeb6617d167ccdb4642df21a440a3c</anchor>
      <arglist>(Preamble object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseReaction</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a72ba031c5987e1855b630742c56466c1</anchor>
      <arglist>(Reaction object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseReactor</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>ac93630f4cee48e406f043307e303040c</anchor>
      <arglist>(Reactor object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseReactorDecl</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>ab91f31ccacd4edb077635016019f2824</anchor>
      <arglist>(ReactorDecl object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseSerializer</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>adfcf99cd75dbd8cb87e4d904bbde1b67</anchor>
      <arglist>(Serializer object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseStateVar</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a726665d555b202e7187f238a0b4c0cdc</anchor>
      <arglist>(StateVar object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseSTP</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>aa258c22769eb1c4888d498f874c03732</anchor>
      <arglist>(STP object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseTargetDecl</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a2d5da774fa98fd8d31823ba405eaad94</anchor>
      <arglist>(TargetDecl object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseTime</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>ad8c3749c8105ecc13267da29338d9156</anchor>
      <arglist>(Time object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseTimer</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a7848b6c56980d1a6412ca048d6bd5865</anchor>
      <arglist>(Timer object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseTriggerRef</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a69f71e775e3b57eb99e41c72fab79006</anchor>
      <arglist>(TriggerRef object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseType</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a29ca0bff2c41fa53af66f43139d970fd</anchor>
      <arglist>(Type object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseTypedVariable</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a4104b5f818f68f2ab38526a512dc14ce</anchor>
      <arglist>(TypedVariable object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseTypeParm</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a6b68c6a7a356184cb5683287ddfa0dae</anchor>
      <arglist>(TypeParm object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseVariable</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a79d4d25bdea6a7156a61840865adc68c</anchor>
      <arglist>(Variable object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseVarRef</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>ad17b8d9dff587b0d60012177ce9ba693</anchor>
      <arglist>(VarRef object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseWatchdog</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>aa603d66fba93ef47e6001baa228a93eb</anchor>
      <arglist>(Watchdog object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseWidthSpec</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a4c4020aeea87dc8badbe6c8df5603484</anchor>
      <arglist>(WidthSpec object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>caseWidthTerm</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>adebf65477c038e1e9e4e9af066b11b68</anchor>
      <arglist>(WidthTerm object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>defaultCase</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a827e89b132ec08614064b29b4f4d637a</anchor>
      <arglist>(EObject object)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>doSwitch</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>a43974cb317c914bd24f4c9b56851e272</anchor>
      <arglist>(EObject eObject)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IsEqual</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1IsEqual.html</anchorfile>
      <anchor>aac9bdf090bab22714e48cfbec2e84382</anchor>
      <arglist>(EObject other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::ast::LfParsingHelper</name>
    <filename>classorg_1_1lflang_1_1ast_1_1LfParsingHelper.html</filename>
    <member kind="function">
      <type>Model</type>
      <name>parse</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1LfParsingHelper.html</anchorfile>
      <anchor>a0e9ec88583950488f1f0b4a70d258127</anchor>
      <arglist>(Path file)</arglist>
    </member>
    <member kind="function">
      <type>Model</type>
      <name>parse</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1LfParsingHelper.html</anchorfile>
      <anchor>a5db6ec348984042c94d3d9b6382e05d3</anchor>
      <arglist>(String fileContents)</arglist>
    </member>
    <member kind="function">
      <type>Model</type>
      <name>parseSourceAsIfInDirectory</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1LfParsingHelper.html</anchorfile>
      <anchor>a458446af69732c67e00cc312e6a79637</anchor>
      <arglist>(Path directory, String sourceText)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>XtextResourceSet</type>
      <name>resourceSet</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1LfParsingHelper.html</anchorfile>
      <anchor>a311f3cebc22cb98d631b2397364cc98d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::ast::MalleableString</name>
    <filename>classorg_1_1lflang_1_1ast_1_1MalleableString.html</filename>
    <class kind="class">org::lflang::ast::MalleableString::Builder</class>
    <class kind="class">org::lflang::ast::MalleableString::Joiner</class>
    <member kind="function">
      <type>MalleableString</type>
      <name>addComments</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString.html</anchorfile>
      <anchor>a4c3bf2f58f9096ec5fb0526b51a8b6c5</anchor>
      <arglist>(Stream&lt; String &gt; comments)</arglist>
    </member>
    <member kind="function">
      <type>abstract MalleableString</type>
      <name>constrain</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString.html</anchorfile>
      <anchor>a3edcfdc5b1ed82301e11c3aebe5f475f</anchor>
      <arglist>(Predicate&lt; String &gt; constraint)</arglist>
    </member>
    <member kind="function">
      <type>abstract boolean</type>
      <name>findBestRepresentation</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString.html</anchorfile>
      <anchor>a512a2677dec224b3d26485131e692485</anchor>
      <arglist>(Supplier&lt; RenderResult &gt; providedRender, ToLongFunction&lt; RenderResult &gt; badness, int width, int indentation, String singleLineCommentPrefix)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>indent</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString.html</anchorfile>
      <anchor>a3b4d4aa976d6f7c7c6ca95935651e536</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>abstract boolean</type>
      <name>isEmpty</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString.html</anchorfile>
      <anchor>a46c507c0a4e0dfd06cf7f2158a654bbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>abstract RenderResult</type>
      <name>render</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString.html</anchorfile>
      <anchor>a9856cce4ea3ce3b2bc832fe347cd6f4f</anchor>
      <arglist>(int indentation, String singleLineCommentMarker, boolean codeMapTag, EObject enclosingEObject)</arglist>
    </member>
    <member kind="function">
      <type>record</type>
      <name>RenderResult</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString.html</anchorfile>
      <anchor>afa9739f4a757826a5fc849e81189bf22</anchor>
      <arglist>(Stream&lt; String &gt; unplacedComments, String rendering, int levelsOfCommentDisplacement)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>setSourceEObject</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString.html</anchorfile>
      <anchor>a6c75b1b01856d0a34acfb31925777597</anchor>
      <arglist>(EObject sourceEObject)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString.html</anchorfile>
      <anchor>af8d92829dc9aa0642a57af6af9b377db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MalleableString</type>
      <name>anyOf</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString.html</anchorfile>
      <anchor>ac2519947851e094d9d6fdc4c54b8bc8a</anchor>
      <arglist>(MalleableString... possibilities)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MalleableString</type>
      <name>anyOf</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString.html</anchorfile>
      <anchor>a40d2c18e3129eb382a5ae3ef15f905b1</anchor>
      <arglist>(Object... possibilities)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MalleableString</type>
      <name>anyOf</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString.html</anchorfile>
      <anchor>a322a5692d239fa5c21623fd88aaadf3d</anchor>
      <arglist>(String... possibilities)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>comments</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString.html</anchorfile>
      <anchor>a9600a5c0cbc2cf3e15964960524ca125</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EObject</type>
      <name>sourceEObject</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString.html</anchorfile>
      <anchor>ac524f42f0db5bd0c28f6099e4edfc0af</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::ast::MalleableString::Builder</name>
    <filename>classorg_1_1lflang_1_1ast_1_1MalleableString_1_1Builder.html</filename>
    <member kind="function">
      <type>Builder</type>
      <name>append</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString_1_1Builder.html</anchorfile>
      <anchor>ab2440d73d40244714a7107dcbdf35eab</anchor>
      <arglist>(MalleableString... possibilities)</arglist>
    </member>
    <member kind="function">
      <type>Builder</type>
      <name>append</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString_1_1Builder.html</anchorfile>
      <anchor>ae74d3ad73461cb7782eed056de5de387</anchor>
      <arglist>(Object... content)</arglist>
    </member>
    <member kind="function">
      <type>Builder</type>
      <name>append</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString_1_1Builder.html</anchorfile>
      <anchor>a76d1f828ecd41691cf7f2841b15e6fb1</anchor>
      <arglist>(String... content)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>get</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString_1_1Builder.html</anchorfile>
      <anchor>ac3d9d49bc231436b5b633ec147e53e82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Builder</type>
      <name>prepend</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString_1_1Builder.html</anchorfile>
      <anchor>a7e2ca54a53ff94c705804443df989fb8</anchor>
      <arglist>(MalleableString... possibilities)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>private&lt; T &gt; Builder</type>
      <name>insert</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString_1_1Builder.html</anchorfile>
      <anchor>a87add7fd65d19f2b4e94c5bf222770b7</anchor>
      <arglist>(Function&lt; T, ? extends MalleableString &gt; toMalleableString, Function&lt; T[], ? extends MalleableString &gt; multiplePossibilitiesRepresenter, T[] possibilities, Consumer&lt; MalleableString &gt; addToComponents)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::ast::MalleableString::Joiner</name>
    <filename>classorg_1_1lflang_1_1ast_1_1MalleableString_1_1Joiner.html</filename>
    <member kind="function">
      <type>BiConsumer&lt; Builder, MalleableString &gt;</type>
      <name>accumulator</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString_1_1Joiner.html</anchorfile>
      <anchor>afedbd7f305d8cb143d2313fb48d168ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; Characteristics &gt;</type>
      <name>characteristics</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString_1_1Joiner.html</anchorfile>
      <anchor>a7e304441e570855b4a0eaf5a114e2331</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BinaryOperator&lt; Builder &gt;</type>
      <name>combiner</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString_1_1Joiner.html</anchorfile>
      <anchor>a1b23b0fc5522dc996516e161d8887a08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Function&lt; Builder, MalleableString &gt;</type>
      <name>finisher</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString_1_1Joiner.html</anchorfile>
      <anchor>a6c8b703df4722d3bd0334fe31c697258</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Joiner</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString_1_1Joiner.html</anchorfile>
      <anchor>a2baa54e1e6e29aade0ff118227181720</anchor>
      <arglist>(MalleableString separator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Joiner</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString_1_1Joiner.html</anchorfile>
      <anchor>a93c844a640d3b4ddd65c01bcb84a033c</anchor>
      <arglist>(MalleableString separator, MalleableString prefix, MalleableString suffix)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Joiner</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString_1_1Joiner.html</anchorfile>
      <anchor>a5dd9f5688253af321705d672adaf65a0</anchor>
      <arglist>(String separator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Joiner</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString_1_1Joiner.html</anchorfile>
      <anchor>ae16ff5b5d8ff2e588830ef8e3a6e250c</anchor>
      <arglist>(String separator, String prefix, String suffix)</arglist>
    </member>
    <member kind="function">
      <type>Supplier&lt; Builder &gt;</type>
      <name>supplier</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1MalleableString_1_1Joiner.html</anchorfile>
      <anchor>ad797b22f5103fe1d7ad0280d6fd4e5a9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::ast::ToLf</name>
    <filename>classorg_1_1lflang_1_1ast_1_1ToLf.html</filename>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseAction</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>aafdc0e7f503ca306853151e5698e5684</anchor>
      <arglist>(Action object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseArray</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>ac332d25e6fb7f1c2f3fbb6ad09d25585</anchor>
      <arglist>(Array object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseAssignment</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a082ab0a3c3d5f33c5f6e5e2488090570</anchor>
      <arglist>(Assignment object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseAttribute</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>aa44cf42fc5abed62d9b547de2d3cae8f</anchor>
      <arglist>(Attribute object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseAttrParm</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a3f988954c14e1e2b8b2803e2c56ab3f6</anchor>
      <arglist>(AttrParm object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseBracedListExpression</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a1988b8f589b4a5b45a84bb8ec7a98a64</anchor>
      <arglist>(BracedListExpression object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseBracketListExpression</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>ac1ab508735ba62a836a33d25c58585bb</anchor>
      <arglist>(BracketListExpression object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseBuiltinTriggerRef</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a3ec80734b78cab3e8a7deca8fe4ce21b</anchor>
      <arglist>(BuiltinTriggerRef object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseCode</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>ad284da7715ddd6c5ae96e591ec65c3d6</anchor>
      <arglist>(Code code)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseCodeExpr</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a7345dafcb46dfa630604e342edb25f20</anchor>
      <arglist>(CodeExpr object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseConnection</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>ae19122713d2dc6948fdb66359ebf8ffe</anchor>
      <arglist>(Connection object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseCStyleArraySpec</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a5019a6b93d3653ea83ba429711007d5d</anchor>
      <arglist>(CStyleArraySpec spec)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseDeadline</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a6603863d570ab54af56bef16482a2810</anchor>
      <arglist>(Deadline object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseElement</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a4bae172f8e685a7b86e4d8e21957d706</anchor>
      <arglist>(Element object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseExpression</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>ac565107fba64cff4f8841fa79ff1982b</anchor>
      <arglist>(Expression object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseHost</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>aafdbeff8d9db3e374fe56943a1e9d7b0</anchor>
      <arglist>(Host host)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseImport</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>adb017a0f0deb6bb711cf9e3a857d6eef</anchor>
      <arglist>(Import object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseImportedReactor</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a1dd0e6dcdb9c6ae8bc431cbf226d5f9a</anchor>
      <arglist>(ImportedReactor object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseInitializer</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a5e09b3c3d193b2a0f0cf8088c7f834a1</anchor>
      <arglist>(Initializer init)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseInput</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>ae06109f7c7e76bc3c793ac71024063f9</anchor>
      <arglist>(Input object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseInstantiation</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>aee96dfd9ddaa8cdc9039f575edbca1b5</anchor>
      <arglist>(Instantiation object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseIPV4Host</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a252158bbd91628ae3c19516e4595d13c</anchor>
      <arglist>(IPV4Host object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseIPV6Host</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a28b48e0e85780e96a8c3e2cf18952f0f</anchor>
      <arglist>(IPV6Host object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseKeyValuePair</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>ae34258a6e6319a91df49be6c1eef0512</anchor>
      <arglist>(KeyValuePair object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseKeyValuePairs</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a2ce4895c12d53d56d5b0324744e5b588</anchor>
      <arglist>(KeyValuePairs object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseLiteral</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a6c8bc5ca1a3edbd9b99238f4a9269b09</anchor>
      <arglist>(Literal l)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseMethod</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>aeb41e727261fd8d3a1741b89a3ca1043</anchor>
      <arglist>(Method object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseMethodArgument</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>afdedc2d98fcac86e77b2db108645fa4f</anchor>
      <arglist>(MethodArgument object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseMode</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a5f4a7275a12f9b21ba551534e4253fb8</anchor>
      <arglist>(Mode object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseModel</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a36410da2856d820c267ed09dd68a1374</anchor>
      <arglist>(Model object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseNamedHost</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a4959a82cc463775857582bcef6e0f9c6</anchor>
      <arglist>(NamedHost object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseOutput</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a78237059f53001761b4fab94ffbcbef9</anchor>
      <arglist>(Output object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseParameter</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a3845e32eb3d916156dd747c164f0d82c</anchor>
      <arglist>(Parameter object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseParameterReference</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a261fa8d1d779f0333372d260c79954e3</anchor>
      <arglist>(ParameterReference p)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseParenthesisListExpression</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>ad3fb6cbd2a7207fe5993a4d0102c4776</anchor>
      <arglist>(ParenthesisListExpression object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>casePort</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>abbe229f48493c50b8b3b884870424630</anchor>
      <arglist>(Port object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>casePreamble</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a02680efeb4c42409a05bc0bd1a95aa73</anchor>
      <arglist>(Preamble object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseReaction</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a7b6c9006aa94e60940069219d71755f5</anchor>
      <arglist>(Reaction object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseReactor</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a2bc1e543f3d17104e72cf23b47fe8cb8</anchor>
      <arglist>(Reactor object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseReactorDecl</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>accbefc400f5ce46bc5049725c19d385f</anchor>
      <arglist>(ReactorDecl object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseSerializer</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a54c9f85933a57c7c37e8052b8b0449bc</anchor>
      <arglist>(Serializer object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseStateVar</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>aa5fa170aaabc1651463346da0cfdb5b8</anchor>
      <arglist>(StateVar object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseSTP</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a5acfab82652eba9b2bc28665bfe28324</anchor>
      <arglist>(STP object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseTargetDecl</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a2cfba883a3b2a30de29a4994745bf3e0</anchor>
      <arglist>(TargetDecl object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseTime</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a5f37721322049fbf4e65dbd0015339d6</anchor>
      <arglist>(Time t)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseTimer</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>ac5eb7894f29bd7d4012c8c64f7115000</anchor>
      <arglist>(Timer object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseTriggerRef</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>ade1f2dae9381e30e3033e2a9724eedeb</anchor>
      <arglist>(TriggerRef object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseType</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a9224d6eed683057b8f376f63a7467d5a</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseTypedVariable</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>abe60576cb3c39b48392e6de504fb274a</anchor>
      <arglist>(TypedVariable object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseTypeParm</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a132fb6e90661823fe7d1736c57664d40</anchor>
      <arglist>(TypeParm t)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseVariable</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>ab52ff6422cfbb4c96b95e1eb1fe8dcad</anchor>
      <arglist>(Variable object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseVarRef</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a4a7511d60f003775b8c2a9e17f4e514e</anchor>
      <arglist>(VarRef v)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseWatchdog</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>ad3c9908c4bb7f2367552354eafa87f8f</anchor>
      <arglist>(Watchdog object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseWidthSpec</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a98bc7f4f8f6275950f939ec73bda434d</anchor>
      <arglist>(WidthSpec object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>caseWidthTerm</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a2bbd0647a93bc2fd31db2a013b932cda</anchor>
      <arglist>(WidthTerm object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>defaultCase</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a683a969483310a45a2e4b3fc3583e332</anchor>
      <arglist>(EObject object)</arglist>
    </member>
    <member kind="function">
      <type>MalleableString</type>
      <name>doSwitch</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a204aa56ee286007b5b363ffbad2d089a</anchor>
      <arglist>(EObject eObject)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>private&lt; T extends EObject &gt; MalleableString</type>
      <name>handler</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a814ebf19bd6296e9c54896c6ea2fa9c3</anchor>
      <arglist>(T object, String name, Function&lt; T, Expression &gt; getTrigger, Function&lt; T, Code &gt; getCode)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>private&lt; E extends EObject &gt; MalleableString</type>
      <name>list</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>af4af16be49fc772b5a3038c7a09f47ec</anchor>
      <arglist>(boolean nothingIfEmpty, EList&lt; E &gt; items)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>private&lt; E extends EObject &gt; MalleableString</type>
      <name>list</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a0d6a12148ba2d928466cdebf154912bf</anchor>
      <arglist>(String separator, String prefix, String suffix, boolean nothingIfEmpty, boolean whitespaceRigid, boolean suffixSameLine, List&lt; E &gt; items)</arglist>
    </member>
    <member kind="function" protection="package" static="yes">
      <type>static Set&lt; INode &gt;</type>
      <name>getAncestorComments</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a8c019f213c313ad200697f19aed7df70</anchor>
      <arglist>(INode node)</arglist>
    </member>
    <member kind="function" protection="package" static="yes">
      <type>static ICompositeNode</type>
      <name>getNextCompositeSibling</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToLf.html</anchorfile>
      <anchor>a717b15822b4ee7c2ce2d4ca2fcc5cc25</anchor>
      <arglist>(INode node, Function&lt; INode, INode &gt; getNextSibling)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::ast::ToSExpr</name>
    <filename>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</filename>
    <class kind="class">org::lflang::ast::ToSExpr::SExpr</class>
    <class kind="class">org::lflang::ast::ToSExpr::SList</class>
    <member kind="function">
      <type>SExpr</type>
      <name>caseAction</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>acc2d69b5b186664cfd95bceb6771a68b</anchor>
      <arglist>(Action object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseArray</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a99ebd8d79f75d61c68d3ce064526efe3</anchor>
      <arglist>(Array object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseAssignment</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a78fffcebb2a9dd4b0027d5c41167f1fc</anchor>
      <arglist>(Assignment object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseAttribute</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a3d38cd3fe6a68c5997c6fde9abeff122</anchor>
      <arglist>(Attribute object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseAttrParm</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>adbb2c59a1f5289d76a7ac2f109926c0a</anchor>
      <arglist>(AttrParm object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseBracedListExpression</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>ad5ac7efc07ea31fe5b440a973006ed21</anchor>
      <arglist>(BracedListExpression object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseBracketListExpression</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>aff5f683c09b60c7fc40c0ea1ed3f2ff3</anchor>
      <arglist>(BracketListExpression object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseBuiltinTriggerRef</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>abbaa61bf6ca8082fd8da99eaeb4c5daa</anchor>
      <arglist>(BuiltinTriggerRef object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseCode</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>ad560277bf75ee051f32181a239d01eda</anchor>
      <arglist>(Code object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseCodeExpr</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a1927a46b3beeb68c8e8fd7f0feb1807d</anchor>
      <arglist>(CodeExpr object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseConnection</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a84b9308b2a698741cde33d4b903ff6ef</anchor>
      <arglist>(Connection object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseCStyleArraySpec</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a4c1652ec3ed05a571d727a43d92dbd61</anchor>
      <arglist>(CStyleArraySpec object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseDeadline</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a3acffaf1ce264551a74c8929dd8d9d19</anchor>
      <arglist>(Deadline object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseElement</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a67714c7a308bde6447a770270a3c4094</anchor>
      <arglist>(Element object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseExpression</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a31b53af58b4f57926f2b9158e4eb726e</anchor>
      <arglist>(Expression object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseHost</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>af2dba6933386ef5c66c12462bae38852</anchor>
      <arglist>(Host object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseImport</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a6afbbdfee2d1207a04d22d96b2b8c314</anchor>
      <arglist>(Import object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseImportedReactor</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a54c81d1b82ff8c7c3f6d83877910bc6d</anchor>
      <arglist>(ImportedReactor object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseInitializer</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a5865d0297eabf701120458066c6fe5b0</anchor>
      <arglist>(Initializer object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseInput</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a25b612f700e692052efe90ab5b11323c</anchor>
      <arglist>(Input object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseInstantiation</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a658211b3df016153f95acdcc3a4d83d5</anchor>
      <arglist>(Instantiation object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseIPV4Host</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a725b0f41391a28ff332d37d44d8cf899</anchor>
      <arglist>(IPV4Host object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseIPV6Host</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a18dd34cda7c7de6fa4132f8b99f96281</anchor>
      <arglist>(IPV6Host object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseKeyValuePair</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>aa2e5a6ec1d9ba1adfcc9528184cf1b5b</anchor>
      <arglist>(KeyValuePair object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseKeyValuePairs</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a505757dd00fbc1999b7fc38f1544916b</anchor>
      <arglist>(KeyValuePairs object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseLiteral</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a2855f53cd57d76bcd18822d0047f9c94</anchor>
      <arglist>(Literal object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseMethod</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a447b244296c95f56c2547da3d8ea24e8</anchor>
      <arglist>(Method object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseMethodArgument</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>aa8e480bce9eaf658dfd6bda21594b52d</anchor>
      <arglist>(MethodArgument object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseMode</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a7977888b14f2c8ce1d2ec640d68f25d7</anchor>
      <arglist>(Mode object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseModel</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>aed4cba8fcfa7d66483bd78188831b0ec</anchor>
      <arglist>(Model object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseNamedHost</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>aa2fecbaa61af556b93d20df4b66be995</anchor>
      <arglist>(NamedHost object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseOutput</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>ad97a9a51a81d6d38e5ca4d4782ed5b2a</anchor>
      <arglist>(Output object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseParameter</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a00a82eaf17443e8cf50930acec3a6364</anchor>
      <arglist>(Parameter object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseParameterReference</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a88541dfdfa4cd045e9ce806978af876a</anchor>
      <arglist>(ParameterReference object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>casePort</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a96ed4812a0a5f63c91ec59fe8d54999b</anchor>
      <arglist>(Port object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>casePreamble</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a0bf308da456987d4a867d0029c3c5745</anchor>
      <arglist>(Preamble object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseReaction</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>af8a188e3fd785f99dd2b75649e654981</anchor>
      <arglist>(Reaction object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseReactor</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>adcb16939c7399533811a4ef00e98ec83</anchor>
      <arglist>(Reactor object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseReactorDecl</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a3e2913387279db7d2475261e826c78aa</anchor>
      <arglist>(ReactorDecl object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseSerializer</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a49306424cf0d70d0a3a704a82f396215</anchor>
      <arglist>(Serializer object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseStateVar</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a589ac389cf40ef707b3ab3e26c2a8484</anchor>
      <arglist>(StateVar object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseSTP</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a2eb56123fcc6191b9cd95f54696e9cca</anchor>
      <arglist>(STP object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseTargetDecl</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>ae0b488d36107c362a5e500eee3bd3678</anchor>
      <arglist>(TargetDecl object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseTime</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>ab6103fb33d5c08cf61aeaf972e8e1a1e</anchor>
      <arglist>(Time object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseTimer</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>aa7d6c83ca19d86459a0665dd4944d2dd</anchor>
      <arglist>(Timer object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseTriggerRef</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>adeb94770f184fc6b11720f3bb9265708</anchor>
      <arglist>(TriggerRef object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseType</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>ab3e7c916431ca132feb456289c812bce</anchor>
      <arglist>(Type object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseTypedVariable</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a650ced126b884c680c0afa9af8af4dbc</anchor>
      <arglist>(TypedVariable object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseTypeParm</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a4f7145ae2a0791e36c87aae99166809f</anchor>
      <arglist>(TypeParm object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseVariable</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>ab36864a5bd03130eb5882de34d41372b</anchor>
      <arglist>(Variable object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseVarRef</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a97d1508fd3b1edcbaf1738c42b81edc5</anchor>
      <arglist>(VarRef object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseWatchdog</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>ac5ecb065393d5539c6910f31153e5955</anchor>
      <arglist>(Watchdog object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseWidthSpec</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a9cd5d2aee381dc48676882d6b288b15d</anchor>
      <arglist>(WidthSpec object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>caseWidthTerm</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>adf001ffb987cfce27490130ea9371146</anchor>
      <arglist>(WidthTerm object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>defaultCase</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a83e4dd18827ad09ca77f68389d3f4ffd</anchor>
      <arglist>(EObject object)</arglist>
    </member>
    <member kind="function">
      <type>SExpr</type>
      <name>doSwitch</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a7c6a0556c95c8177876d46e5797a4d66</anchor>
      <arglist>(EObject theEObject)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>private&lt; T &gt; boolean</type>
      <name>inside</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>a6f15a7e49ac8c0bd7fc0bc9efaf7b620</anchor>
      <arglist>(Class&lt; T &gt; tClass)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>private&lt; T extends EObject &gt; SExpr</type>
      <name>sList</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr.html</anchorfile>
      <anchor>aebbbdd5bd26895533789e74806005261</anchor>
      <arglist>(String name, List&lt; T &gt; parts)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::ast::ToSExpr::SExpr</name>
    <filename>classorg_1_1lflang_1_1ast_1_1ToSExpr_1_1SExpr.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setMetadata</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr_1_1SExpr.html</anchorfile>
      <anchor>a1295de7e22cc4cd5f764c654b6790b7b</anchor>
      <arglist>(Metadata m)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr_1_1SExpr.html</anchorfile>
      <anchor>a565d5a6ffe4a050037f1c0fb467d5d93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>abstract String</type>
      <name>display</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr_1_1SExpr.html</anchorfile>
      <anchor>a6cfa97ba765239cae38d272f9602fd7a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::ast::ToSExpr::SList</name>
    <filename>classorg_1_1lflang_1_1ast_1_1ToSExpr_1_1SList.html</filename>
    <base>org.lflang.ast.ToSExpr.SExpr</base>
    <class kind="class">org::lflang::ast::ToSExpr::SList::SAtom</class>
    <member kind="function">
      <type>record</type>
      <name>Fingerprint</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr_1_1SList.html</anchorfile>
      <anchor>ab67962825ce7391b87c1cbc698feb453</anchor>
      <arglist>(byte[] digest)</arglist>
    </member>
    <member kind="function">
      <type>record</type>
      <name>Metadata</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr_1_1SList.html</anchorfile>
      <anchor>a3eb1309ea48ca8a9d9e25f01f246237c</anchor>
      <arglist>(URI uri, int offset, int startLine, int startCol, int endLine, int endCol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMetadata</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr_1_1SExpr.html</anchorfile>
      <anchor>a1295de7e22cc4cd5f764c654b6790b7b</anchor>
      <arglist>(Metadata m)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SList</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr_1_1SList.html</anchorfile>
      <anchor>a2eeb64c1c4aaab9ce6381ec70777c12f</anchor>
      <arglist>(List&lt; SExpr &gt; parts)</arglist>
    </member>
    <member kind="function">
      <type>record</type>
      <name>Sym</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr_1_1SList.html</anchorfile>
      <anchor>a53f1880e0fa80acbcf686228bc89e24e</anchor>
      <arglist>(String s)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr_1_1SExpr.html</anchorfile>
      <anchor>a565d5a6ffe4a050037f1c0fb467d5d93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>display</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr_1_1SList.html</anchorfile>
      <anchor>a53bd3b97425ce6f5fe005f9006e54c95</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::ast::ToSExpr::SList::SAtom</name>
    <filename>classorg_1_1lflang_1_1ast_1_1ToSExpr_1_1SList_1_1SAtom.html</filename>
    <templarg>T</templarg>
    <base>org.lflang.ast.ToSExpr.SExpr</base>
    <member kind="function">
      <type>String</type>
      <name>display</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr_1_1SList_1_1SAtom.html</anchorfile>
      <anchor>aac2aa16247b6adda71a143a3a66744b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SAtom</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr_1_1SList_1_1SAtom.html</anchorfile>
      <anchor>afb08d691ced237d4152d48bd7d26e6f9</anchor>
      <arglist>(T x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMetadata</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr_1_1SExpr.html</anchorfile>
      <anchor>a1295de7e22cc4cd5f764c654b6790b7b</anchor>
      <arglist>(Metadata m)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToSExpr_1_1SExpr.html</anchorfile>
      <anchor>a565d5a6ffe4a050037f1c0fb467d5d93</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::ast::ToText</name>
    <filename>classorg_1_1lflang_1_1ast_1_1ToText.html</filename>
    <member kind="function">
      <type>String</type>
      <name>caseBracedListExpression</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToText.html</anchorfile>
      <anchor>a08e87402fc64e4384d0fb225fb8d0729</anchor>
      <arglist>(BracedListExpression object)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>caseBracketListExpression</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToText.html</anchorfile>
      <anchor>a3c0f922d684400387c8377accfd10886</anchor>
      <arglist>(BracketListExpression object)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>caseCode</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToText.html</anchorfile>
      <anchor>acc78bc5c7c04831c551dc9281f91fd4c</anchor>
      <arglist>(Code code)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>caseCodeExpr</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToText.html</anchorfile>
      <anchor>abfb4ea39d7acc7e524f15ddb490d25b5</anchor>
      <arglist>(CodeExpr object)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>caseCStyleArraySpec</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToText.html</anchorfile>
      <anchor>aaa3ec849e3b2ad5e87d8e322d5c52fc4</anchor>
      <arglist>(CStyleArraySpec spec)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>caseHost</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToText.html</anchorfile>
      <anchor>a8fda556f3a29e119e6fd7c94d94cd5bc</anchor>
      <arglist>(Host host)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>caseLiteral</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToText.html</anchorfile>
      <anchor>a1b2c1419e2a355cabff1b79c485886e6</anchor>
      <arglist>(Literal l)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>caseParameterReference</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToText.html</anchorfile>
      <anchor>a056bd8d8f02a29b6ded9677dfca10a3a</anchor>
      <arglist>(ParameterReference p)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>caseTime</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToText.html</anchorfile>
      <anchor>ab73c064f6b8a2ed30b1982a54f3473cc</anchor>
      <arglist>(Time t)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>caseType</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToText.html</anchorfile>
      <anchor>a814bb2c09725d5bc8fbc06fdda2b3430</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>caseTypeParm</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToText.html</anchorfile>
      <anchor>a9c0f2c8500869ea14f66b960d7bbc320</anchor>
      <arglist>(TypeParm t)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>caseVarRef</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToText.html</anchorfile>
      <anchor>a55838040ae5620b18ec6812072dd4e39</anchor>
      <arglist>(VarRef v)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>defaultCase</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToText.html</anchorfile>
      <anchor>a90a633aa5b51d954119f5c2a3d565b46</anchor>
      <arglist>(EObject object)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final ToText</type>
      <name>instance</name>
      <anchorfile>classorg_1_1lflang_1_1ast_1_1ToText.html</anchorfile>
      <anchor>a71f6151c85896c1f4567adae9c5f6218</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::AttributeUtils</name>
    <filename>classorg_1_1lflang_1_1AttributeUtils.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>findAnnotationInComments</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>a5f7fd94cf2b8031a2da910fbefd8e483</anchor>
      <arglist>(EObject object, String key)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Attribute</type>
      <name>findAttributeByName</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>ae5d19563dc9410f1d38ea7a0cc844a33</anchor>
      <arglist>(EObject node, String name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; Attribute &gt;</type>
      <name>findAttributesByName</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>ad89b57cc25c83fe743d8284d5dde7d1c</anchor>
      <arglist>(EObject node, String name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>getAttributeParameter</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>a7db07eb14fbb3102749b4e0cf540ec6b</anchor>
      <arglist>(Attribute attribute, String parameterName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; Attribute &gt;</type>
      <name>getAttributes</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>a50d96aeef485dba78bfbe61fa66a885b</anchor>
      <arglist>(EObject node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>getAttributeValue</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>a92b69da36384df14c7f21483e78e9831</anchor>
      <arglist>(EObject node, String attrName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Map&lt; String, String &gt;</type>
      <name>getAttributeValues</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>ae5dee3965826e8a387f168b11f29d44e</anchor>
      <arglist>(EObject node, String attrName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Boolean</type>
      <name>getBooleanAttributeParameter</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>aa97652a95c2ff870b32450a58ad88118</anchor>
      <arglist>(Attribute attribute, String parameterName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Attribute</type>
      <name>getEnclaveAttribute</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>af5533a7c3d5096fb8abedeb74a46a29f</anchor>
      <arglist>(Instantiation node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getEnclaveNumWorkersFromAttribute</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>af9cd0c04e65b158f756cb6f795ce71f9</anchor>
      <arglist>(Instantiation node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>getFirstArgumentValue</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>a2ff15adc937ebff347ee56b702f51a8b</anchor>
      <arglist>(Attribute attr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>getIconPath</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>a78dc515c44f35c0535a2eb81d318ac18</anchor>
      <arglist>(EObject node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>getLabel</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>aceeeb935fd65583e8715f58dd1601848</anchor>
      <arglist>(EObject node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Map&lt; String, String &gt;</type>
      <name>getLayoutOption</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>a7679041b34d82526d983636c48a84dca</anchor>
      <arglist>(EObject node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>getPortSide</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>af8f04c78d4f4ee91a13cd551f68dcf89</anchor>
      <arglist>(EObject node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>hasCBody</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>a32478a716122f24fa20c8e66ecbe6ba5</anchor>
      <arglist>(Reaction reaction)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isEnclave</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>a4b28498531bd12bdb006c6038cbdaeba</anchor>
      <arglist>(Instantiation node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isEnclaveConnection</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>ac9f26d728910c2d87d47dccffa8affc9</anchor>
      <arglist>(Instantiation node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isFederate</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>ad500b685465318af9d50271109acc68d</anchor>
      <arglist>(Reactor reactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isSparse</name>
      <anchorfile>classorg_1_1lflang_1_1AttributeUtils.html</anchorfile>
      <anchor>a185a2b854090082ea6f134b629a61471</anchor>
      <arglist>(EObject node)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::CliBase</name>
    <filename>classorg_1_1lflang_1_1cli_1_1CliBase.html</filename>
    <class kind="class">org::lflang::cli::CliBase::MutuallyExclusive</class>
    <member kind="function">
      <type>void</type>
      <name>doExecute</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>ac23bb9088ce2e26fb9c5e07e8747ced9</anchor>
      <arglist>(Io io, String[] args)</arglist>
    </member>
    <member kind="function">
      <type>abstract void</type>
      <name>doRun</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a2e8cbdc17b3893b7bbd9068a69dddd16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource</type>
      <name>getResource</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>ad4aedc5c2fe06f93b53959b0bc91abf5</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; LfIssue &gt;</type>
      <name>printErrorsIfAny</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>aaf966f19d10247f68c3fbf03d5833f97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; LfIssue &gt;</type>
      <name>printWarningsIfAny</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>aa7825a0deb325591d31f7c441cd0e362</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a8081344617290661614acb69784b3c29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validateResource</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>ae5b2caded85a8cda5d5b5895ac503bf0</anchor>
      <arglist>(Resource resource)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Injector</type>
      <name>getInjector</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a9c478f0f00fc50a48afa1d24e5af3a37</anchor>
      <arglist>(String toolName, Io io)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>exitIfCollectedErrors</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a9ad5232cd1a9fec4706867271f3ac5c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; Path &gt;</type>
      <name>getInputPaths</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>afc3d5f806f41451594dc58f106a81daf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final JsonObject</type>
      <name>getJsonObject</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a9c4e28393be17f41170cfa6ab611ecda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Path</type>
      <name>getOutputRoot</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a005206f62a11cece150b904c98d73307</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final boolean</type>
      <name>stdinMode</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a82ea2005e758c213ffe57dcee7121c1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Path</type>
      <name>toAbsolutePath</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a934a42701916407fffb67ebcfff189b9</anchor>
      <arglist>(Path other)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>cliMain</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>afc5dda1855a072a5035ccc2bf1c2ace7</anchor>
      <arglist>(String toolName, Class&lt;? extends CliBase &gt; toolClass, Io io, String[] args)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Io</type>
      <name>io</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>ac955868a93c0a47be89613107be43b82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IssueCollector</type>
      <name>issueCollector</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a77321343ea0ae6cd43bf28c8c16ed88b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MessageReporter</type>
      <name>messageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a42d4b5edc281e69cfc2f5b54ab766da1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ReportingBackend</type>
      <name>reporter</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a851059a1a0968b365a94e1e1a71a1cad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>CommandSpec</type>
      <name>spec</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a251a05da4fc872d8242164f8286e583f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>MutuallyExclusive</type>
      <name>topLevelArg</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a98daa7d67690cb79d9d97012f8a9fc2a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::CliBase::MutuallyExclusive</name>
    <filename>classorg_1_1lflang_1_1cli_1_1CliBase_1_1MutuallyExclusive.html</filename>
    <member kind="variable" protection="protected">
      <type>List&lt; Path &gt;</type>
      <name>files</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase_1_1MutuallyExclusive.html</anchorfile>
      <anchor>ac4c5da56e69cc46e908eec954fd2d1a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Path</type>
      <name>jsonFile</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase_1_1MutuallyExclusive.html</anchorfile>
      <anchor>add3ae6fbf4f99b6d76721613b4b2df95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>String</type>
      <name>jsonString</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase_1_1MutuallyExclusive.html</anchorfile>
      <anchor>a3a9b4fade5de754ce2626961cf661bca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::CliToolTestFixture</name>
    <filename>classorg_1_1lflang_1_1cli_1_1CliToolTestFixture.html</filename>
    <member kind="function">
      <type>ExecutionResult</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliToolTestFixture.html</anchorfile>
      <anchor>aa01efcd25553e7456459206335484ff3</anchor>
      <arglist>(Path wd, String... args)</arglist>
    </member>
    <member kind="function">
      <type>ExecutionResult</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliToolTestFixture.html</anchorfile>
      <anchor>a2c4e87e14b413e42dc2bf8f2ace1b8f3</anchor>
      <arglist>(String... args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>abstract void</type>
      <name>runCliProgram</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliToolTestFixture.html</anchorfile>
      <anchor>a2339600e67c85a42dd1338704024663d</anchor>
      <arglist>(Io io, String[] args)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>record</type>
      <name>ExecutionResult</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliToolTestFixture.html</anchorfile>
      <anchor>a9dac6f15e38a9321ba9786b4e2cda804</anchor>
      <arglist>(ByteArrayOutputStream out, ByteArrayOutputStream err, int exitCode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::DiagramGenerationTest</name>
    <filename>classorg_1_1lflang_1_1cli_1_1DiagramGenerationTest.html</filename>
    <member kind="function">
      <type>Collection&lt; DynamicTest &gt;</type>
      <name>diagramGenerationTestFactory</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1DiagramGenerationTest.html</anchorfile>
      <anchor>ab1ca3cc38e5ae10f93094d1664bc9ac9</anchor>
      <arglist>(@TempDir Path tempDir)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::Lfc</name>
    <filename>classorg_1_1lflang_1_1cli_1_1Lfc.html</filename>
    <base>org.lflang.cli.CliBase</base>
    <class kind="class">org::lflang::cli::Lfc::ThreadingMutuallyExclusive</class>
    <member kind="function">
      <type>void</type>
      <name>doExecute</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>ac23bb9088ce2e26fb9c5e07e8747ced9</anchor>
      <arglist>(Io io, String[] args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doRun</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1Lfc.html</anchorfile>
      <anchor>aaf909ef91e4c7dc728189437af344771</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GeneratorArguments</type>
      <name>getArgs</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1Lfc.html</anchorfile>
      <anchor>ac7523bcf2d29d3eb7a5206525877e1c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource</type>
      <name>getResource</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>ad4aedc5c2fe06f93b53959b0bc91abf5</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; LfIssue &gt;</type>
      <name>printErrorsIfAny</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>aaf966f19d10247f68c3fbf03d5833f97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; LfIssue &gt;</type>
      <name>printWarningsIfAny</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>aa7825a0deb325591d31f7c441cd0e362</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a8081344617290661614acb69784b3c29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validateResource</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>ae5b2caded85a8cda5d5b5895ac503bf0</anchor>
      <arglist>(Resource resource)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Injector</type>
      <name>getInjector</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a9c478f0f00fc50a48afa1d24e5af3a37</anchor>
      <arglist>(String toolName, Io io)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>main</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1Lfc.html</anchorfile>
      <anchor>a1c6d4650c158130d730b3787f32a3cdf</anchor>
      <arglist>(final String[] args)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>main</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1Lfc.html</anchorfile>
      <anchor>aff6a86fe4f524ace0e460476a37b7f1b</anchor>
      <arglist>(Io io, final String... args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>exitIfCollectedErrors</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a9ad5232cd1a9fec4706867271f3ac5c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; Path &gt;</type>
      <name>getInputPaths</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>afc3d5f806f41451594dc58f106a81daf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final JsonObject</type>
      <name>getJsonObject</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a9c4e28393be17f41170cfa6ab611ecda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Path</type>
      <name>getOutputRoot</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a005206f62a11cece150b904c98d73307</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final boolean</type>
      <name>stdinMode</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a82ea2005e758c213ffe57dcee7121c1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Path</type>
      <name>toAbsolutePath</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a934a42701916407fffb67ebcfff189b9</anchor>
      <arglist>(Path other)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>cliMain</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>afc5dda1855a072a5035ccc2bf1c2ace7</anchor>
      <arglist>(String toolName, Class&lt;? extends CliBase &gt; toolClass, Io io, String[] args)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Io</type>
      <name>io</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>ac955868a93c0a47be89613107be43b82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IssueCollector</type>
      <name>issueCollector</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a77321343ea0ae6cd43bf28c8c16ed88b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MessageReporter</type>
      <name>messageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a42d4b5edc281e69cfc2f5b54ab766da1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ReportingBackend</type>
      <name>reporter</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a851059a1a0968b365a94e1e1a71a1cad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>CommandSpec</type>
      <name>spec</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a251a05da4fc872d8242164f8286e583f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>ThreadingMutuallyExclusive</type>
      <name>threading</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1Lfc.html</anchorfile>
      <anchor>a19f023b96ad2edfabb7daf5f0b106222</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>MutuallyExclusive</type>
      <name>topLevelArg</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a98daa7d67690cb79d9d97012f8a9fc2a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::Lfc::ThreadingMutuallyExclusive</name>
    <filename>classorg_1_1lflang_1_1cli_1_1Lfc_1_1ThreadingMutuallyExclusive.html</filename>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::LfcCliTest</name>
    <filename>classorg_1_1lflang_1_1cli_1_1LfcCliTest.html</filename>
    <class kind="class">org::lflang::cli::LfcCliTest::LfcOneShotTestFixture</class>
    <class kind="class">org::lflang::cli::LfcCliTest::LfcTestFixture</class>
    <member kind="function">
      <type>void</type>
      <name>testGeneratorArgs</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfcCliTest.html</anchorfile>
      <anchor>a623d5b83cd2139f9badc2a5453bddaf8</anchor>
      <arglist>(@TempDir Path tempDir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testGeneratorArgsJsonFile</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfcCliTest.html</anchorfile>
      <anchor>af0dd392df3db8169d0172d4039fb1147</anchor>
      <arglist>(@TempDir Path tempDir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testGeneratorArgsJsonString</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfcCliTest.html</anchorfile>
      <anchor>a61467868f544116d5959635aebf21492</anchor>
      <arglist>(@TempDir Path tempDir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testGenInSrcDir</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfcCliTest.html</anchorfile>
      <anchor>a7be6af8fff9085f95d4585cbc6213400</anchor>
      <arglist>(@TempDir Path tempDir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testHelpArg</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfcCliTest.html</anchorfile>
      <anchor>a07099bd2aa95c5a671521e995ab8195f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testInvalidArgs</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfcCliTest.html</anchorfile>
      <anchor>aea4cb709fb120fb12afaa7b7f057ba17</anchor>
      <arglist>(@TempDir Path tempDir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testMutuallyExclusiveCliArgs</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfcCliTest.html</anchorfile>
      <anchor>a035f735f8cd47d80bcb411a6ac1b5c75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testVersion</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfcCliTest.html</anchorfile>
      <anchor>a8016e2df91db3a46e2d6c779964f487f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testWrongCliArg</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfcCliTest.html</anchorfile>
      <anchor>a748250fd23032476e1bc6d447073b746</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>verifyGeneratorArgs</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfcCliTest.html</anchorfile>
      <anchor>a1b1eb520641c663e3acadf2935dc14c7</anchor>
      <arglist>(Path tempDir, String[] args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>verifyJsonGeneratorArgs</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfcCliTest.html</anchorfile>
      <anchor>af245ed605373469fb6d89e561ed60419</anchor>
      <arglist>(Path tempDir, String[] args)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LfcTestFixture</type>
      <name>lfcTester</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfcCliTest.html</anchorfile>
      <anchor>a2959035d945b570725461d621167edbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static final String</type>
      <name>JSON_STRING</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfcCliTest.html</anchorfile>
      <anchor>a4777dc28e3f1fd70b061eff8c770deb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static final String</type>
      <name>LF_PYTHON_FILE</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfcCliTest.html</anchorfile>
      <anchor>a3eb91a63e72474cb618ff5c2bcc3a1f7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::LfcCliTest::LfcOneShotTestFixture</name>
    <filename>classorg_1_1lflang_1_1cli_1_1LfcCliTest_1_1LfcOneShotTestFixture.html</filename>
    <base>org.lflang.cli.CliToolTestFixture</base>
    <member kind="function">
      <type>ExecutionResult</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliToolTestFixture.html</anchorfile>
      <anchor>aa01efcd25553e7456459206335484ff3</anchor>
      <arglist>(Path wd, String... args)</arglist>
    </member>
    <member kind="function">
      <type>ExecutionResult</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliToolTestFixture.html</anchorfile>
      <anchor>a2c4e87e14b413e42dc2bf8f2ace1b8f3</anchor>
      <arglist>(String... args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runCliProgram</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfcCliTest_1_1LfcOneShotTestFixture.html</anchorfile>
      <anchor>af3dea9eb476e5ff2aa5e66412d4d7b24</anchor>
      <arglist>(Io io, String[] args)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>record</type>
      <name>ExecutionResult</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliToolTestFixture.html</anchorfile>
      <anchor>a9dac6f15e38a9321ba9786b4e2cda804</anchor>
      <arglist>(ByteArrayOutputStream out, ByteArrayOutputStream err, int exitCode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::LfcCliTest::LfcTestFixture</name>
    <filename>classorg_1_1lflang_1_1cli_1_1LfcCliTest_1_1LfcTestFixture.html</filename>
    <base>org.lflang.cli.CliToolTestFixture</base>
    <member kind="function">
      <type>ExecutionResult</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliToolTestFixture.html</anchorfile>
      <anchor>aa01efcd25553e7456459206335484ff3</anchor>
      <arglist>(Path wd, String... args)</arglist>
    </member>
    <member kind="function">
      <type>ExecutionResult</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliToolTestFixture.html</anchorfile>
      <anchor>a2c4e87e14b413e42dc2bf8f2ace1b8f3</anchor>
      <arglist>(String... args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runCliProgram</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfcCliTest_1_1LfcTestFixture.html</anchorfile>
      <anchor>aebc2d2ea198f89efc153e94481e4e2bb</anchor>
      <arglist>(Io io, String[] args)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>record</type>
      <name>ExecutionResult</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliToolTestFixture.html</anchorfile>
      <anchor>a9dac6f15e38a9321ba9786b4e2cda804</anchor>
      <arglist>(ByteArrayOutputStream out, ByteArrayOutputStream err, int exitCode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::LFCliSetup</name>
    <filename>classorg_1_1lflang_1_1cli_1_1LFCliSetup.html</filename>
    <base>org.lflang.LFStandaloneSetup</base>
    <member kind="function">
      <type>Injector</type>
      <name>createInjector</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LFCliSetup.html</anchorfile>
      <anchor>af9dff6c679976d27d66faea95afd27b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Injector</type>
      <name>createInjectorAndDoEMFRegistration</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LFCliSetup.html</anchorfile>
      <anchor>abea988206ce863d8b95fb449ce6ef74e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LFCliSetup</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LFCliSetup.html</anchorfile>
      <anchor>a3bdd5f3835c9268423f21de41371ae61</anchor>
      <arglist>(ReportingBackend reporter, Io io)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Injector</type>
      <name>doSetup</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LFCliSetup.html</anchorfile>
      <anchor>a9b6ac989a5785a7a12d1e09daf025c44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Io</type>
      <name>io</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LFCliSetup.html</anchorfile>
      <anchor>ac2fa31e9337aac10de2e6b5578296692</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ReportingBackend</type>
      <name>reporter</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LFCliSetup.html</anchorfile>
      <anchor>afd7989a9b1823f79ea60de03fa9232d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static Injector</type>
      <name>injector</name>
      <anchorfile>classorg_1_1lflang_1_1LFStandaloneSetup.html</anchorfile>
      <anchor>a1bf576eac04b1c611048ccd2ea93d9a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::Lfd</name>
    <filename>classorg_1_1lflang_1_1cli_1_1Lfd.html</filename>
    <base>org.lflang.cli.CliBase</base>
    <member kind="function">
      <type>void</type>
      <name>doExecute</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>ac23bb9088ce2e26fb9c5e07e8747ced9</anchor>
      <arglist>(Io io, String[] args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doRun</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1Lfd.html</anchorfile>
      <anchor>a056b6884a8e16b083fd677dde1dc2921</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource</type>
      <name>getResource</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>ad4aedc5c2fe06f93b53959b0bc91abf5</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; LfIssue &gt;</type>
      <name>printErrorsIfAny</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>aaf966f19d10247f68c3fbf03d5833f97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; LfIssue &gt;</type>
      <name>printWarningsIfAny</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>aa7825a0deb325591d31f7c441cd0e362</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a8081344617290661614acb69784b3c29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validateResource</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>ae5b2caded85a8cda5d5b5895ac503bf0</anchor>
      <arglist>(Resource resource)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Injector</type>
      <name>getInjector</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a9c478f0f00fc50a48afa1d24e5af3a37</anchor>
      <arglist>(String toolName, Io io)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>main</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1Lfd.html</anchorfile>
      <anchor>a33483fc5baffa7ea0efc90042ab7ec1c</anchor>
      <arglist>(Io io, final String... args)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>main</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1Lfd.html</anchorfile>
      <anchor>a5121d6856c94efd6fda79367ef2d8f28</anchor>
      <arglist>(String[] args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>exitIfCollectedErrors</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a9ad5232cd1a9fec4706867271f3ac5c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; Path &gt;</type>
      <name>getInputPaths</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>afc3d5f806f41451594dc58f106a81daf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final JsonObject</type>
      <name>getJsonObject</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a9c4e28393be17f41170cfa6ab611ecda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Path</type>
      <name>getOutputRoot</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a005206f62a11cece150b904c98d73307</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final boolean</type>
      <name>stdinMode</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a82ea2005e758c213ffe57dcee7121c1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Path</type>
      <name>toAbsolutePath</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a934a42701916407fffb67ebcfff189b9</anchor>
      <arglist>(Path other)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>cliMain</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>afc5dda1855a072a5035ccc2bf1c2ace7</anchor>
      <arglist>(String toolName, Class&lt;? extends CliBase &gt; toolClass, Io io, String[] args)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Io</type>
      <name>io</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>ac955868a93c0a47be89613107be43b82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IssueCollector</type>
      <name>issueCollector</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a77321343ea0ae6cd43bf28c8c16ed88b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MessageReporter</type>
      <name>messageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a42d4b5edc281e69cfc2f5b54ab766da1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ReportingBackend</type>
      <name>reporter</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a851059a1a0968b365a94e1e1a71a1cad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>CommandSpec</type>
      <name>spec</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a251a05da4fc872d8242164f8286e583f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>MutuallyExclusive</type>
      <name>topLevelArg</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a98daa7d67690cb79d9d97012f8a9fc2a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::LfdCliTest</name>
    <filename>classorg_1_1lflang_1_1cli_1_1LfdCliTest.html</filename>
    <class kind="class">org::lflang::cli::LfdCliTest::LfdTestFixture</class>
    <member kind="function">
      <type>void</type>
      <name>testHelpArg</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfdCliTest.html</anchorfile>
      <anchor>a0679d89fc177dbdfe8bfa30f4156c522</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testInValidFile</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfdCliTest.html</anchorfile>
      <anchor>a4d0b5f3a7738c5ad03f42b290d5ebeda</anchor>
      <arglist>(@TempDir Path tempDir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testValidFile</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfdCliTest.html</anchorfile>
      <anchor>a04391d8167713542f7be44e9e45bb4e4</anchor>
      <arglist>(@TempDir Path tempDir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testVersion</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfdCliTest.html</anchorfile>
      <anchor>ac44a47ca2693835c55acd9ee7d6b46a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testWrongCliArg</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfdCliTest.html</anchorfile>
      <anchor>a1089c1e1fb1d8a4bd3c4ea92d3ec3855</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LfdTestFixture</type>
      <name>lfdTester</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfdCliTest.html</anchorfile>
      <anchor>a9b45423b700bba66be4fc5a190ffb33d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::LfdCliTest::LfdTestFixture</name>
    <filename>classorg_1_1lflang_1_1cli_1_1LfdCliTest_1_1LfdTestFixture.html</filename>
    <base>org.lflang.cli.CliToolTestFixture</base>
    <member kind="function">
      <type>ExecutionResult</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliToolTestFixture.html</anchorfile>
      <anchor>aa01efcd25553e7456459206335484ff3</anchor>
      <arglist>(Path wd, String... args)</arglist>
    </member>
    <member kind="function">
      <type>ExecutionResult</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliToolTestFixture.html</anchorfile>
      <anchor>a2c4e87e14b413e42dc2bf8f2ace1b8f3</anchor>
      <arglist>(String... args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runCliProgram</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LfdCliTest_1_1LfdTestFixture.html</anchorfile>
      <anchor>ae016a674bfa1da06397c022030552ed2</anchor>
      <arglist>(Io io, String[] args)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>record</type>
      <name>ExecutionResult</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliToolTestFixture.html</anchorfile>
      <anchor>a9dac6f15e38a9321ba9786b4e2cda804</anchor>
      <arglist>(ByteArrayOutputStream out, ByteArrayOutputStream err, int exitCode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::Lff</name>
    <filename>classorg_1_1lflang_1_1cli_1_1Lff.html</filename>
    <base>org.lflang.cli.CliBase</base>
    <member kind="function">
      <type>void</type>
      <name>doExecute</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>ac23bb9088ce2e26fb9c5e07e8747ced9</anchor>
      <arglist>(Io io, String[] args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doRun</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1Lff.html</anchorfile>
      <anchor>a7ab8f4f192c12aa16077205d5163ccf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource</type>
      <name>getResource</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>ad4aedc5c2fe06f93b53959b0bc91abf5</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; LfIssue &gt;</type>
      <name>printErrorsIfAny</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>aaf966f19d10247f68c3fbf03d5833f97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; LfIssue &gt;</type>
      <name>printWarningsIfAny</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>aa7825a0deb325591d31f7c441cd0e362</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a8081344617290661614acb69784b3c29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validateResource</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>ae5b2caded85a8cda5d5b5895ac503bf0</anchor>
      <arglist>(Resource resource)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Injector</type>
      <name>getInjector</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a9c478f0f00fc50a48afa1d24e5af3a37</anchor>
      <arglist>(String toolName, Io io)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>main</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1Lff.html</anchorfile>
      <anchor>a3a0e14eae3e33ec5920b05d3560d6f6e</anchor>
      <arglist>(Io io, final String... args)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>main</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1Lff.html</anchorfile>
      <anchor>a1b9355cf2d1c5337d01ad6b6671e9e7b</anchor>
      <arglist>(String[] args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>exitIfCollectedErrors</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a9ad5232cd1a9fec4706867271f3ac5c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; Path &gt;</type>
      <name>getInputPaths</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>afc3d5f806f41451594dc58f106a81daf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final JsonObject</type>
      <name>getJsonObject</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a9c4e28393be17f41170cfa6ab611ecda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Path</type>
      <name>getOutputRoot</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a005206f62a11cece150b904c98d73307</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final boolean</type>
      <name>stdinMode</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a82ea2005e758c213ffe57dcee7121c1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Path</type>
      <name>toAbsolutePath</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a934a42701916407fffb67ebcfff189b9</anchor>
      <arglist>(Path other)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>cliMain</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>afc5dda1855a072a5035ccc2bf1c2ace7</anchor>
      <arglist>(String toolName, Class&lt;? extends CliBase &gt; toolClass, Io io, String[] args)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Io</type>
      <name>io</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>ac955868a93c0a47be89613107be43b82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IssueCollector</type>
      <name>issueCollector</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a77321343ea0ae6cd43bf28c8c16ed88b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MessageReporter</type>
      <name>messageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a42d4b5edc281e69cfc2f5b54ab766da1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ReportingBackend</type>
      <name>reporter</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a851059a1a0968b365a94e1e1a71a1cad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>CommandSpec</type>
      <name>spec</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a251a05da4fc872d8242164f8286e583f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>MutuallyExclusive</type>
      <name>topLevelArg</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliBase.html</anchorfile>
      <anchor>a98daa7d67690cb79d9d97012f8a9fc2a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::LffCliTest</name>
    <filename>classorg_1_1lflang_1_1cli_1_1LffCliTest.html</filename>
    <class kind="class">org::lflang::cli::LffCliTest::LffTestFixture</class>
    <member kind="function">
      <type>void</type>
      <name>testCheck</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LffCliTest.html</anchorfile>
      <anchor>a9c457a3e025f25274a3f89cd07bc2ffc</anchor>
      <arglist>(@TempDir Path tempDir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testCheckAndDryRun</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LffCliTest.html</anchorfile>
      <anchor>a4c2cc6f140aba62e60a35e6198039035</anchor>
      <arglist>(@TempDir Path tempDir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testFormatDirectory</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LffCliTest.html</anchorfile>
      <anchor>a5c1101ca9429bcb8390df89907aa9f33</anchor>
      <arglist>(@TempDir Path tempDir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testFormatDirectoryVerbose</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LffCliTest.html</anchorfile>
      <anchor>a176b37aa769bd90edf861823bc048b93</anchor>
      <arglist>(@TempDir Path tempDir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testFormatSingleFileInPlace</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LffCliTest.html</anchorfile>
      <anchor>a2b887d26cfeccb9607d0a76dccb8b8c4</anchor>
      <arglist>(@TempDir Path tempDir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testHelpArg</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LffCliTest.html</anchorfile>
      <anchor>aadd99b9991d3c61b59c559ded1903bd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testNoSuchFile</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LffCliTest.html</anchorfile>
      <anchor>af908915fbeaef6c9f810030bfb38812a</anchor>
      <arglist>(@TempDir Path tempDir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testOutputPathWithDirArg</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LffCliTest.html</anchorfile>
      <anchor>a864097146a32569cfd20629b5e33654e</anchor>
      <arglist>(@TempDir Path tempDir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testOutputPathWithFileArg</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LffCliTest.html</anchorfile>
      <anchor>ad2a76a3155e26d65c58a37af4843cd1a</anchor>
      <arglist>(@TempDir Path tempDir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testVersion</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LffCliTest.html</anchorfile>
      <anchor>a4aa3e71eba25f4272cd6718cf1e6896d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testWrongCliArg</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LffCliTest.html</anchorfile>
      <anchor>ae1df9c14e2b78ea3ec1c09f046175ad9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LffTestFixture</type>
      <name>lffTester</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LffCliTest.html</anchorfile>
      <anchor>ad87fee46b1994ba7b5b7ab673774ef9c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::LffCliTest::LffTestFixture</name>
    <filename>classorg_1_1lflang_1_1cli_1_1LffCliTest_1_1LffTestFixture.html</filename>
    <base>org.lflang.cli.CliToolTestFixture</base>
    <member kind="function">
      <type>ExecutionResult</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliToolTestFixture.html</anchorfile>
      <anchor>aa01efcd25553e7456459206335484ff3</anchor>
      <arglist>(Path wd, String... args)</arglist>
    </member>
    <member kind="function">
      <type>ExecutionResult</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliToolTestFixture.html</anchorfile>
      <anchor>a2c4e87e14b413e42dc2bf8f2ace1b8f3</anchor>
      <arglist>(String... args)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runCliProgram</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LffCliTest_1_1LffTestFixture.html</anchorfile>
      <anchor>af72ebc1f2933246720f0354abc955220</anchor>
      <arglist>(Io io, String[] args)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>record</type>
      <name>ExecutionResult</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1CliToolTestFixture.html</anchorfile>
      <anchor>a9dac6f15e38a9321ba9786b4e2cda804</anchor>
      <arglist>(ByteArrayOutputStream out, ByteArrayOutputStream err, int exitCode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::LFStandaloneModule</name>
    <filename>classorg_1_1lflang_1_1cli_1_1LFStandaloneModule.html</filename>
    <member kind="function">
      <type>void</type>
      <name>configure</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LFStandaloneModule.html</anchorfile>
      <anchor>a8cd41c08ed0019db1e3958ba2a3f0223</anchor>
      <arglist>(Binder binder)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LFStandaloneModule</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1LFStandaloneModule.html</anchorfile>
      <anchor>a653185d4ae535696ffb4d063606ccfc0</anchor>
      <arglist>(ReportingBackend helper, Io io)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::StandaloneIssueAcceptor</name>
    <filename>classorg_1_1lflang_1_1cli_1_1StandaloneIssueAcceptor.html</filename>
    <member kind="function">
      <type>void</type>
      <name>acceptError</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1StandaloneIssueAcceptor.html</anchorfile>
      <anchor>a76d67d06a88c87084b227c45dfdbb470</anchor>
      <arglist>(String message, EObject object, EStructuralFeature feature, int index, String code, String... issueData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptError</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1StandaloneIssueAcceptor.html</anchorfile>
      <anchor>acec44908075146c5035304913401a1cb</anchor>
      <arglist>(String message, EObject object, int offset, int length, String code, String... issueData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptInfo</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1StandaloneIssueAcceptor.html</anchorfile>
      <anchor>a7ed5dafc33a9574c24e75e1d2a6d9e2f</anchor>
      <arglist>(String message, EObject object, EStructuralFeature feature, int index, String code, String... issueData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptInfo</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1StandaloneIssueAcceptor.html</anchorfile>
      <anchor>a2d21f0ea24de83b4783c63f65c064da0</anchor>
      <arglist>(String message, EObject object, int offset, int length, String code, String... issueData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptWarning</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1StandaloneIssueAcceptor.html</anchorfile>
      <anchor>aa89498daf73175cc75ddc43e2a0dd6a3</anchor>
      <arglist>(String message, EObject object, EStructuralFeature feature, int index, String code, String... issueData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>acceptWarning</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1StandaloneIssueAcceptor.html</anchorfile>
      <anchor>a8c5e53ca5b3143a56ec8cf1f8fa26133</anchor>
      <arglist>(String message, EObject object, int offset, int length, String code, String... issueData)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1StandaloneIssueAcceptor.html</anchorfile>
      <anchor>af3d575b91b2fb85d111ca408ec930e1c</anchor>
      <arglist>(LfIssue lfIssue)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>void</type>
      <name>accept</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1StandaloneIssueAcceptor.html</anchorfile>
      <anchor>a5c4c0387be0f73e062c031d575ffcfe7</anchor>
      <arglist>(Severity severity, String message, EObject object, EStructuralFeature feature, int index, String code, String... issueData)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>boolean</type>
      <name>getErrorsOccurred</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1StandaloneIssueAcceptor.html</anchorfile>
      <anchor>a05909e3e5d281f06d7de2a69ab9f25f5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::StandaloneMessageReporter</name>
    <filename>classorg_1_1lflang_1_1cli_1_1StandaloneMessageReporter.html</filename>
    <base>org.lflang.MessageReporterBase</base>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a3d5b75f44f1985a4e1024a8b43d61fec</anchor>
      <arglist>(Path file)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>aec08239e4e187b9fab9447f4d29b0479</anchor>
      <arglist>(Path file, int line)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a22bc622a160433fe40df98e229626760</anchor>
      <arglist>(Path file, Position pos)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a00cdd7120113ce25c9830e183e14c66f</anchor>
      <arglist>(EObject node)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a77356f4ec9535154ed819b9b32a1ceee</anchor>
      <arglist>(EObject node, EStructuralFeature feature)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>aee12d3be7c0c2f5e32079dfddd54c7da</anchor>
      <arglist>(Path file, Range range)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>atNullableLine</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a398b2acbf471940ad542db86c34bd7dd</anchor>
      <arglist>(Path file, Integer line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearHistory</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a40dba989b4d7ea727cf7b4a6bea7431f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>getErrorsOccurred</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1StandaloneMessageReporter.html</anchorfile>
      <anchor>aea9768115117d8a41bdf4cb518b69d47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>nowhere</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a6d8e986624a920121b5c6a165f3073a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>report</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1StandaloneMessageReporter.html</anchorfile>
      <anchor>a92cd089d4cc9bd488709597233ea80b1</anchor>
      <arglist>(Path path, Range range, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reportOnNode</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1StandaloneMessageReporter.html</anchorfile>
      <anchor>a3ac84cfe18962c8780510e5b324a4b16</anchor>
      <arglist>(EObject node, EStructuralFeature feature, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reportOnNode</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a084f678d4f71661620ed91058e4694c1</anchor>
      <arglist>(EObject node, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reportWithoutPosition</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1StandaloneMessageReporter.html</anchorfile>
      <anchor>a1edc23ef6bb3c3a023ec577773932020</anchor>
      <arglist>(DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Stage2</type>
      <name>wrap</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a365b78fc2a5d81158e450ea7aea5821b</anchor>
      <arglist>(Stage2 e)</arglist>
    </member>
    <member kind="function" protection="package" static="yes">
      <type>static Severity</type>
      <name>convertSeverity</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1StandaloneMessageReporter.html</anchorfile>
      <anchor>a169139939b431d7c40afe112674d02b0</anchor>
      <arglist>(DiagnosticSeverity severity)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::TestUtils</name>
    <filename>classorg_1_1lflang_1_1cli_1_1TestUtils.html</filename>
    <class kind="class">org::lflang::cli::TestUtils::TempDirBuilder</class>
    <class kind="class">org::lflang::cli::TestUtils::TempDirChecker</class>
    <member kind="function" static="yes">
      <type>static Matcher&lt; Path &gt;</type>
      <name>exists</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1TestUtils.html</anchorfile>
      <anchor>a10cee3559c226a2576b473520468b8a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matcher&lt; Path &gt;</type>
      <name>isDirectory</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1TestUtils.html</anchorfile>
      <anchor>a8eb1f294b31eebd5c140f6af4704d5d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Matcher&lt; Path &gt;</type>
      <name>isRegularFile</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1TestUtils.html</anchorfile>
      <anchor>a5942dd91decec2b4fee03727d4a7a07f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::TestUtils::TempDirBuilder</name>
    <filename>classorg_1_1lflang_1_1cli_1_1TestUtils_1_1TempDirBuilder.html</filename>
    <member kind="function">
      <type>TempDirBuilder</type>
      <name>cd</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1TestUtils_1_1TempDirBuilder.html</anchorfile>
      <anchor>a5f4ef7d6dc7d2fa9def3c5b67b04de9d</anchor>
      <arglist>(String relativePath)</arglist>
    </member>
    <member kind="function">
      <type>TempDirBuilder</type>
      <name>file</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1TestUtils_1_1TempDirBuilder.html</anchorfile>
      <anchor>aaa29567b10200f1ac2df2d665b3e085c</anchor>
      <arglist>(String relativePath, String contents)</arglist>
    </member>
    <member kind="function">
      <type>TempDirBuilder</type>
      <name>mkdirs</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1TestUtils_1_1TempDirBuilder.html</anchorfile>
      <anchor>abe92bd28c65dde90383c3c040626b54a</anchor>
      <arglist>(String relativePath)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TempDirBuilder</type>
      <name>dirBuilder</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1TestUtils_1_1TempDirBuilder.html</anchorfile>
      <anchor>a4d1a80151a8160f17335fad2247e808d</anchor>
      <arglist>(Path path)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::TestUtils::TempDirChecker</name>
    <filename>classorg_1_1lflang_1_1cli_1_1TestUtils_1_1TempDirChecker.html</filename>
    <member kind="function">
      <type>TempDirBuilder</type>
      <name>cd</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1TestUtils_1_1TempDirChecker.html</anchorfile>
      <anchor>aa09027124fd0057f47a3d115ca0feb89</anchor>
      <arglist>(String relativePath)</arglist>
    </member>
    <member kind="function">
      <type>TempDirChecker</type>
      <name>check</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1TestUtils_1_1TempDirChecker.html</anchorfile>
      <anchor>adce1d38aa58968d66549232390878228</anchor>
      <arglist>(String relativePath, Matcher&lt;? super Path &gt; pathMatcher)</arglist>
    </member>
    <member kind="function">
      <type>TempDirChecker</type>
      <name>checkContentsOf</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1TestUtils_1_1TempDirChecker.html</anchorfile>
      <anchor>a2a7f2023b591a24776c87e1d7986b891</anchor>
      <arglist>(String relativePath, Matcher&lt;? super String &gt; contentsMatcher)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TempDirChecker</type>
      <name>dirChecker</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1TestUtils_1_1TempDirChecker.html</anchorfile>
      <anchor>a13977e79bd34c9720232f5cf613038fa</anchor>
      <arglist>(Path path)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::cli::VersionProvider</name>
    <filename>classorg_1_1lflang_1_1cli_1_1VersionProvider.html</filename>
    <member kind="function">
      <type>String[]</type>
      <name>getVersion</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1VersionProvider.html</anchorfile>
      <anchor>a1ac2e5eb5720d04d26086d16d74814df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>CommandSpec</type>
      <name>spec</name>
      <anchorfile>classorg_1_1lflang_1_1cli_1_1VersionProvider.html</anchorfile>
      <anchor>ad89b7126b617c6773f3134520b06a390</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::DefaultMessageReporter</name>
    <filename>classorg_1_1lflang_1_1DefaultMessageReporter.html</filename>
    <base>org.lflang.MessageReporterBase</base>
    <base>org.lflang.MessageReporter</base>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a3d5b75f44f1985a4e1024a8b43d61fec</anchor>
      <arglist>(Path file)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>aec08239e4e187b9fab9447f4d29b0479</anchor>
      <arglist>(Path file, int line)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a22bc622a160433fe40df98e229626760</anchor>
      <arglist>(Path file, Position pos)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a00cdd7120113ce25c9830e183e14c66f</anchor>
      <arglist>(EObject node)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a77356f4ec9535154ed819b9b32a1ceee</anchor>
      <arglist>(EObject node, EStructuralFeature feature)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>aee12d3be7c0c2f5e32079dfddd54c7da</anchor>
      <arglist>(Path file, Range range)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>atNullableLine</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a398b2acbf471940ad542db86c34bd7dd</anchor>
      <arglist>(Path file, Integer line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearHistory</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a40dba989b4d7ea727cf7b4a6bea7431f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>getErrorsOccurred</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a7f189b3c1a3d8f9e1661756cc1d59f3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>nowhere</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a6d8e986624a920121b5c6a165f3073a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>report</name>
      <anchorfile>classorg_1_1lflang_1_1DefaultMessageReporter.html</anchorfile>
      <anchor>a2415bb40aba78010e5392f2704e82a41</anchor>
      <arglist>(Path path, Range range, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reportOnNode</name>
      <anchorfile>classorg_1_1lflang_1_1DefaultMessageReporter.html</anchorfile>
      <anchor>a3b486eb3b1e219fb6c6b2abad0f377dc</anchor>
      <arglist>(EObject node, EStructuralFeature feature, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reportOnNode</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a084f678d4f71661620ed91058e4694c1</anchor>
      <arglist>(EObject node, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reportWithoutPosition</name>
      <anchorfile>classorg_1_1lflang_1_1DefaultMessageReporter.html</anchorfile>
      <anchor>aa7a014ece9cdf5ea37cdd3582357e169</anchor>
      <arglist>(DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Stage2</type>
      <name>wrap</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a365b78fc2a5d81158e450ea7aea5821b</anchor>
      <arglist>(Stage2 e)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::lsp::BuildArgs</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1lsp_1_1BuildArgs.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1BuildArgs.html</anchorfile>
      <anchor>a255ff37db96a37ddaac7ac4612898890</anchor>
      <arglist>(Object o)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getJson</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1BuildArgs.html</anchorfile>
      <anchor>a11dcd3472fbb0ac7d057ed18abe4f990</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getUri</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1BuildArgs.html</anchorfile>
      <anchor>ade2b5207e3601f9c058b7cf9478aaebc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1BuildArgs.html</anchorfile>
      <anchor>a7816dafee7fb0695a929f2b1aa2ed7d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJson</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1BuildArgs.html</anchorfile>
      <anchor>aae13128b105a806a66cfd7c7a8eeb188</anchor>
      <arglist>(String json)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUri</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1BuildArgs.html</anchorfile>
      <anchor>ac57854d3137a8db5bf70b2f3d1438c64</anchor>
      <arglist>(String uri)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::lsp::LanguageDiagramServer</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LanguageDiagramServer.html</filename>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LanguageDiagramServer.html</anchorfile>
      <anchor>ad9b221b9e0fcf85e262d1f446e1f9bdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>main</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LanguageDiagramServer.html</anchorfile>
      <anchor>a15c102939303fdf652f2acebc32c7971</anchor>
      <arglist>(String[] args)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::diagram::lsp::LFLanguageClient</name>
    <filename>interfaceorg_1_1lflang_1_1diagram_1_1lsp_1_1LFLanguageClient.html</filename>
    <member kind="function">
      <type>void</type>
      <name>sendLibraryReactors</name>
      <anchorfile>interfaceorg_1_1lflang_1_1diagram_1_1lsp_1_1LFLanguageClient.html</anchorfile>
      <anchor>af08c566618b615aac14e65936f77f02b</anchor>
      <arglist>(LibraryFile libraryFile)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::lsp::LFLanguageServer</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LFLanguageServer.html</filename>
    <member kind="function">
      <type>void</type>
      <name>cancelProgress</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LFLanguageServer.html</anchorfile>
      <anchor>ad74d3ad9715a45a4a5ce0d53c95c8bf4</anchor>
      <arglist>(WorkDoneProgressCancelParams params)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Hover</type>
      <name>hover</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LFLanguageServer.html</anchorfile>
      <anchor>a6712d9df1f6ebe0e2c8a331c8b975a52</anchor>
      <arglist>(HoverParams params, CancelIndicator cancelIndicator)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::lsp::LFLanguageServerExtension</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LFLanguageServerExtension.html</filename>
    <member kind="function">
      <type>CompletableFuture&lt; String &gt;</type>
      <name>build</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LFLanguageServerExtension.html</anchorfile>
      <anchor>ae7ea0a47959ea7247c194e32a2a1d1fa</anchor>
      <arglist>(BuildArgs args)</arglist>
    </member>
    <member kind="function">
      <type>CompletableFuture&lt; String[]&gt;</type>
      <name>buildAndRun</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LFLanguageServerExtension.html</anchorfile>
      <anchor>af43f0432066d506e3430fe0a522ebd0e</anchor>
      <arglist>(BuildArgs args)</arglist>
    </member>
    <member kind="function">
      <type>CompletableFuture&lt; String &gt;</type>
      <name>getAst</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LFLanguageServerExtension.html</anchorfile>
      <anchor>ac1123a04fcd80a2ac6fea2a18ad05f7a</anchor>
      <arglist>(String uri)</arglist>
    </member>
    <member kind="function">
      <type>CompletableFuture&lt; LibraryFile &gt;</type>
      <name>getLibraryReactors</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LFLanguageServerExtension.html</anchorfile>
      <anchor>a73f65ab68db407625f121797f7c48b83</anchor>
      <arglist>(String filePath)</arglist>
    </member>
    <member kind="function">
      <type>CompletableFuture&lt; NodePosition &gt;</type>
      <name>getTargetPosition</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LFLanguageServerExtension.html</anchorfile>
      <anchor>ad564e958baae8f6b1a7d6ea7d9c1bcc5</anchor>
      <arglist>(String path)</arglist>
    </member>
    <member kind="function">
      <type>XtextResourceSet</type>
      <name>getXtextResourceSet</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LFLanguageServerExtension.html</anchorfile>
      <anchor>af708381dc5b06538626593e104bf7bf6</anchor>
      <arglist>(final URI uri)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LFLanguageServerExtension.html</anchorfile>
      <anchor>aecd30006840bb3e2afed4edd4b4df25e</anchor>
      <arglist>(ILanguageServerAccess access)</arglist>
    </member>
    <member kind="function">
      <type>LibraryFile</type>
      <name>parseLibraryReactors</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LFLanguageServerExtension.html</anchorfile>
      <anchor>a4ff3a8b6262b73b0ec157351fa358f89</anchor>
      <arglist>(URI uri)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>partialBuild</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LFLanguageServerExtension.html</anchorfile>
      <anchor>a467b5e3c4d0fe49dc6edbf6ca1a6ea81</anchor>
      <arglist>(BuildArgs args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClient</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LFLanguageServerExtension.html</anchorfile>
      <anchor>a9815b7a7fd8767bed9bf31e881c99a9b</anchor>
      <arglist>(LFLanguageClient client)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Injector</type>
      <name>injector</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LFLanguageServerExtension.html</anchorfile>
      <anchor>a892a14e08c0838627c8a9bfe114e8351</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::lsp::LibraryFile</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LibraryFile.html</filename>
    <member kind="function">
      <type>List&lt; ReactorNode &gt;</type>
      <name>getChildren</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LibraryFile.html</anchorfile>
      <anchor>a8a7cd9428a2aa003cc6fd3ae0ca2ba80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getLabel</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LibraryFile.html</anchorfile>
      <anchor>ad31967e74f77810168faa680ca1d02b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getUri</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LibraryFile.html</anchorfile>
      <anchor>ace7a5da572567906daa6b93ba91ba35a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LibraryFile</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1LibraryFile.html</anchorfile>
      <anchor>a6886f62d7ea15aa7714827ce312a4e7a</anchor>
      <arglist>(String uri)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::lsp::NodePosition</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1lsp_1_1NodePosition.html</filename>
    <member kind="function">
      <type>int</type>
      <name>getEnd</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1NodePosition.html</anchorfile>
      <anchor>a68fcf1e22a9f08194b2705592968fae2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getStart</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1NodePosition.html</anchorfile>
      <anchor>a90fc731ac4ace56d39e7ba34bca4587b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodePosition</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1NodePosition.html</anchorfile>
      <anchor>acb6ed6307f0e91d075aa8768894d98f4</anchor>
      <arglist>(int start, int end)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::lsp::Progress</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1lsp_1_1Progress.html</filename>
    <member kind="function">
      <type>void</type>
      <name>begin</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1Progress.html</anchorfile>
      <anchor>a2284e5cf9c490d92061e6d69ce443ff5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>end</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1Progress.html</anchorfile>
      <anchor>a0025784aafa7693171c07cc4b7727523</anchor>
      <arglist>(String message)</arglist>
    </member>
    <member kind="function">
      <type>CancelIndicator</type>
      <name>getCancelIndicator</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1Progress.html</anchorfile>
      <anchor>a1fbdfa70dcf295523a0c4ffde77eeeac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Progress</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1Progress.html</anchorfile>
      <anchor>a9b630e68907e4366c118cec4a2ae4b7b</anchor>
      <arglist>(LanguageClient client, String title, boolean cancellable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>report</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1Progress.html</anchorfile>
      <anchor>ad6c685cd5d12aec07a0476981ba9e395</anchor>
      <arglist>(String message, Integer percentage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>cancel</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1Progress.html</anchorfile>
      <anchor>a470c66e0cabfa2fd017dcb3f0fc29237</anchor>
      <arglist>(int token)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::lsp::ReactorNode</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1lsp_1_1ReactorNode.html</filename>
    <member kind="function">
      <type>String</type>
      <name>getLabel</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1ReactorNode.html</anchorfile>
      <anchor>a8d909cf574809d2c8a5e3299c8397cb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NodePosition</type>
      <name>getPosition</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1ReactorNode.html</anchorfile>
      <anchor>a566a7994436459e05536d5b5fdb53f1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getUri</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1ReactorNode.html</anchorfile>
      <anchor>a3f3db06e4efb62deeed035f9fc7ce01e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReactorNode</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1lsp_1_1ReactorNode.html</anchorfile>
      <anchor>a3b09d6a2e5c7355ab4e6d2d6d7bd6b6a</anchor>
      <arglist>(String label, String uri, NodePosition position)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::AbstractSynthesisExtensions</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>getBooleanValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>a5661b8e2f017ad87ecf1a4fa87295fcf</anchor>
      <arglist>(SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getFloatValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>ac9ab360bdc1ea27220ac2fc354ed258d</anchor>
      <arglist>(SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>Object</type>
      <name>getObjectValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>ab2f969539122fa5e31062950d251a9d5</anchor>
      <arglist>(final SynthesisOption option)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T extends EObject &gt; T</type>
      <name>associateWith</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>a5ad42c0b0087e4e49fd41619417235d4</anchor>
      <arglist>(T derived, Object source)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T extends AbstractDiagramSynthesis&lt;?&gt; &gt; T</type>
      <name>getRootSynthesis</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>abdef98c1a65d2fdb5511a1a6c680cb3b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::action::AbstractAction</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</filename>
    <member kind="function">
      <type>Reactor</type>
      <name>sourceAsReactor</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>ace2651be8a5b5a6ca51ae367449c854f</anchor>
      <arglist>(final KNode node)</arglist>
    </member>
    <member kind="function">
      <type>Object</type>
      <name>sourceElement</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>a7e33727c379108d48c1a2b0e796bfba2</anchor>
      <arglist>(final KGraphElement elem)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>sourceIs</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>abc382df44a5dbdccbddc3f00d56df9a8</anchor>
      <arglist>(KNode node, Class&lt;?&gt; clazz)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>sourceIsReactor</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>ae7a37e49d1d5bdf5d360b5473fee1ea9</anchor>
      <arglist>(final KNode node)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::action::CollapseAllReactorsAction</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1CollapseAllReactorsAction.html</filename>
    <base>org.lflang.diagram.synthesis.action.AbstractAction</base>
    <member kind="function">
      <type>IAction.ActionResult</type>
      <name>execute</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1CollapseAllReactorsAction.html</anchorfile>
      <anchor>ab7d894b34b7c19d7053a8e6fd98f449c</anchor>
      <arglist>(final IAction.ActionContext context)</arglist>
    </member>
    <member kind="function">
      <type>Reactor</type>
      <name>sourceAsReactor</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>ace2651be8a5b5a6ca51ae367449c854f</anchor>
      <arglist>(final KNode node)</arglist>
    </member>
    <member kind="function">
      <type>Object</type>
      <name>sourceElement</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>a7e33727c379108d48c1a2b0e796bfba2</anchor>
      <arglist>(final KGraphElement elem)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>sourceIs</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>abc382df44a5dbdccbddc3f00d56df9a8</anchor>
      <arglist>(KNode node, Class&lt;?&gt; clazz)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>sourceIsReactor</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>ae7a37e49d1d5bdf5d360b5473fee1ea9</anchor>
      <arglist>(final KNode node)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>ID</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1CollapseAllReactorsAction.html</anchorfile>
      <anchor>aa4b5ff7d1d53677e108cb96b450f21b1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::action::ExpandAllReactorsAction</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1ExpandAllReactorsAction.html</filename>
    <base>org.lflang.diagram.synthesis.action.AbstractAction</base>
    <member kind="function">
      <type>IAction.ActionResult</type>
      <name>execute</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1ExpandAllReactorsAction.html</anchorfile>
      <anchor>a5a873cdcbebf9123e36050d476622a91</anchor>
      <arglist>(final IAction.ActionContext context)</arglist>
    </member>
    <member kind="function">
      <type>Reactor</type>
      <name>sourceAsReactor</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>ace2651be8a5b5a6ca51ae367449c854f</anchor>
      <arglist>(final KNode node)</arglist>
    </member>
    <member kind="function">
      <type>Object</type>
      <name>sourceElement</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>a7e33727c379108d48c1a2b0e796bfba2</anchor>
      <arglist>(final KGraphElement elem)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>sourceIs</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>abc382df44a5dbdccbddc3f00d56df9a8</anchor>
      <arglist>(KNode node, Class&lt;?&gt; clazz)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>sourceIsReactor</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>ae7a37e49d1d5bdf5d360b5473fee1ea9</anchor>
      <arglist>(final KNode node)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>ID</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1ExpandAllReactorsAction.html</anchorfile>
      <anchor>aae5344b8f1731d778bc9930a9b46b2de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::action::FilterCycleAction</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1FilterCycleAction.html</filename>
    <base>org.lflang.diagram.synthesis.action.AbstractAction</base>
    <member kind="function">
      <type>IAction.ActionResult</type>
      <name>execute</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1FilterCycleAction.html</anchorfile>
      <anchor>ab055869cb5fe3220abe6502bae09d138</anchor>
      <arglist>(final IAction.ActionContext context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>filterCycle</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1FilterCycleAction.html</anchorfile>
      <anchor>a665ff12f0bd6b7c4e8d997a385afedd3</anchor>
      <arglist>(KNode root)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isCycleFiltered</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1FilterCycleAction.html</anchorfile>
      <anchor>abe1786d4b84c594cdf4e8b8e30e76189</anchor>
      <arglist>(KNode node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markCycleFiltered</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1FilterCycleAction.html</anchorfile>
      <anchor>a1097f7f3af146eb842eeb77454054c23</anchor>
      <arglist>(KNode node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markCycleFilterText</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1FilterCycleAction.html</anchorfile>
      <anchor>a644c40e65177b4ae16343e090dd968c3</anchor>
      <arglist>(KText text, KNode node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetCycleFiltering</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1FilterCycleAction.html</anchorfile>
      <anchor>a5eca1c10092815aa57b438d00e12a00a</anchor>
      <arglist>(KNode node)</arglist>
    </member>
    <member kind="function">
      <type>Reactor</type>
      <name>sourceAsReactor</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>ace2651be8a5b5a6ca51ae367449c854f</anchor>
      <arglist>(final KNode node)</arglist>
    </member>
    <member kind="function">
      <type>Object</type>
      <name>sourceElement</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>a7e33727c379108d48c1a2b0e796bfba2</anchor>
      <arglist>(final KGraphElement elem)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>sourceIs</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>abc382df44a5dbdccbddc3f00d56df9a8</anchor>
      <arglist>(KNode node, Class&lt;?&gt; clazz)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>sourceIsReactor</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>ae7a37e49d1d5bdf5d360b5473fee1ea9</anchor>
      <arglist>(final KNode node)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Property&lt; Boolean &gt;</type>
      <name>FILTER_BUTTON</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1FilterCycleAction.html</anchorfile>
      <anchor>a26dcb2dca2ee229fbfe5396e550d4e4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>ID</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1FilterCycleAction.html</anchorfile>
      <anchor>aaf5ad0bca876ba48ee4a8b31ef164c52</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::action::MemorizingExpandCollapseAction</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1MemorizingExpandCollapseAction.html</filename>
    <base>org.lflang.diagram.synthesis.action.AbstractAction</base>
    <member kind="function">
      <type>IAction.ActionResult</type>
      <name>execute</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1MemorizingExpandCollapseAction.html</anchorfile>
      <anchor>a6f5f6e766189396f6604a7fd0ad11731</anchor>
      <arglist>(final IAction.ActionContext context)</arglist>
    </member>
    <member kind="function">
      <type>Reactor</type>
      <name>sourceAsReactor</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>ace2651be8a5b5a6ca51ae367449c854f</anchor>
      <arglist>(final KNode node)</arglist>
    </member>
    <member kind="function">
      <type>Object</type>
      <name>sourceElement</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>a7e33727c379108d48c1a2b0e796bfba2</anchor>
      <arglist>(final KGraphElement elem)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>sourceIs</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>abc382df44a5dbdccbddc3f00d56df9a8</anchor>
      <arglist>(KNode node, Class&lt;?&gt; clazz)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>sourceIsReactor</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>ae7a37e49d1d5bdf5d360b5473fee1ea9</anchor>
      <arglist>(final KNode node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Boolean</type>
      <name>getExpansionState</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1MemorizingExpandCollapseAction.html</anchorfile>
      <anchor>a63831d2d1093fdb683bbcd8b920c888b</anchor>
      <arglist>(final Object obj)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setExpansionState</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1MemorizingExpandCollapseAction.html</anchorfile>
      <anchor>ac75280b01f4dcf481900e2510a8f2425</anchor>
      <arglist>(final KNode node, final Object memorizableObj, final IViewer viewer, final boolean expand)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>ID</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1MemorizingExpandCollapseAction.html</anchorfile>
      <anchor>a7c5246d6153d17488e7ed2afc55e14d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>MEMORIZE_EXPANSION_STATES</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1MemorizingExpandCollapseAction.html</anchorfile>
      <anchor>abf536020c6d23aa63a157c26860473fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::action::ShowCycleAction</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1ShowCycleAction.html</filename>
    <base>org.lflang.diagram.synthesis.action.AbstractAction</base>
    <member kind="function">
      <type>IAction.ActionResult</type>
      <name>execute</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1ShowCycleAction.html</anchorfile>
      <anchor>a4161fb8981623c635ecfebd8d1031bc1</anchor>
      <arglist>(final IAction.ActionContext context)</arglist>
    </member>
    <member kind="function">
      <type>Reactor</type>
      <name>sourceAsReactor</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>ace2651be8a5b5a6ca51ae367449c854f</anchor>
      <arglist>(final KNode node)</arglist>
    </member>
    <member kind="function">
      <type>Object</type>
      <name>sourceElement</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>a7e33727c379108d48c1a2b0e796bfba2</anchor>
      <arglist>(final KGraphElement elem)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>sourceIs</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>abc382df44a5dbdccbddc3f00d56df9a8</anchor>
      <arglist>(KNode node, Class&lt;?&gt; clazz)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>sourceIsReactor</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1AbstractAction.html</anchorfile>
      <anchor>ae7a37e49d1d5bdf5d360b5473fee1ea9</anchor>
      <arglist>(final KNode node)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>ID</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1action_1_1ShowCycleAction.html</anchorfile>
      <anchor>aefd35a5fdde85554e3e7eaa7e1ac42f3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::LinguaFrancaSynthesis</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addStateVariableList</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a6a0a5e196bb3590667f5e5e2a03f28da</anchor>
      <arglist>(KContainerRendering container, List&lt; StateVar &gt; variables)</arglist>
    </member>
    <member kind="function">
      <type>KNode</type>
      <name>configureReactorNodeLayout</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a374b0441d3fa72e26e87b92fcd0a0a17</anchor>
      <arglist>(KNode node, boolean main)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; DisplayedActionData &gt;</type>
      <name>getDisplayedActions</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a65a5b7c6e766ea61ca4ee162cc0fc2b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; SynthesisOption &gt;</type>
      <name>getDisplayedSynthesisOptions</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>ab677ed737bf7cf00872fbe26c073d426</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAnnotatedLayoutOptions</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a6ec321bae07478564708e765541ddf48</anchor>
      <arglist>(EObject modelElement, EMapPropertyHolder kgraphElement)</arglist>
    </member>
    <member kind="function">
      <type>KNode</type>
      <name>transform</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a94bc42f34ac465af6590f5d9f755af67</anchor>
      <arglist>(final Model model)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getReactorPortOffset</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a96647472129139b7ab39ff85c16a814b</anchor>
      <arglist>(boolean sideLeft, boolean multiport, boolean bank)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final List&lt; Float &gt;</type>
      <name>ALTERNATIVE_DASH_PATTERN</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a6933c6e4f91ff4b4bf85eac0a98b9347</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>APPEARANCE</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>ac95f5fcea9a2b83ea09d676f9f7cd8b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final DisplayedActionData</type>
      <name>COLLAPSE_ALL</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a10e0ddb2ba9f915ff1d5c9bcacf0a988</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>CYCLE_DETECTION</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>adc5dfe04a329dcd8aa89665ad7f265c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>DEFAULT_EXPAND_ALL</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>abdfb483e3b2df2df3513d91e9c6db631</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final DisplayedActionData</type>
      <name>EXPAND_ALL</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>af4f96e03da9d18e49744943b603c0db6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>EXPERIMENTAL</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>aaacb9278d8278db1f0b1e9e330be95e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>FIXED_PORT_SIDE</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a5d79d92e96fcdb070a49d359dfc626e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>ID</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>afdcb3817c54ef7f5f2592df2ff7da2a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>LAYOUT</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a445c075f829d8cdf083385aaa85bf593</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Property&lt; Boolean &gt;</type>
      <name>REACTION_SPECIAL_TRIGGER</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>abf7daaddc6005545dd1fdac8b2ce0ccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>REACTIONS_USE_HYPEREDGES</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>ae484f1ee99de63a3b07934fa5af628b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>REACTOR_BODY_TABLE_COLS</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a6f5c16c0f9923b9c8147c0db9f1af913</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Property&lt; Boolean &gt;</type>
      <name>REACTOR_HAS_BANK_PORT_OFFSET</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>aef0c85af4ee3d6ab5ef4219ccf6cf928</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Property&lt; Boolean &gt;</type>
      <name>REACTOR_INPUT</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>aad74d67bee162c9b394a7b0969ebfc84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Property&lt; Boolean &gt;</type>
      <name>REACTOR_MULTIPORT</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a7090c4f418316b9c153d3019241973fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Property&lt; Boolean &gt;</type>
      <name>REACTOR_OUTPUT</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>acfded58e3aaeaa02ff40a5846b3db86e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>REACTOR_PARAMETER_MODE</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a682caf83b6196d3a7d80d4638a63b12e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Property&lt; Boolean &gt;</type>
      <name>REACTOR_RECURSIVE_INSTANTIATION</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a70884798daedc0cfcabd5c049dc686d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>SHOW_ALL_REACTORS</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a3ed48afac43e68bf4021a03919d32eb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>SHOW_HYPERLINKS</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a106f53047cdebbd65ca2f42efe74902e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>SHOW_INSTANCE_NAMES</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>acf4354736e3773e91e9c8fcacc38bd30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>SHOW_MULTIPORT_WIDTH</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a48b07d528a623cc1fed19931d171ce1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>SHOW_PORT_NAMES</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>aabbcbef019458383a64632bf0015dbd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>SHOW_REACTION_CODE</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>ad8b6a5f3a5f5dcbb298516eb86cb2909</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>SHOW_REACTION_NAMES</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a476b4b30f70f74ea8851e85b6ba2afba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>SHOW_REACTION_ORDER_EDGES</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>af987ab709afb2acfea110d00dd411a93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>SHOW_REACTOR_HOST</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a3e291da1c484409e4383066167327526</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>SHOW_STATE_VARIABLES</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>ae4d211f6454855079c3b2936e2dccf74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>SHOW_USER_LABELS</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>aa23cdd03464674cd43218dfb8f2b052c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>SPACING</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a1f934baa826b42183d2d45b1a3caefdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>TEXT_ERROR_CONTAINS_CYCLE</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a173a30610179107304ffe7f8c4cf8938</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>TEXT_ERROR_CONTAINS_RECURSION</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a24894a5ec4cfaad9d251181f64817644</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>TEXT_ERROR_CYCLE_BTN_FILTER</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a34e8e43ba0ecb74d44d6910157c43dce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>TEXT_ERROR_CYCLE_BTN_SHOW</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a9cbf6ca60c8f1c81228d663ff0ada498</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>TEXT_ERROR_CYCLE_BTN_UNFILTER</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a4f2cd0670a0aa94f79325cc4f3d12644</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>TEXT_ERROR_CYCLE_DETECTION</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>af9ad6c10a8a84ca80b2b1dcd6b2851ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>TEXT_ERROR_RECURSIVE</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a7dffd7bf056d183d96ed4f4fe9eebc1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>TEXT_HIDE_ACTION</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a489e20e5586a16dc399eb8795974cb9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>TEXT_NO_MAIN_REACTOR</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a33e08f455f63faca491be6a48329c22d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>TEXT_REACTOR_NULL</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a541a6f5c9cef91ac946a3af2a8617438</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>TEXT_SHOW_ACTION</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>a323db5a74bf91022cfa5640c82db1709</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>USE_ALTERNATIVE_DASH_PATTERN</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1LinguaFrancaSynthesis.html</anchorfile>
      <anchor>adbafd82f4620fca5310b03cc53e6b4f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::postprocessor::ReactionPortAdjustment</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1postprocessor_1_1ReactionPortAdjustment.html</filename>
    <member kind="function">
      <type>KPoint</type>
      <name>adjustedKPoint</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1postprocessor_1_1ReactionPortAdjustment.html</anchorfile>
      <anchor>a1b7c0df0ffbaa6e2554d60683dfa07db</anchor>
      <arglist>(KPoint point, float xOffset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adjustPositions</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1postprocessor_1_1ReactionPortAdjustment.html</anchorfile>
      <anchor>ac50dbfaa5cd9eaabbd6cec6b2b68b3dc</anchor>
      <arglist>(Iterable&lt; Pair&lt; Integer, KPort &gt; &gt; indexedPorts, int count, boolean input)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>modify</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1postprocessor_1_1ReactionPortAdjustment.html</anchorfile>
      <anchor>a318040059e92bd220dea9ee076db1c1f</anchor>
      <arglist>(IStyleModifier.StyleModificationContext context)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>apply</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1postprocessor_1_1ReactionPortAdjustment.html</anchorfile>
      <anchor>ae345dbd1da42889c38a4b44f25af9811</anchor>
      <arglist>(KNode node, KRendering rendering)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>ID</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1postprocessor_1_1ReactionPortAdjustment.html</anchorfile>
      <anchor>a19b8c95c3d9134fb1fbe83f83047fd54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Property&lt; Boolean &gt;</type>
      <name>PROCESSED</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1postprocessor_1_1ReactionPortAdjustment.html</anchorfile>
      <anchor>a6c75ea1f4a2d064b6107d728d0b17b63</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::postprocessor::ReactorPortAdjustment</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1postprocessor_1_1ReactorPortAdjustment.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>modify</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1postprocessor_1_1ReactorPortAdjustment.html</anchorfile>
      <anchor>ae88ceb00fbd8d303c9371b9e821ca2d9</anchor>
      <arglist>(IStyleModifier.StyleModificationContext context)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReactorPortAdjustment</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1postprocessor_1_1ReactorPortAdjustment.html</anchorfile>
      <anchor>a476b86d163097d30ce92b0d1c40371a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>apply</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1postprocessor_1_1ReactorPortAdjustment.html</anchorfile>
      <anchor>a4ccbeea02967555c0d3b9b3b9b69110a</anchor>
      <arglist>(KNode node, List&lt; KRendering &gt; renderings)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Property&lt; Boolean &gt;</type>
      <name>FLIPPED</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1postprocessor_1_1ReactorPortAdjustment.html</anchorfile>
      <anchor>a53ac9050c20adc196459b6fc1aaa5045</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>ID</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1postprocessor_1_1ReactorPortAdjustment.html</anchorfile>
      <anchor>a28583260d799c10ea43501d0c37a8114</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::diagram::synthesis::ReactorParameterDisplayModes</name>
    <filename>enumorg_1_1lflang_1_1diagram_1_1synthesis_1_1ReactorParameterDisplayModes.html</filename>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>enumorg_1_1lflang_1_1diagram_1_1synthesis_1_1ReactorParameterDisplayModes.html</anchorfile>
      <anchor>acc1a5fc5eb0cfcd0fcd4a0db5cb8ac66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NONE</name>
      <anchorfile>enumorg_1_1lflang_1_1diagram_1_1synthesis_1_1ReactorParameterDisplayModes.html</anchorfile>
      <anchor>ac0e14849b78fb1a6840651287aada4d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TABLE</name>
      <anchorfile>enumorg_1_1lflang_1_1diagram_1_1synthesis_1_1ReactorParameterDisplayModes.html</anchorfile>
      <anchor>af8d89c62c48ccc57c8e1b966e66a265d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TITLE</name>
      <anchorfile>enumorg_1_1lflang_1_1diagram_1_1synthesis_1_1ReactorParameterDisplayModes.html</anchorfile>
      <anchor>a1ad824bf966cd70ed1279cf981da809b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::styles::LinguaFrancaShapeExtensions</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</filename>
    <base>org.lflang.diagram.synthesis.AbstractSynthesisExtensions</base>
    <member kind="function">
      <type>Pair&lt; KPort, KPort &gt;</type>
      <name>addActionFigureAndPorts</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>a2c36e350bc0820de05fa9a4f788ed148</anchor>
      <arglist>(KNode node, String text)</arglist>
    </member>
    <member kind="function">
      <type>KRoundedRectangle</type>
      <name>addCommentFigure</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>a10edd02a17a355d504d27e9d768c68f3</anchor>
      <arglist>(KNode node, String message)</arglist>
    </member>
    <member kind="function">
      <type>KPolyline</type>
      <name>addCommentPolyline</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>a69f6722412c60206c524cf3921dd0f84</anchor>
      <arglist>(KEdge edge)</arglist>
    </member>
    <member kind="function">
      <type>KRectangle</type>
      <name>addErrorMessage</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>a099d500f46e785bffaf6bfd27a4ab49b</anchor>
      <arglist>(KNode node, String title, String message)</arglist>
    </member>
    <member kind="function">
      <type>KRoundedRectangle</type>
      <name>addMainReactorFigure</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>a98c5a133e4cb1e2cbc0e1303b70e4602</anchor>
      <arglist>(KNode node, ReactorInstance reactorInstance, String text)</arglist>
    </member>
    <member kind="function">
      <type>KContainerRendering</type>
      <name>addParameterEntry</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>a37b38568fcfb990043ce6a00001cdb0e</anchor>
      <arglist>(KContainerRendering parent, Parameter associate, String text)</arglist>
    </member>
    <member kind="function">
      <type>KPolygon</type>
      <name>addReactionFigure</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>ad3ddfd5bbf52399c0be4844c2ef8dd86</anchor>
      <arglist>(KNode node, ReactionInstance reaction)</arglist>
    </member>
    <member kind="function">
      <type>ReactorFigureComponents</type>
      <name>addReactorFigure</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>a763ff08c5d036c0b465a242f426253ad</anchor>
      <arglist>(KNode node, ReactorInstance reactorInstance, String text)</arglist>
    </member>
    <member kind="function">
      <type>KEllipse</type>
      <name>addResetFigure</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>ad7f7ed1f2109830b16477368757b7b8f</anchor>
      <arglist>(KNode node)</arglist>
    </member>
    <member kind="function">
      <type>KPolygon</type>
      <name>addShutdownFigure</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>aa575f80d67320299a41090fd44c857d1</anchor>
      <arglist>(KNode node)</arglist>
    </member>
    <member kind="function">
      <type>KEllipse</type>
      <name>addStartupFigure</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>adfe6453339f346604a253fad4c9d1ed6</anchor>
      <arglist>(KNode node)</arglist>
    </member>
    <member kind="function">
      <type>KContainerRendering</type>
      <name>addStateEntry</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>abfee206e46c59fffd53daa94b2a6b8d5</anchor>
      <arglist>(KContainerRendering parent, StateVar associate, String text, boolean reset)</arglist>
    </member>
    <member kind="function">
      <type>KRectangle</type>
      <name>addStopwatchFigure</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>aa704ac56896b1f4698fac102ca95811b</anchor>
      <arglist>(KContainerRendering parent)</arglist>
    </member>
    <member kind="function">
      <type>KText</type>
      <name>addTextButton</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>a76aa2ba4012be90aa4f7438a35044e25</anchor>
      <arglist>(KContainerRendering container, String text)</arglist>
    </member>
    <member kind="function">
      <type>KEllipse</type>
      <name>addTimerFigure</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>a5df5097216fe5391bc1ec60d4bdd0a07</anchor>
      <arglist>(KNode node, TimerInstance timer)</arglist>
    </member>
    <member kind="function">
      <type>KPolygon</type>
      <name>addTrianglePort</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>a5d9d5439819231a1db21e90020907a8d</anchor>
      <arglist>(KPort port, boolean multiport, boolean reverse)</arglist>
    </member>
    <member kind="function">
      <type>Pair&lt; KPort, KPort &gt;</type>
      <name>addWatchdogFigureAndPorts</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>a927195e0fd7d7922ef1ad4c5365bfece</anchor>
      <arglist>(KNode node)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>getBooleanValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>a5661b8e2f017ad87ecf1a4fa87295fcf</anchor>
      <arglist>(SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getFloatValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>ac9ab360bdc1ea27220ac2fc354ed258d</anchor>
      <arglist>(SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>Object</type>
      <name>getObjectValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>ab2f969539122fa5e31062950d251a9d5</anchor>
      <arglist>(final SynthesisOption option)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final float</type>
      <name>BANK_FIGURE_X_OFFSET_SUM</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>a9a6667b1e746f9d445a531d540a11978</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final float</type>
      <name>BANK_FIGURE_Y_OFFSET_SUM</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>ab467ad4ebc5712bc0bcab9672229c857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Colors</type>
      <name>CODE_COLOR</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>adcee3dc326f697516160c848c3732a5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Colors</type>
      <name>DEADLINE_COLOR</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>a7b61289db33196d2f0103d44e0d774cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Colors</type>
      <name>ENCLAVE_BORDER_COLOR</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>ad0d904ecc6700405f36b9067edabdb6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final float</type>
      <name>REACTION_POINTINESS</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>a24eff681a0ae4203912bbd6ff55da054</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Property&lt; Boolean &gt;</type>
      <name>REACTOR_CONTENT_CONTAINER</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaShapeExtensions.html</anchorfile>
      <anchor>a14faafcaaa1a8c5b4499cdfa1e254f4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T extends EObject &gt; T</type>
      <name>associateWith</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>a5ad42c0b0087e4e49fd41619417235d4</anchor>
      <arglist>(T derived, Object source)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T extends AbstractDiagramSynthesis&lt;?&gt; &gt; T</type>
      <name>getRootSynthesis</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>abdef98c1a65d2fdb5511a1a6c680cb3b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::styles::LinguaFrancaStyleExtensions</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaStyleExtensions.html</filename>
    <base>org.lflang.diagram.synthesis.AbstractSynthesisExtensions</base>
    <member kind="function">
      <type>void</type>
      <name>addArrayDecorator</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaStyleExtensions.html</anchorfile>
      <anchor>a5b39f3d3dc6a5e2a8bbcc20b4ffdca29</anchor>
      <arglist>(KEdge edge, Integer size)</arglist>
    </member>
    <member kind="function">
      <type>KContainerRendering</type>
      <name>addCloudIcon</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaStyleExtensions.html</anchorfile>
      <anchor>a1a378860676d6ce83754657b2a23cce5</anchor>
      <arglist>(final KContainerRendering parent)</arglist>
    </member>
    <member kind="function">
      <type>KRendering</type>
      <name>addCloudUploadIcon</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaStyleExtensions.html</anchorfile>
      <anchor>a09c6106ae11c6207042c93de9586cca8</anchor>
      <arglist>(KContainerRendering parent)</arglist>
    </member>
    <member kind="function">
      <type>KRendering</type>
      <name>addFixedTailArrowDecorator</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaStyleExtensions.html</anchorfile>
      <anchor>a9d4a192f45227ff154dd8f9c16b63510</anchor>
      <arglist>(KPolyline pl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyOnEdgeDelayStyle</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaStyleExtensions.html</anchorfile>
      <anchor>a2675445261edf13b6728fcaac1bc37b6</anchor>
      <arglist>(KLabel label)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyOnEdgePysicalDelayStyle</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaStyleExtensions.html</anchorfile>
      <anchor>abba4436b9b796e28b9a65d901afea4e7</anchor>
      <arglist>(KLabel label, Colors parentBackgroundColor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyOnEdgePysicalStyle</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaStyleExtensions.html</anchorfile>
      <anchor>aa99430a744bc5f4192ab7cb6455ac3b8</anchor>
      <arglist>(KLabel label, Colors parentBackgroundColor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyOnEdgeStyle</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaStyleExtensions.html</anchorfile>
      <anchor>a9ae0b8dcf1818f4dda829f64fe447932</anchor>
      <arglist>(KLabel label)</arglist>
    </member>
    <member kind="function">
      <type>KRendering</type>
      <name>boldLineSelectionStyle</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaStyleExtensions.html</anchorfile>
      <anchor>a856043a58b316cdb3d4626e7c3dbc859</anchor>
      <arglist>(KRendering r)</arglist>
    </member>
    <member kind="function">
      <type>KText</type>
      <name>boldTextSelectionStyle</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaStyleExtensions.html</anchorfile>
      <anchor>a3546fddade78beea3d81f22b21b0151b</anchor>
      <arglist>(KText t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>commentStyle</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaStyleExtensions.html</anchorfile>
      <anchor>a6f661d42abbc34b4fd1e3dbacac0dae3</anchor>
      <arglist>(KRendering r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>errorStyle</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaStyleExtensions.html</anchorfile>
      <anchor>a411ab32e4825be959b29f1c9a5dfdba9</anchor>
      <arglist>(KRendering r)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>getBooleanValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>a5661b8e2f017ad87ecf1a4fa87295fcf</anchor>
      <arglist>(SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getFloatValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>ac9ab360bdc1ea27220ac2fc354ed258d</anchor>
      <arglist>(SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>Object</type>
      <name>getObjectValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>ab2f969539122fa5e31062950d251a9d5</anchor>
      <arglist>(final SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>KRendering</type>
      <name>noSelectionStyle</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaStyleExtensions.html</anchorfile>
      <anchor>a80dd5641c3183126757d5c9026d81444</anchor>
      <arglist>(KRendering r)</arglist>
    </member>
    <member kind="function">
      <type>KRendering</type>
      <name>underlineSelectionStyle</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaStyleExtensions.html</anchorfile>
      <anchor>aea68c5425518179166daf37bcd67ce06</anchor>
      <arglist>(KRendering r)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Property&lt; Colors &gt;</type>
      <name>LABEL_PARENT_BACKGROUND</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaStyleExtensions.html</anchorfile>
      <anchor>a93908da08da7719f15954e0a53d65551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>SELECTION_HIGHLIGHTING_COLOR</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaStyleExtensions.html</anchorfile>
      <anchor>ac16c527c1cb7a4317ca27b0270bc3230</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>SELECTION_HIGHLIGHTING_COLOR_LABEL</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1LinguaFrancaStyleExtensions.html</anchorfile>
      <anchor>ab813a38cf8f841ac7d07a9a822db43cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T extends EObject &gt; T</type>
      <name>associateWith</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>a5ad42c0b0087e4e49fd41619417235d4</anchor>
      <arglist>(T derived, Object source)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T extends AbstractDiagramSynthesis&lt;?&gt; &gt; T</type>
      <name>getRootSynthesis</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>abdef98c1a65d2fdb5511a1a6c680cb3b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::styles::ReactorFigureComponents</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1ReactorFigureComponents.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1ReactorFigureComponents.html</anchorfile>
      <anchor>a55262de146c1afc75f114f2eaf860366</anchor>
      <arglist>(final Object obj)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; KRendering &gt;</type>
      <name>getFigures</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1ReactorFigureComponents.html</anchorfile>
      <anchor>a7bc80502897c0b940c4dc33c73ffa51a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KContainerRendering</type>
      <name>getOuter</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1ReactorFigureComponents.html</anchorfile>
      <anchor>a35f4d26ce96e3be8cfa0adf2a797f901</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KContainerRendering</type>
      <name>getReactor</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1ReactorFigureComponents.html</anchorfile>
      <anchor>a76e4e6bf653875766883402ee9584b3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1ReactorFigureComponents.html</anchorfile>
      <anchor>ab291f5f9b18bbcbf3171da48c9d49e89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReactorFigureComponents</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1ReactorFigureComponents.html</anchorfile>
      <anchor>abc7ac5bd2e8f1eaec027e93c0a6b9b6b</anchor>
      <arglist>(KContainerRendering outer, KContainerRendering reactor, List&lt; KRendering &gt; figures)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles_1_1ReactorFigureComponents.html</anchorfile>
      <anchor>a87f2fe6ff094b75a983efc78f8b28010</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::SynthesisRegistration</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1SynthesisRegistration.html</filename>
    <member kind="function">
      <type>void</type>
      <name>execute</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1SynthesisRegistration.html</anchorfile>
      <anchor>a8695a219160bd0b33d9a8a30f6cd5d80</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::util::CycleVisualization</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1CycleVisualization.html</filename>
    <base>org.lflang.diagram.synthesis.AbstractSynthesisExtensions</base>
    <member kind="function">
      <type>boolean</type>
      <name>detectAndHighlightCycles</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1CycleVisualization.html</anchorfile>
      <anchor>adc0c698f8ebb607217bd7e312b9156e8</anchor>
      <arglist>(ReactorInstance rootReactorInstance, Map&lt; ReactorInstance, KNode &gt; allReactorNodes, Consumer&lt; KGraphElement &gt; highlighter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>getBooleanValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>a5661b8e2f017ad87ecf1a4fa87295fcf</anchor>
      <arglist>(SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getFloatValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>ac9ab360bdc1ea27220ac2fc354ed258d</anchor>
      <arglist>(SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>Object</type>
      <name>getObjectValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>ab2f969539122fa5e31062950d251a9d5</anchor>
      <arglist>(final SynthesisOption option)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Property&lt; Boolean &gt;</type>
      <name>DEPENDENCY_CYCLE</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1CycleVisualization.html</anchorfile>
      <anchor>a43765f18bd373a966863cd5de62a4364</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T extends EObject &gt; T</type>
      <name>associateWith</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>a5ad42c0b0087e4e49fd41619417235d4</anchor>
      <arglist>(T derived, Object source)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T extends AbstractDiagramSynthesis&lt;?&gt; &gt; T</type>
      <name>getRootSynthesis</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>abdef98c1a65d2fdb5511a1a6c680cb3b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::util::InterfaceDependenciesVisualization</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1InterfaceDependenciesVisualization.html</filename>
    <base>org.lflang.diagram.synthesis.AbstractSynthesisExtensions</base>
    <member kind="function">
      <type>Spacing</type>
      <name>addInterfaceDependencies</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1InterfaceDependenciesVisualization.html</anchorfile>
      <anchor>a469c6fb8e6a27b861e84df95c6adef4b</anchor>
      <arglist>(KNode node, boolean expanded)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>getBooleanValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>a5661b8e2f017ad87ecf1a4fa87295fcf</anchor>
      <arglist>(SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getFloatValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>ac9ab360bdc1ea27220ac2fc354ed258d</anchor>
      <arglist>(SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>Object</type>
      <name>getObjectValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>ab2f969539122fa5e31062950d251a9d5</anchor>
      <arglist>(final SynthesisOption option)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>updateInterfaceDependencyVisibility</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1InterfaceDependenciesVisualization.html</anchorfile>
      <anchor>a0324c72f1ae6ff24535883a94d76f7de</anchor>
      <arglist>(KNode node, boolean expanded)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Property&lt; Boolean &gt;</type>
      <name>INTERFACE_DEPENDENCY</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1InterfaceDependenciesVisualization.html</anchorfile>
      <anchor>aeb847f49c79e61b0696495504c990c45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>SHOW_INTERFACE_DEPENDENCIES</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1InterfaceDependenciesVisualization.html</anchorfile>
      <anchor>a627cb9fc48bff92e83d873e86d9b0f36</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T extends EObject &gt; T</type>
      <name>associateWith</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>a5ad42c0b0087e4e49fd41619417235d4</anchor>
      <arglist>(T derived, Object source)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T extends AbstractDiagramSynthesis&lt;?&gt; &gt; T</type>
      <name>getRootSynthesis</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>abdef98c1a65d2fdb5511a1a6c680cb3b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::util::LayoutPostProcessing</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1LayoutPostProcessing.html</filename>
    <base>org.lflang.diagram.synthesis.AbstractSynthesisExtensions</base>
    <member kind="function">
      <type>void</type>
      <name>configureAction</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1LayoutPostProcessing.html</anchorfile>
      <anchor>a7d26ea447b1331052af9bfdc94cfec46</anchor>
      <arglist>(KNode node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configureDummy</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1LayoutPostProcessing.html</anchorfile>
      <anchor>a3940d74938d080aafb55f219862e92c0</anchor>
      <arglist>(KNode node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configureMainReactor</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1LayoutPostProcessing.html</anchorfile>
      <anchor>a454f4fb8625b06b9d6d8b4c26e531e69</anchor>
      <arglist>(KNode node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configureReaction</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1LayoutPostProcessing.html</anchorfile>
      <anchor>a84659bb55a67806ccb9c7ea80105ca2f</anchor>
      <arglist>(KNode node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configureReactor</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1LayoutPostProcessing.html</anchorfile>
      <anchor>a9bab2fd8af7cf0c58aaa2d10f968b969</anchor>
      <arglist>(KNode node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configureShutDown</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1LayoutPostProcessing.html</anchorfile>
      <anchor>a6d1d7995388dca382a21c946ab2a96f1</anchor>
      <arglist>(KNode node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configureStartUp</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1LayoutPostProcessing.html</anchorfile>
      <anchor>a4e303b9ffcc2386a6c83e48cff9d999f</anchor>
      <arglist>(KNode node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configureTimer</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1LayoutPostProcessing.html</anchorfile>
      <anchor>ac03a47533441fee150e4e2c39fdcc0c8</anchor>
      <arglist>(KNode node)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>getBooleanValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>a5661b8e2f017ad87ecf1a4fa87295fcf</anchor>
      <arglist>(SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getFloatValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>ac9ab360bdc1ea27220ac2fc354ed258d</anchor>
      <arglist>(SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>Object</type>
      <name>getObjectValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>ab2f969539122fa5e31062950d251a9d5</anchor>
      <arglist>(final SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>orderChildren</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1LayoutPostProcessing.html</anchorfile>
      <anchor>aeb5608e8de1aeee07d817b250bc489b6</anchor>
      <arglist>(List&lt; KNode &gt; nodes)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>FULL_CONTROL</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1LayoutPostProcessing.html</anchorfile>
      <anchor>a2a28a7d82a8281af2f796ab83f3d0a53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>LEGACY</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1LayoutPostProcessing.html</anchorfile>
      <anchor>aa52252dc8de88f1dde7f811eced24455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>MODEL_ORDER</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1LayoutPostProcessing.html</anchorfile>
      <anchor>a32283dd44fd2f0c7be869698442b3a37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>MODEL_ORDER_OPTION</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1LayoutPostProcessing.html</anchorfile>
      <anchor>a50868fa640e8d11ad827a24c687732a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>STRICT</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1LayoutPostProcessing.html</anchorfile>
      <anchor>ac8652eef8a6b59fb14d21e49ad108945</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>STRICT_REACTION_ONLY</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1LayoutPostProcessing.html</anchorfile>
      <anchor>a4a7a9dc8f0053e07379981b16ba5518c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Comparator&lt; KNode &gt;</type>
      <name>TEXTUAL_ORDER</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1LayoutPostProcessing.html</anchorfile>
      <anchor>a5b23723ce8ade6e35907ed2909a135de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>TIE_BREAKER</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1LayoutPostProcessing.html</anchorfile>
      <anchor>af930ef6e4c225ab3ea0844306afe9d91</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T extends EObject &gt; T</type>
      <name>associateWith</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>a5ad42c0b0087e4e49fd41619417235d4</anchor>
      <arglist>(T derived, Object source)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T extends AbstractDiagramSynthesis&lt;?&gt; &gt; T</type>
      <name>getRootSynthesis</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>abdef98c1a65d2fdb5511a1a6c680cb3b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::util::ModeDiagrams</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1ModeDiagrams.html</filename>
    <base>org.lflang.diagram.synthesis.AbstractSynthesisExtensions</base>
    <member kind="function">
      <type>boolean</type>
      <name>getBooleanValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>a5661b8e2f017ad87ecf1a4fa87295fcf</anchor>
      <arglist>(SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getFloatValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>ac9ab360bdc1ea27220ac2fc354ed258d</anchor>
      <arglist>(SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>Object</type>
      <name>getObjectValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>ab2f969539122fa5e31062950d251a9d5</anchor>
      <arglist>(final SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleModes</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1ModeDiagrams.html</anchorfile>
      <anchor>a15d24f5d6dfa326b27799dd7ed94b1f1</anchor>
      <arglist>(List&lt; KNode &gt; nodes, ReactorInstance reactor)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>INITIALLY_COLLAPSE_MODES</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1ModeDiagrams.html</anchorfile>
      <anchor>ae1e006294dbb19518c57562847dffedf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>MODES_CATEGORY</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1ModeDiagrams.html</anchorfile>
      <anchor>aa0c1536cc11ea655dc99c1b7c86c65b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SynthesisOption</type>
      <name>SHOW_TRANSITION_LABELS</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1ModeDiagrams.html</anchorfile>
      <anchor>a4898aa4df9c01f5aea903ef3157ea358</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T extends EObject &gt; T</type>
      <name>associateWith</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>a5ad42c0b0087e4e49fd41619417235d4</anchor>
      <arglist>(T derived, Object source)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T extends AbstractDiagramSynthesis&lt;?&gt; &gt; T</type>
      <name>getRootSynthesis</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>abdef98c1a65d2fdb5511a1a6c680cb3b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::util::NamedInstanceUtil</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1NamedInstanceUtil.html</filename>
    <member kind="function" static="yes">
      <type>static NamedInstance&lt;?&gt;</type>
      <name>getLinkedInstance</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1NamedInstanceUtil.html</anchorfile>
      <anchor>a581ee0252cd9594b58eeb53a695f54f2</anchor>
      <arglist>(KGraphElement elem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IPropertyHolder</type>
      <name>linkInstance</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1NamedInstanceUtil.html</anchorfile>
      <anchor>a4e70be46036db305754dd28fda7c2614</anchor>
      <arglist>(KGraphElement elem, NamedInstance&lt;?&gt; instance)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Property&lt; NamedInstance&lt;?&gt; &gt;</type>
      <name>LINKED_INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1NamedInstanceUtil.html</anchorfile>
      <anchor>adda502c3bc6351b7221619d9ad27effd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::util::ReactorIcons</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1ReactorIcons.html</filename>
    <base>org.lflang.diagram.synthesis.AbstractSynthesisExtensions</base>
    <member kind="function">
      <type>boolean</type>
      <name>getBooleanValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>a5661b8e2f017ad87ecf1a4fa87295fcf</anchor>
      <arglist>(SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getFloatValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>ac9ab360bdc1ea27220ac2fc354ed258d</anchor>
      <arglist>(SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>Object</type>
      <name>getObjectValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>ab2f969539122fa5e31062950d251a9d5</anchor>
      <arglist>(final SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleIcon</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1ReactorIcons.html</anchorfile>
      <anchor>afb6a97fd4c05966e81c3cbe4620af936</anchor>
      <arglist>(KContainerRendering rendering, ReactorDecl reactor, boolean collapsed)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T extends EObject &gt; T</type>
      <name>associateWith</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>a5ad42c0b0087e4e49fd41619417235d4</anchor>
      <arglist>(T derived, Object source)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T extends AbstractDiagramSynthesis&lt;?&gt; &gt; T</type>
      <name>getRootSynthesis</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>abdef98c1a65d2fdb5511a1a6c680cb3b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::util::SynthesisMessageReporter</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1SynthesisMessageReporter.html</filename>
    <base>org.lflang.MessageReporterBase</base>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a3d5b75f44f1985a4e1024a8b43d61fec</anchor>
      <arglist>(Path file)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>aec08239e4e187b9fab9447f4d29b0479</anchor>
      <arglist>(Path file, int line)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a22bc622a160433fe40df98e229626760</anchor>
      <arglist>(Path file, Position pos)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a00cdd7120113ce25c9830e183e14c66f</anchor>
      <arglist>(EObject node)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a77356f4ec9535154ed819b9b32a1ceee</anchor>
      <arglist>(EObject node, EStructuralFeature feature)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>aee12d3be7c0c2f5e32079dfddd54c7da</anchor>
      <arglist>(Path file, Range range)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>atNullableLine</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a398b2acbf471940ad542db86c34bd7dd</anchor>
      <arglist>(Path file, Integer line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearHistory</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a40dba989b4d7ea727cf7b4a6bea7431f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>getErrorsOccurred</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a7f189b3c1a3d8f9e1661756cc1d59f3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>nowhere</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a6d8e986624a920121b5c6a165f3073a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>report</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1SynthesisMessageReporter.html</anchorfile>
      <anchor>a687182caaa3c50dddd8554ee9b89c93b</anchor>
      <arglist>(Path path, Range range, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reportOnNode</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1SynthesisMessageReporter.html</anchorfile>
      <anchor>aac297c1ea1c0a2317ef137f6e233b406</anchor>
      <arglist>(EObject node, EStructuralFeature feature, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reportOnNode</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a084f678d4f71661620ed91058e4694c1</anchor>
      <arglist>(EObject node, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reportWithoutPosition</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1SynthesisMessageReporter.html</anchorfile>
      <anchor>a61bbc67f46eaceed3d0bf8b5fbf75cf8</anchor>
      <arglist>(DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Stage2</type>
      <name>wrap</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a365b78fc2a5d81158e450ea7aea5821b</anchor>
      <arglist>(Stage2 e)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::diagram::synthesis::util::UtilityExtensions</name>
    <filename>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1UtilityExtensions.html</filename>
    <base>org.lflang.diagram.synthesis.AbstractSynthesisExtensions</base>
    <member kind="function">
      <type>boolean</type>
      <name>getBooleanValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>a5661b8e2f017ad87ecf1a4fa87295fcf</anchor>
      <arglist>(SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getFloatValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>ac9ab360bdc1ea27220ac2fc354ed258d</anchor>
      <arglist>(SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>Object</type>
      <name>getObjectValue</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>ab2f969539122fa5e31062950d251a9d5</anchor>
      <arglist>(final SynthesisOption option)</arglist>
    </member>
    <member kind="function">
      <type>ElkMargin</type>
      <name>getPortMarginsInitIfAbsent</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1UtilityExtensions.html</anchorfile>
      <anchor>aaae65ae00581f3d3a0828bba725f8d5f</anchor>
      <arglist>(KNode node)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasContent</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1UtilityExtensions.html</anchorfile>
      <anchor>a6693b335b9ecf10be366dcdfa1a304e1</anchor>
      <arglist>(final ReactorInstance reactor)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isMainOrFederated</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1UtilityExtensions.html</anchorfile>
      <anchor>a9b12287d46c086fc694926afa5812e22</anchor>
      <arglist>(Reactor reactor)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isRoot</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1UtilityExtensions.html</anchorfile>
      <anchor>a8ab49cefa9499724f8609830d0f3753e</anchor>
      <arglist>(final ReactorInstance ri)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>setID</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1UtilityExtensions.html</anchorfile>
      <anchor>a45afab2ee1ad9bbad20e1371b9d8e3bf</anchor>
      <arglist>(KGraphElement kge, String id)</arglist>
    </member>
    <member kind="function">
      <type>Object</type>
      <name>sourceElement</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1UtilityExtensions.html</anchorfile>
      <anchor>a60542e4c3565fa02bd1c005144d1393a</anchor>
      <arglist>(KGraphElement elem)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>sourceIsReactor</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1UtilityExtensions.html</anchorfile>
      <anchor>a8d813598d77a031bafedbb5b5324b48a</anchor>
      <arglist>(KNode node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>trimCode</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1util_1_1UtilityExtensions.html</anchorfile>
      <anchor>a639156f29f07248febbb57d96bbbf71d</anchor>
      <arglist>(final Code tokenizedCode)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T extends EObject &gt; T</type>
      <name>associateWith</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>a5ad42c0b0087e4e49fd41619417235d4</anchor>
      <arglist>(T derived, Object source)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T extends AbstractDiagramSynthesis&lt;?&gt; &gt; T</type>
      <name>getRootSynthesis</name>
      <anchorfile>classorg_1_1lflang_1_1diagram_1_1synthesis_1_1AbstractSynthesisExtensions.html</anchorfile>
      <anchor>abdef98c1a65d2fdb5511a1a6c680cb3b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::extensions::CExtension</name>
    <filename>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</filename>
    <base>org.lflang.federated.extensions.FedTargetExtension</base>
    <member kind="function">
      <type>void</type>
      <name>addSenderIndexParameter</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>a2eed694b91480e7bd8ed78962da923f2</anchor>
      <arglist>(Reactor sender)</arglist>
    </member>
    <member kind="function">
      <type>default void</type>
      <name>annotateReaction</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1extensions_1_1FedTargetExtension.html</anchorfile>
      <anchor>aa39a747282d1b8e3e80ebc48039f9711</anchor>
      <arglist>(Reaction reaction)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateNetworkReceiverBody</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>a0c9be1e8d1254243b608ecb72c70b403</anchor>
      <arglist>(Action action, VarRef sendingPort, VarRef receivingPort, FedConnectionInstance connection, InferredType type, CoordinationMode coordinationMode, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateNetworkSenderBody</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>ab4dcde870b015a2f0b247be98494342d</anchor>
      <arglist>(VarRef sendingPort, VarRef receivingPort, FedConnectionInstance connection, InferredType type, CoordinationMode coordinationMode, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generatePortAbsentReactionBody</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>afeb3f291c25d8891ecc6bbe1ee4cde73</anchor>
      <arglist>(VarRef srcOutputPort, FedConnectionInstance connection)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generatePreamble</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>a4e6e932b53426fb4e7e16e6c455622c0</anchor>
      <arglist>(FederateInstance federate, FederationFileConfig fileConfig, RtiConfig rtiConfig, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getNetworkBufferType</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>ab5d0d904ac9aee4356de254643f46268</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeTargetConfig</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>a24b55065de83025e310d0f8dbb1fee45</anchor>
      <arglist>(LFGeneratorContext context, List&lt; String &gt; federateNames, FederateInstance federate, FederationFileConfig fileConfig, MessageReporter messageReporter, RtiConfig rtiConfig)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>outputInitializationBody</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>a7ed73d694cd735fffd2b558758c28138</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>supplySenderIndexParameter</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>a89d64b10567428d49f62326b87b6d70e</anchor>
      <arglist>(Instantiation inst, int idx)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>a902296fe888160b854216400e557311e</anchor>
      <arglist>(Action action, VarRef receivingPort, FedConnectionInstance connection, InferredType type, String receiveRef, CodeBuilder result, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateCMakeInclude</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>a1cfd38e74ebb46d9bbe3c35b57e5f833</anchor>
      <arglist>(FederateInstance federate, FederationFileConfig fileConfig)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateSerializationIncludes</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>a4b097631ccdf1b01d7d47c29d5717ef7</anchor>
      <arglist>(FederateInstance federate, FederationFileConfig fileConfig)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>serializeAndSend</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>a9517036129bfdc11bab975ff4a6e0fdb</anchor>
      <arglist>(FedConnectionInstance connection, InferredType type, String sendRef, CodeBuilder result, String sendingFunction, String commonArgs, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final void</type>
      <name>writePreambleFile</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>aad2a1e995287f289925c13da725bd095</anchor>
      <arglist>(FederateInstance federate, FederationFileConfig fileConfig, RtiConfig rtiConfig, MessageReporter messageReporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::extensions::CExtensionUtils</name>
    <filename>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addClockSyncCompileDefinitions</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>a74469d7e03300fc4054cc2ff2cf243ac</anchor>
      <arglist>(FederateInstance federate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addDisableClockSyncCompileDefinitions</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>a60b25ebf779c0cb59b3b236dd655b57b</anchor>
      <arglist>(FederateInstance federate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>createPortStatusFieldForInput</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>aed71e1cb4b66a07e82fc53276db64ed7</anchor>
      <arglist>(Input input)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generateCMakeInclude</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>a825c8a50b32229db7d85d9b8ac7448e1</anchor>
      <arglist>(FederateInstance federate, FederationFileConfig fileConfig)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateFederateNeighborStructure</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>a6027d47bf35688b09564647949a9a235</anchor>
      <arglist>(FederateInstance federate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateSerializationCMakeExtension</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>ad9ee30c589c3a19f389d30c51ec52527</anchor>
      <arglist>(FederateInstance federate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateSerializationIncludes</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>a6003420946de0c2d89f902f8d348c588</anchor>
      <arglist>(FederateInstance federate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>getNetworkDelayLiteral</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>a956b889aaf9836bbc374e3e9839ad488</anchor>
      <arglist>(Expression delay)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>handleCompileDefinitions</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>a00455f92fd84fe4d9bba63429dab326b</anchor>
      <arglist>(FederateInstance federate, List&lt; String &gt; federateNames, RtiConfig rtiConfig, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initializeClockSynchronization</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>a57e034c00406c0d4913678c2c048cd1a</anchor>
      <arglist>(FederateInstance federate, RtiConfig rtiConfig, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>initializeTriggersForNetworkActions</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>ab0b32c561eaa096b56a5c368834a5392</anchor>
      <arglist>(FederateInstance federate, ReactorInstance main)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stpStructs</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>abc45d5ecf4bcdbd8b14863eabc4106d0</anchor>
      <arglist>(FederateInstance federate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>surroundWithIfElseFederated</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>ae74be60ccc0f087cd3e52acca39d599f</anchor>
      <arglist>(String insideIf, String insideElse)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>surroundWithIfElseFederatedCentralized</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>a4b8a9553ce23c4c48d3399e1f6cf8b8d</anchor>
      <arglist>(String insideIf, String insideElse)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>surroundWithIfFederated</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>a5cc0131fc7be6fc9dc939f68ecb6a44f</anchor>
      <arglist>(String code)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>surroundWithIfFederatedCentralized</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>a87d6a0543bd86f91abeb65f721dac3bb</anchor>
      <arglist>(String code)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>surroundWithIfFederatedDecentralized</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>a02d414ac4125349f0d34a4c207edd953</anchor>
      <arglist>(String code)</arglist>
    </member>
    <member kind="function" protection="package" static="yes">
      <type>static boolean</type>
      <name>clockSyncIsOn</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>a46fdbe5a87d17a77658e0b2a3275ffad</anchor>
      <arglist>(FederateInstance federate, RtiConfig rtiConfig)</arglist>
    </member>
    <member kind="function" protection="package" static="yes">
      <type>static boolean</type>
      <name>isSharedPtrType</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>a6c40ea4b3b44e538a11530bfc778d26c</anchor>
      <arglist>(InferredType type, CTypes types)</arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static final Pattern</type>
      <name>sharedPointerVariable</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtensionUtils.html</anchorfile>
      <anchor>adc489d4e31dcbaadcbee01b95e82a94f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::federated::extensions::FedTargetExtension</name>
    <filename>interfaceorg_1_1lflang_1_1federated_1_1extensions_1_1FedTargetExtension.html</filename>
    <member kind="function">
      <type>void</type>
      <name>addSenderIndexParameter</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1extensions_1_1FedTargetExtension.html</anchorfile>
      <anchor>a2b0189630ebfa41cd8cecdd750c57c3c</anchor>
      <arglist>(Reactor sender)</arglist>
    </member>
    <member kind="function">
      <type>default void</type>
      <name>annotateReaction</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1extensions_1_1FedTargetExtension.html</anchorfile>
      <anchor>aa39a747282d1b8e3e80ebc48039f9711</anchor>
      <arglist>(Reaction reaction)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateNetworkReceiverBody</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1extensions_1_1FedTargetExtension.html</anchorfile>
      <anchor>a21717e68c234d697d6a1f1600cb8498f</anchor>
      <arglist>(Action action, VarRef sendingPort, VarRef receivingPort, FedConnectionInstance connection, InferredType type, CoordinationMode coordinationMode, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateNetworkSenderBody</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1extensions_1_1FedTargetExtension.html</anchorfile>
      <anchor>aba1e39393dddeaf49b3ee89f39d0632c</anchor>
      <arglist>(VarRef sendingPort, VarRef receivingPort, FedConnectionInstance connection, InferredType type, CoordinationMode coordinationMode, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generatePortAbsentReactionBody</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1extensions_1_1FedTargetExtension.html</anchorfile>
      <anchor>aa9faae24b5a147c058ee31075763d9df</anchor>
      <arglist>(VarRef srcOutputPort, FedConnectionInstance connection)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generatePreamble</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1extensions_1_1FedTargetExtension.html</anchorfile>
      <anchor>a9ab525ad95ab8bdb4ee69c70048df120</anchor>
      <arglist>(FederateInstance federate, FederationFileConfig fileConfig, RtiConfig rtiConfig, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getNetworkBufferType</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1extensions_1_1FedTargetExtension.html</anchorfile>
      <anchor>aeea539b862b9138f83cea0efa41f4c70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeTargetConfig</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1extensions_1_1FedTargetExtension.html</anchorfile>
      <anchor>a7c352cb0a21b906d5acccc9eff264ac7</anchor>
      <arglist>(LFGeneratorContext context, List&lt; String &gt; federateNames, FederateInstance federate, FederationFileConfig fileConfig, MessageReporter messageReporter, RtiConfig rtiConfig)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>outputInitializationBody</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1extensions_1_1FedTargetExtension.html</anchorfile>
      <anchor>ae28a0e10f35dbf074a5c9e70f66073f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>supplySenderIndexParameter</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1extensions_1_1FedTargetExtension.html</anchorfile>
      <anchor>a4d58fdc60b08933210faa1c798fad274</anchor>
      <arglist>(Instantiation inst, int idx)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::extensions::FedTargetExtensionFactory</name>
    <filename>classorg_1_1lflang_1_1federated_1_1extensions_1_1FedTargetExtensionFactory.html</filename>
    <member kind="function" static="yes">
      <type>static FedTargetExtension</type>
      <name>getExtension</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1FedTargetExtensionFactory.html</anchorfile>
      <anchor>afadc7abdb5a2e2dcc24adfd3a41d4a30</anchor>
      <arglist>(Target target)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::extensions::PythonExtension</name>
    <filename>classorg_1_1lflang_1_1federated_1_1extensions_1_1PythonExtension.html</filename>
    <base>org.lflang.federated.extensions.CExtension</base>
    <member kind="function">
      <type>void</type>
      <name>addSenderIndexParameter</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>a2eed694b91480e7bd8ed78962da923f2</anchor>
      <arglist>(Reactor sender)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>annotateReaction</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1PythonExtension.html</anchorfile>
      <anchor>aad9f2db994798140c7dfcac33f54ec54</anchor>
      <arglist>(Reaction reaction)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateNetworkReceiverBody</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1PythonExtension.html</anchorfile>
      <anchor>a14c2e3726ad7821cf309f2206dfea961</anchor>
      <arglist>(Action action, VarRef sendingPort, VarRef receivingPort, FedConnectionInstance connection, InferredType type, CoordinationMode coordinationMode, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateNetworkSenderBody</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1PythonExtension.html</anchorfile>
      <anchor>ae58e4867bb6daf989141ce8dae655fe3</anchor>
      <arglist>(VarRef sendingPort, VarRef receivingPort, FedConnectionInstance connection, InferredType type, CoordinationMode coordinationMode, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generatePortAbsentReactionBody</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>afeb3f291c25d8891ecc6bbe1ee4cde73</anchor>
      <arglist>(VarRef srcOutputPort, FedConnectionInstance connection)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generatePreamble</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1PythonExtension.html</anchorfile>
      <anchor>ad0f0c29fed196b31b2fe55ee1c8d7ba7</anchor>
      <arglist>(FederateInstance federate, FederationFileConfig fileConfig, RtiConfig rtiConfig, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getNetworkBufferType</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1PythonExtension.html</anchorfile>
      <anchor>a8c1241ca562a1a703ae2f13ba1a30e02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeTargetConfig</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>a24b55065de83025e310d0f8dbb1fee45</anchor>
      <arglist>(LFGeneratorContext context, List&lt; String &gt; federateNames, FederateInstance federate, FederationFileConfig fileConfig, MessageReporter messageReporter, RtiConfig rtiConfig)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>outputInitializationBody</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>a7ed73d694cd735fffd2b558758c28138</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>supplySenderIndexParameter</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>a89d64b10567428d49f62326b87b6d70e</anchor>
      <arglist>(Instantiation inst, int idx)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deserialize</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1PythonExtension.html</anchorfile>
      <anchor>ab579abd9d0f09c4f06e2888e3f7fd8d9</anchor>
      <arglist>(Action action, VarRef receivingPort, FedConnectionInstance connection, InferredType type, String receiveRef, CodeBuilder result, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateCMakeInclude</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1PythonExtension.html</anchorfile>
      <anchor>a3c2617a2861cc690225a3e7c270dd280</anchor>
      <arglist>(FederateInstance federate, FederationFileConfig fileConfig)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateSerializationIncludes</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1PythonExtension.html</anchorfile>
      <anchor>adfdc19eb99c3a7da2ebd6321110b6b13</anchor>
      <arglist>(FederateInstance federate, FederationFileConfig fileConfig)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>serializeAndSend</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1PythonExtension.html</anchorfile>
      <anchor>a4875794e4cdede18be3b9aa1f1a23872</anchor>
      <arglist>(FedConnectionInstance connection, InferredType type, String sendRef, CodeBuilder result, String sendingFunction, String commonArgs, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final void</type>
      <name>writePreambleFile</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1CExtension.html</anchorfile>
      <anchor>aad2a1e995287f289925c13da725bd095</anchor>
      <arglist>(FederateInstance federate, FederationFileConfig fileConfig, RtiConfig rtiConfig, MessageReporter messageReporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::extensions::TSExtension</name>
    <filename>classorg_1_1lflang_1_1federated_1_1extensions_1_1TSExtension.html</filename>
    <base>org.lflang.federated.extensions.FedTargetExtension</base>
    <member kind="function">
      <type>void</type>
      <name>addSenderIndexParameter</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1TSExtension.html</anchorfile>
      <anchor>a57f7f350210880b84efe844eb3f94c27</anchor>
      <arglist>(Reactor sender)</arglist>
    </member>
    <member kind="function">
      <type>default void</type>
      <name>annotateReaction</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1extensions_1_1FedTargetExtension.html</anchorfile>
      <anchor>aa39a747282d1b8e3e80ebc48039f9711</anchor>
      <arglist>(Reaction reaction)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateNetworkReceiverBody</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1TSExtension.html</anchorfile>
      <anchor>a9acf3daf36bc1c73b24b5b972d62b567</anchor>
      <arglist>(Action action, VarRef sendingPort, VarRef receivingPort, FedConnectionInstance connection, InferredType type, CoordinationMode coordinationMode, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateNetworkSenderBody</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1TSExtension.html</anchorfile>
      <anchor>ada5625852f42cbe432d5f049b28074f1</anchor>
      <arglist>(VarRef sendingPort, VarRef receivingPort, FedConnectionInstance connection, InferredType type, CoordinationMode coordinationMode, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generatePortAbsentReactionBody</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1TSExtension.html</anchorfile>
      <anchor>a612a14fd2f4e843a8bcac236ab35d32d</anchor>
      <arglist>(VarRef srcOutputPort, FedConnectionInstance connection)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generatePreamble</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1TSExtension.html</anchorfile>
      <anchor>a760473614ce3142e63499c20968c547e</anchor>
      <arglist>(FederateInstance federate, FederationFileConfig fileConfig, RtiConfig rtiConfig, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getNetworkBufferType</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1TSExtension.html</anchorfile>
      <anchor>a391c2e03d70b9d281ef2e2f4b729eb20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeTargetConfig</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1TSExtension.html</anchorfile>
      <anchor>a5f131b432b226812b6846db6f0db4a81</anchor>
      <arglist>(LFGeneratorContext context, List&lt; String &gt; federateNames, FederateInstance federate, FederationFileConfig fileConfig, MessageReporter messageReporter, RtiConfig rtiConfig)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>outputInitializationBody</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1TSExtension.html</anchorfile>
      <anchor>a60aca9a4e7e9a44dfa0c955941c544b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>supplySenderIndexParameter</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1extensions_1_1TSExtension.html</anchorfile>
      <anchor>abe215ca9680eedf2cc2edd7892c54892</anchor>
      <arglist>(Instantiation inst, int idx)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::generator::FedASTUtils</name>
    <filename>classorg_1_1lflang_1_1federated_1_1generator_1_1FedASTUtils.html</filename>
    <member kind="function" static="yes">
      <type>static Reactor</type>
      <name>addReactorDefinition</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedASTUtils.html</anchorfile>
      <anchor>a233bafbfeb941cecded6a94aa50056ab</anchor>
      <arglist>(String name, Resource resource)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Reactor</type>
      <name>findFederatedReactor</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedASTUtils.html</anchorfile>
      <anchor>aaa9bfe7479430088abd142bb443af65d</anchor>
      <arglist>(Resource resource)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getReactionBankIndex</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedASTUtils.html</anchorfile>
      <anchor>a04bd459030c7606bcbcbab7bc1fcb66d</anchor>
      <arglist>(Reaction reaction)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>hasDestinationReaction</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedASTUtils.html</anchorfile>
      <anchor>ae19039f8340a995fdbb95bef503f96b5</anchor>
      <arglist>(PortInstance port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>hasSourceReaction</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedASTUtils.html</anchorfile>
      <anchor>aaf327e0c113ed3ca7315b507b9ca38e9</anchor>
      <arglist>(PortInstance port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>makeCommunication</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedASTUtils.html</anchorfile>
      <anchor>a12ca2acfeb269567f630e74c5f5f661c</anchor>
      <arglist>(FedConnectionInstance connection, Resource resource, CoordinationMode coordination, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static&lt; E &gt; List&lt; E &gt;</type>
      <name>safe</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedASTUtils.html</anchorfile>
      <anchor>a8a7ac676bc16c00d391d8ccdc20b7afa</anchor>
      <arglist>(List&lt; E &gt; list)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setReactionBankIndex</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedASTUtils.html</anchorfile>
      <anchor>ae1a0f1a954d937fca6d52d2d9ddb7a66</anchor>
      <arglist>(Reaction reaction, int bankIndex)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>networkIDReceiver</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedASTUtils.html</anchorfile>
      <anchor>aa0efaa34ad1851d35fd5076d2f89a480</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::generator::FedConnectionInstance</name>
    <filename>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</filename>
    <member kind="function">
      <type></type>
      <name>FedConnectionInstance</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>ab3f447e6bb2572a3d954ff2d993a0747</anchor>
      <arglist>(SendRange srcRange, RuntimeRange&lt; PortInstance &gt; dstRange, int srcChannel, int srcBank, int dstChannel, int dstBank, FederateInstance srcFederate, FederateInstance dstFederate, SupportedSerializers serializer)</arglist>
    </member>
    <member kind="function">
      <type>Connection</type>
      <name>getDefinition</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>ae9b1399cdae9278a947b92c8fa2797d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PortInstance</type>
      <name>getDestinationPortInstance</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>af8e2808d52117c3d87db83a24b389765</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDstBank</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>a66e24dc6bd5fe140ff3315fe5914f77d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDstChannel</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>af583da36d68f49d95d6b85d4565d80dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FederateInstance</type>
      <name>getDstFederate</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>a8042a25243dc73846db15f22f9b9a440</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SupportedSerializers</type>
      <name>getSerializer</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>a8353f7eb00c5289db7bd9fc3af593321</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PortInstance</type>
      <name>getSourcePortInstance</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>a8b8eee17d093ca68e1642efa810614ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSrcBank</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>a3a1457ebacbd869e606fcd82f4221b10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSrcChannel</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>a452565a398e9b8c28801838a95233d83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FederateInstance</type>
      <name>getSrcFederate</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>a328db45643f642c729b960c0f50221cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>int</type>
      <name>dstBank</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>aed9fc85ccb83c385cbf82eebdc5238c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>int</type>
      <name>dstChannel</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>aa6bf8e213c876b66a4622cd30e300efd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>FederateInstance</type>
      <name>dstFederate</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>a89dc218c4f3f1bdd95d8d1f1fffdea3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>RuntimeRange&lt; PortInstance &gt;</type>
      <name>dstRange</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>aec0ff1a4ff2a6b4b8e0a166b19fb2135</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>SupportedSerializers</type>
      <name>serializer</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>a92f4004b4a2b183c8371fff0de984876</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>int</type>
      <name>srcBank</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>a133ec5b46bea985b5af56c75a17a0b1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>int</type>
      <name>srcChannel</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>ac480fe9e96f5bfda962244395ff2adcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>FederateInstance</type>
      <name>srcFederate</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>a7b329ce6eeabbefa1656eca510b4d09b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>SendRange</type>
      <name>srcRange</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedConnectionInstance.html</anchorfile>
      <anchor>a46d26e790c5dde4f89a373a33374279e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::generator::FedEmitter</name>
    <filename>classorg_1_1lflang_1_1federated_1_1generator_1_1FedEmitter.html</filename>
    <member kind="function">
      <type></type>
      <name>FedEmitter</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedEmitter.html</anchorfile>
      <anchor>a53dafe87d08729c6b9c3af8bd3f73a60</anchor>
      <arglist>(FederationFileConfig fileConfig, Reactor originalMainReactor, MessageReporter messageReporter, RtiConfig rtiConfig)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Path</type>
      <name>lfFilePath</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedEmitter.html</anchorfile>
      <anchor>a428339fab729f689f2aa49fcc2ab9f51</anchor>
      <arglist>(FederationFileConfig fileConfig, FederateInstance federate)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>Map&lt; Path, CodeMap &gt;</type>
      <name>generateFederate</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedEmitter.html</anchorfile>
      <anchor>af06f4f44b30377880fcf2e5e760939ec</anchor>
      <arglist>(LFGeneratorContext context, FederateInstance federate, List&lt; String &gt; federateNames)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::generator::FederateInstance</name>
    <filename>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</filename>
    <member kind="function">
      <type></type>
      <name>FederateInstance</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>af7b85fee3f81e914288a73b15f1d51e1</anchor>
      <arglist>(Instantiation instantiation, int id, int bankIndex, int bankWidth, TargetConfig targetConfig, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>LinkedHashMap&lt; Output, TimeValue &gt;</type>
      <name>findOutputsConnectedToPhysicalActions</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a05f0aa5951980e38175fe14e789758e6</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function">
      <type>ActionInstance</type>
      <name>findPhysicalAction</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>aa86c1a98520a9afc70104ac4feaefd12</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function">
      <type>Instantiation</type>
      <name>getInstantiation</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a31c273220a138225a21181e6e792104f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>includes</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>af63e5220b899a720f2a2c95cadaaaa72</anchor>
      <arglist>(Action action)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>includes</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a2556ebf0e072dfa70c7439d370bacd49</anchor>
      <arglist>(Reaction reaction)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>includes</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a2520a505004537b42fb1c4bc5eb0e1d7</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>includes</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>aef30c0f8612b1c4d2c08becbc5d97209</anchor>
      <arglist>(Timer timer)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isInZeroDelayCycle</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>af11bcd15ea58a5af81f5db122ec46c0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>references</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a992444c82ad06346f63a86478c62f7d2</anchor>
      <arglist>(Import imp)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>references</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>aad9200a94321d7b120ea125c946f2d4c</anchor>
      <arglist>(Parameter param)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>references</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a9b914f2805cbe2b5a2546769dac453d5</anchor>
      <arglist>(ReactorDecl declaration)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>ab6c209a93ad48b82001ff86d306879c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bankIndex</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a72a07928e98c5981708680ec49275a21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bankWidth</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>af9f6f5043f63c6100e4d2c37ad3a0cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Set&lt; FedConnectionInstance &gt;</type>
      <name>connections</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a39857357f7779377441658dc0312106b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Map&lt; FederateInstance, Set&lt; Expression &gt; &gt;</type>
      <name>dependsOn</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a26b0e3b9a63c995b1c8a284964d5ab62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HashSet&lt; SupportedSerializers &gt;</type>
      <name>enabledSerializers</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a5a360ebe6d3bce5000eb1198bc595215</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>host</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>afc1608e4f864c962476e0fbb643ba889</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>id</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a3342615686d0dd51945e566e18012a31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Set&lt; FederateInstance &gt;</type>
      <name>inboundP2PConnections</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a0f800b9c19e9a05c6666e9d09547a50a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Instantiation</type>
      <name>instantiation</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>ac2f14954bebfe850d6cc7d9409c5eb16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>isRemote</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a241c0d4aa022944a3bbf5b15de8b36c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a1823e46b5758701c421f719ee9ac5b40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HashMap&lt; Action, Instantiation &gt;</type>
      <name>networkActionToInstantiation</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a77991e32c22bee085bd00a2d9429f8d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; Connection &gt;</type>
      <name>networkConnections</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a4a8895a8455c192f175288db86e06bef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; Instantiation &gt;</type>
      <name>networkHelperInstantiations</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>afd07062ec50863ec9bd46aed7c73728a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>networkIdSender</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>ae4dbddbc5276e1b183fcbd9eab427f33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; Expression &gt;</type>
      <name>networkMessageActionDelays</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>aa4ea172f311dd8b3921ca60c8ae00e99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; Action &gt;</type>
      <name>networkMessageActions</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a47449aa73eed9f644e1407b61ef5e5f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; FederateInstance &gt;</type>
      <name>networkMessageSourceFederate</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>ada1f1829517b59180e4fcedd0b241b2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Map&lt; PortInstance, Instantiation &gt;</type>
      <name>networkPortToIndexer</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a0f119bf8898184d899461ea0c62116bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Map&lt; PortInstance, Instantiation &gt;</type>
      <name>networkPortToInstantiation</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a87f61013835ef4c73d93da3f91de3073</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; Reactor &gt;</type>
      <name>networkReactors</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>af10394308e7d01de56951ef3399a7066</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; Instantiation &gt;</type>
      <name>networkReceiverInstantiations</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>ae4fcf0b96b8808842e9bea180cb85765</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; Reaction &gt;</type>
      <name>networkReceiverReactions</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>acebe5ef9bb8647b30e1fd277eca87654</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; Instantiation &gt;</type>
      <name>networkSenderInstantiations</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a040083692a690e2a5bddf771a7b1129a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; Reaction &gt;</type>
      <name>networkSenderReactions</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a52945ee24ed4f576ebe0663b80f36c40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Set&lt; FederateInstance &gt;</type>
      <name>outboundP2PConnections</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>aebede6d3405422bf2f0e27dab474900c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>port</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a7e331ca78d2547f95271ab791925f8d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; Reaction &gt;</type>
      <name>portAbsentReactions</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a37e39c26f992a20c7df2b5563843c194</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Map&lt; FederateInstance, Set&lt; Expression &gt; &gt;</type>
      <name>sendsTo</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a2e9b1f70e6448fc94fe56bccf1b4805c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SortedSet&lt; TimeValue &gt;</type>
      <name>staaOffsets</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>ae2a65877d16bc46d3cf9b7dd30cce3e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HashMap&lt; TimeValue, List&lt; Action &gt; &gt;</type>
      <name>staToNetworkActionMap</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>ab2954ecbbccb124173ce61d6d68d93fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TargetConfig</type>
      <name>targetConfig</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a963b3728b40a5680a8935afb64fc286c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>user</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>aad0ce08e5cc8e02b63a2209a49c541d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; Action &gt;</type>
      <name>zeroDelayCycleNetworkMessageActions</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>aeb7ddc921ca3cca3dea34437daf5960f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>private&lt; T &gt; List&lt; T &gt;</type>
      <name>convertToEmptyListIfNull</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateInstance.html</anchorfile>
      <anchor>a4c6cbd67404c79acbdac99ff4d785134</anchor>
      <arglist>(List&lt; T &gt; list)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::generator::FederateTargetConfig</name>
    <filename>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateTargetConfig.html</filename>
    <base>org.lflang.target.TargetConfig</base>
    <member kind="function">
      <type>TargetDecl</type>
      <name>extractTargetDecl</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>aaf8134830c5a082ad1c623473befa9ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FederateTargetConfig</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederateTargetConfig.html</anchorfile>
      <anchor>a88ae1650807780acaddfa566401e343d</anchor>
      <arglist>(LFGeneratorContext context, Resource federateResource)</arglist>
    </member>
    <member kind="function">
      <type>Optional&lt; TargetProperty&lt;?, ?&gt; &gt;</type>
      <name>forName</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a7226771f2feddfad60c6c28705b4d4f7</anchor>
      <arglist>(String name)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; TargetProperty&lt;?, ?&gt; &gt;</type>
      <name>getAssignedProperties</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>afe71fa9ae573c8f999eee32f336ac60a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource</type>
      <name>getMainResource</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a2f77cc5c7f8b4c1b8abc5633b163ca07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; TargetProperty&lt;?, ?&gt; &gt;</type>
      <name>getRegisteredProperties</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a575ccd78d3f9a46c695308bac1214ec1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isFederated</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a962722434c505af37dadb2ae988b4719</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isSet</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>aaa9a648048c94298581efb6309f09b40</anchor>
      <arglist>(TargetProperty&lt;?, ?&gt; property)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isSupported</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a890efbc7d1331aac4ea77a3e2beb8537</anchor>
      <arglist>(TargetProperty p)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>listOfRegisteredProperties</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>afcd659ea7847e906655a8ac296537b45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>aa6decdd4f29871ef8f4396f7208b4502</anchor>
      <arglist>(GeneratorArguments args, MessageReporter err)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; TargetProperty&lt;?, ?&gt; &gt;</type>
      <name>loaded</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a9f224e642abed89f246ad421e12f0d8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeImportedConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>addfe17d8b13f497a5d1049730a9575de</anchor>
      <arglist>(Resource importedResource, Resource mainResource, Predicate&lt; TargetProperty &gt; loadOrNot, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a69331e91d8c9229a75f7065d26f8dde4</anchor>
      <arglist>(TargetProperty&lt;?, ?&gt;... properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reportUnsupportedTargetProperty</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a640cf2b9d6f21d7ac71722aae80fb8cd</anchor>
      <arglist>(String name, MessageReporter.Stage2 stage2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>aba9105566b09eed3ac26a497d90d7323</anchor>
      <arglist>(TargetProperty&lt;?, ?&gt; property)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>settings</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a7c356e6204897b9e6c164848c4c892e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a2204772212c782d80c26fc65a7b268f3</anchor>
      <arglist>(TargetConfig config, List&lt; KeyValuePair &gt; pairs, Path relativePath, Predicate&lt; TargetProperty &gt; loadOrNot, MessageReporter err)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a2ab8294cd6af1795f09f31dc6a59e16c</anchor>
      <arglist>(MessageReporter reporter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; KeyValuePair &gt;</type>
      <name>extractProperties</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a532170c040b7a446fdc1a8b969457784</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TargetConfig</type>
      <name>getMockInstance</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>add1e66e960ee4c867e8def30ce05fe6e</anchor>
      <arglist>(Target target)</arglist>
    </member>
    <member kind="variable">
      <type>final List&lt; String &gt;</type>
      <name>compileAdditionalSources</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a566f1e3bd78e52896883f40166d90337</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Target</type>
      <name>target</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a50b773073c0fb80795def245b15daf87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>NOT_IN_LF_SYNTAX_MESSAGE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a5e2ea57f5c44024c38ae01a6f8376b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>load</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>afbf0bb149c8c24b5427f12e1a439de24</anchor>
      <arglist>(JsonObject jsonObject, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>load</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a94d5fb78c9342fab63877631a9a0993d</anchor>
      <arglist>(Resource resource, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final Map&lt; TargetProperty&lt;?, ?&gt;, KeyValuePair &gt;</type>
      <name>keyValuePairs</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a0c0466e4eca2dd9b9f4f600f41b1ddf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Resource</type>
      <name>mainResource</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>af7e01e3f2aa4b51b6f33d8ddd6a34ccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final Map&lt; TargetProperty&lt;?, ?&gt;, Object &gt;</type>
      <name>properties</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>aba01d9037d76fbfe4e0170224986de47</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T, S extends TargetPropertyType &gt; T</type>
      <name>get</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>abc1bea0c132e3bd62e63161988489bb8</anchor>
      <arglist>(TargetProperty&lt; T, S &gt; property)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T, S extends TargetPropertyType &gt; T</type>
      <name>getOrDefault</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>ab487cec784903f3d2c201ece04be802e</anchor>
      <arglist>(TargetProperty&lt; T, S &gt; property)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T, S extends TargetPropertyType &gt; KeyValuePair</type>
      <name>lookup</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a955be16170aeb68effcae4632ec61361</anchor>
      <arglist>(TargetProperty&lt; T, S &gt; targetProperty)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T, S extends TargetPropertyType &gt; void</type>
      <name>set</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>ac8f31797447b46d4983677ba2220908e</anchor>
      <arglist>(TargetProperty&lt; T, S &gt; property, T value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::generator::FederationFileConfig</name>
    <filename>classorg_1_1lflang_1_1federated_1_1generator_1_1FederationFileConfig.html</filename>
    <base>org.lflang.FileConfig</base>
    <member kind="function">
      <type>void</type>
      <name>doClean</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederationFileConfig.html</anchorfile>
      <anchor>a914796cb9cc0e5bc5eb4b5b88af27318</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FederationFileConfig</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederationFileConfig.html</anchorfile>
      <anchor>a57a322d22b1b6e4cc1c236fe5e7c794a</anchor>
      <arglist>(FileConfig fileConfig)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FederationFileConfig</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederationFileConfig.html</anchorfile>
      <anchor>a2e303b734a06d299eac8d5b5d9b0f3eb</anchor>
      <arglist>(Resource resource, Path srcGenBasePath, boolean useHierarchicalBin)</arglist>
    </member>
    <member kind="function">
      <type>LFCommand</type>
      <name>getCommand</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a8b0ab00d8e9aeb0526396978b46cdbff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getDirectory</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a0805de9a6fdf878db785f32bf569e9e7</anchor>
      <arglist>(Resource r)</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getExecutable</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a21438a70c07ade97df6c4eb040c78df5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getFedBinPath</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederationFileConfig.html</anchorfile>
      <anchor>ab397006f844bd35172b34b0f19a036d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getFedGenPath</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederationFileConfig.html</anchorfile>
      <anchor>abfabb0ae70fe57e4fcb2970d2d981654</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getGenPath</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederationFileConfig.html</anchorfile>
      <anchor>af0d643cda5b60906dc7dc3654ab2bd10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getModelGenBasePath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aab302b75642dbc55010558897d90d974</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getModelGenPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aaadd154f0fdb26cd627f67f3cbbe8112</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getOutPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aadbddca3925f8b7ca7b77123a25dc275</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getRtiBinPath</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederationFileConfig.html</anchorfile>
      <anchor>a50d277b166d91903de7828049e099d96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getRtiSrcGenPath</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederationFileConfig.html</anchorfile>
      <anchor>aa1afc19d61bf790bde7a1ccb7d1d36c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getSrcGenBasePath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ac771a84f3498f17e042f76172757d941</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getSrcGenPath</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederationFileConfig.html</anchorfile>
      <anchor>ab3c30aa1ef97c6db656b03d3a6e4923d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getSrcGenPkgPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a13a4ed53a8ac5a2dd38fd8585a7fffff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getSrcPath</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederationFileConfig.html</anchorfile>
      <anchor>a1c3b3a2bc51b9e1fb31706b6561a09fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>relativizePaths</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FederationFileConfig.html</anchorfile>
      <anchor>accb3a3dec0d005ddef5844fe8c1882c3</anchor>
      <arglist>(FederateTargetConfig targetConfig)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Path</type>
      <name>findPackageRoot</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a1f4440a73ce696b26daf6f8837981a00</anchor>
      <arglist>(final Path input, final Consumer&lt; String &gt; printWarning)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Resource</type>
      <name>getResource</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aa607ba3c51d2917175d4e50d713d7273</anchor>
      <arglist>(File file, Provider&lt; ResourceSet &gt; resourceSetProvider)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Resource</type>
      <name>getResource</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a90959c68962e8603088ffd34739ecdbd</anchor>
      <arglist>(Path path, XtextResourceSet xtextResourceSet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Path</type>
      <name>getSrcGenRoot</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a7fa5856208463eb1d79a283ac2a09d63</anchor>
      <arglist>(IFileSystemAccess2 fsa)</arglist>
    </member>
    <member kind="variable">
      <type>final Path</type>
      <name>binPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aa9e8742b0a791cc329eb06368a027f92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final IResource</type>
      <name>iResource</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a819b6b0f2489fca2b79521f8d2dbb850</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a826734253724b14eab96b52238ce03f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Resource</type>
      <name>resource</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a6ae8ffe20be19509655e2f39e8a0dae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Path</type>
      <name>srcFile</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a99e7606f0d8f9dc7d27f6f7394a2097e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Path</type>
      <name>srcPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>abd8fa0fe4c6d554309bd1aa576b8b65a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Path</type>
      <name>srcPkgPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a9873c33b25d6a3e668d96d1068a6dd8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final boolean</type>
      <name>useHierarchicalBin</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ac86a63029d65b24543f6ed15a4cc1423</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DEFAULT_BIN_DIR</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a6f81faca9bbf6ea82f4c9aa900a63943</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DEFAULT_MODEL_GEN_DIR</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ac5cb1fc2714e098bcaed2f4364eb3851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DEFAULT_SRC_DIR</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a8366f237b17ebf31b70104132fdc4e74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DEFAULT_SRC_GEN_DIR</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a89fcf5c51736e2119dd38727dea7467a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>getExecutableExtension</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>affa820120da34808619727af21612fd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Path</type>
      <name>getSubPkgPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aae6b918b653bb024955b75d657b7c0ff</anchor>
      <arglist>(Path srcPath)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>modelGenBasePath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ada9e29269897795f6441df88fdd42171</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>modelGenPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ae987c0a32474fbb3c9befce8ee22668d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>srcGenBasePath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>acea22dc46408617ec61f514a417ca272</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>srcGenPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a03061541a3ca5a3d3b6ede39f9c122c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::generator::FedGenerator</name>
    <filename>classorg_1_1lflang_1_1federated_1_1generator_1_1FedGenerator.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>doGenerate</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedGenerator.html</anchorfile>
      <anchor>a656627390df0774451f7012423fe7cde</anchor>
      <arglist>(Resource resource, LFGeneratorContext context)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FedGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedGenerator.html</anchorfile>
      <anchor>aa92ab95b31d5aa3e64bc8e0601e98f28</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>final RtiConfig</type>
      <name>rtiConfig</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedGenerator.html</anchorfile>
      <anchor>a172cc555cb5957739f882a1ba1f098fb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::generator::FedImportEmitter</name>
    <filename>classorg_1_1lflang_1_1federated_1_1generator_1_1FedImportEmitter.html</filename>
    <member kind="function" protection="package">
      <type>String</type>
      <name>generateImports</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedImportEmitter.html</anchorfile>
      <anchor>a0a682419ba51d8f3c3cb06a984ae3501</anchor>
      <arglist>(FederateInstance federate, FederationFileConfig fileConfig)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::generator::FedMainEmitter</name>
    <filename>classorg_1_1lflang_1_1federated_1_1generator_1_1FedMainEmitter.html</filename>
    <member kind="function" protection="package">
      <type>String</type>
      <name>generateMainReactor</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedMainEmitter.html</anchorfile>
      <anchor>aaab82aa84d35fb4a5346b0e0f2f95bde</anchor>
      <arglist>(FederateInstance federate, Reactor originalMainReactor, MessageReporter messageReporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::generator::FedPreambleEmitter</name>
    <filename>classorg_1_1lflang_1_1federated_1_1generator_1_1FedPreambleEmitter.html</filename>
    <member kind="function">
      <type></type>
      <name>FedPreambleEmitter</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedPreambleEmitter.html</anchorfile>
      <anchor>a35ba461bae3a4341dcefe44e387b1536</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="package">
      <type>String</type>
      <name>generatePreamble</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedPreambleEmitter.html</anchorfile>
      <anchor>a5410ee2027e3ab8e9a69a205cb571ef6</anchor>
      <arglist>(FederateInstance federate, FederationFileConfig fileConfig, RtiConfig rtiConfig, MessageReporter messageReporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::generator::FedReactorEmitter</name>
    <filename>classorg_1_1lflang_1_1federated_1_1generator_1_1FedReactorEmitter.html</filename>
    <member kind="function">
      <type></type>
      <name>FedReactorEmitter</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedReactorEmitter.html</anchorfile>
      <anchor>a225fe13c76cd11a84c52e41b3f9dbaa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="package">
      <type>String</type>
      <name>generateReactorDefinitions</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedReactorEmitter.html</anchorfile>
      <anchor>ad6adde5dde6878e7f0a2d7b179e211c1</anchor>
      <arglist>(FederateInstance federate)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::generator::FedTargetEmitter</name>
    <filename>classorg_1_1lflang_1_1federated_1_1generator_1_1FedTargetEmitter.html</filename>
    <member kind="function" protection="package">
      <type>String</type>
      <name>generateTarget</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedTargetEmitter.html</anchorfile>
      <anchor>ae128425ed479efc5d4f3de48b640b7ef</anchor>
      <arglist>(LFGeneratorContext context, List&lt; String &gt; federateNames, FederateInstance federate, FederationFileConfig fileConfig, MessageReporter messageReporter, RtiConfig rtiConfig)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::generator::FedUtils</name>
    <filename>classorg_1_1lflang_1_1federated_1_1generator_1_1FedUtils.html</filename>
    <member kind="function" static="yes">
      <type>static SupportedSerializers</type>
      <name>getSerializer</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1FedUtils.html</anchorfile>
      <anchor>ae2f67501c67bc18077b9d6d652144a26</anchor>
      <arglist>(Connection connection, FederateInstance srcFederate, FederateInstance dstFederate)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::generator::LineAdjustingMessageReporter</name>
    <filename>classorg_1_1lflang_1_1federated_1_1generator_1_1LineAdjustingMessageReporter.html</filename>
    <base>org.lflang.MessageReporter</base>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1LineAdjustingMessageReporter.html</anchorfile>
      <anchor>a903be09c0a9e32d57240acd03ab2e82d</anchor>
      <arglist>(EObject node)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1LineAdjustingMessageReporter.html</anchorfile>
      <anchor>a91ab85ec001010d594ee6d71bcd51684</anchor>
      <arglist>(EObject node, EStructuralFeature feature)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1LineAdjustingMessageReporter.html</anchorfile>
      <anchor>a47b8a466887380d804b0e115ee175bda</anchor>
      <arglist>(Path file, int line)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1LineAdjustingMessageReporter.html</anchorfile>
      <anchor>a2d86dbab26d770bf579da9896e8d9f18</anchor>
      <arglist>(Path file, Range range)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a3d5b75f44f1985a4e1024a8b43d61fec</anchor>
      <arglist>(Path file)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a22bc622a160433fe40df98e229626760</anchor>
      <arglist>(Path file, Position pos)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>atNullableLine</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a398b2acbf471940ad542db86c34bd7dd</anchor>
      <arglist>(Path file, Integer line)</arglist>
    </member>
    <member kind="function">
      <type>default void</type>
      <name>clearHistory</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a1ed16fafcb62a47032aac34b21235d70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>getErrorsOccurred</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1LineAdjustingMessageReporter.html</anchorfile>
      <anchor>a6060387ea889176045bbe9a3b06d6c38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LineAdjustingMessageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1LineAdjustingMessageReporter.html</anchorfile>
      <anchor>ac406c912dcc00d80251ab05925e719e5</anchor>
      <arglist>(MessageReporter parent, Map&lt; Path, CodeMap &gt; codeMapMap)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>nowhere</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1LineAdjustingMessageReporter.html</anchorfile>
      <anchor>a12352d8cf7ba62ef49511c8621ad6ee6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::generator::SynchronizedMessageReporter</name>
    <filename>classorg_1_1lflang_1_1federated_1_1generator_1_1SynchronizedMessageReporter.html</filename>
    <base>org.lflang.MessageReporterBase</base>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a3d5b75f44f1985a4e1024a8b43d61fec</anchor>
      <arglist>(Path file)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>aec08239e4e187b9fab9447f4d29b0479</anchor>
      <arglist>(Path file, int line)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a22bc622a160433fe40df98e229626760</anchor>
      <arglist>(Path file, Position pos)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a00cdd7120113ce25c9830e183e14c66f</anchor>
      <arglist>(EObject node)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a77356f4ec9535154ed819b9b32a1ceee</anchor>
      <arglist>(EObject node, EStructuralFeature feature)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>aee12d3be7c0c2f5e32079dfddd54c7da</anchor>
      <arglist>(Path file, Range range)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>atNullableLine</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a398b2acbf471940ad542db86c34bd7dd</anchor>
      <arglist>(Path file, Integer line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearHistory</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a40dba989b4d7ea727cf7b4a6bea7431f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>synchronized boolean</type>
      <name>getErrorsOccurred</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1SynchronizedMessageReporter.html</anchorfile>
      <anchor>a94cc417651db64d282472fb1d8671dab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>nowhere</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a6d8e986624a920121b5c6a165f3073a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SynchronizedMessageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1SynchronizedMessageReporter.html</anchorfile>
      <anchor>a7d26569486a92a224ccdba3f9f03f2ac</anchor>
      <arglist>(MessageReporter parent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>synchronized void</type>
      <name>report</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1SynchronizedMessageReporter.html</anchorfile>
      <anchor>a34056c8303c164e61f48dc63a12b51f2</anchor>
      <arglist>(Path path, Range range, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>synchronized void</type>
      <name>reportOnNode</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1SynchronizedMessageReporter.html</anchorfile>
      <anchor>a521bbf981fac9f511997b18b70f2505b</anchor>
      <arglist>(EObject node, EStructuralFeature feature, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reportOnNode</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a084f678d4f71661620ed91058e4694c1</anchor>
      <arglist>(EObject node, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>synchronized void</type>
      <name>reportWithoutPosition</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1generator_1_1SynchronizedMessageReporter.html</anchorfile>
      <anchor>a76b4e394d120b2fd2306a39dc97b2ebe</anchor>
      <arglist>(DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Stage2</type>
      <name>wrap</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a365b78fc2a5d81158e450ea7aea5821b</anchor>
      <arglist>(Stage2 e)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::launcher::BuildConfig</name>
    <filename>classorg_1_1lflang_1_1federated_1_1launcher_1_1BuildConfig.html</filename>
    <member kind="function">
      <type></type>
      <name>BuildConfig</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1BuildConfig.html</anchorfile>
      <anchor>a8431ef948ad2c6c79d82002a9fff6b2f</anchor>
      <arglist>(FederateInstance federate, FederationFileConfig fileConfig, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>compileCommand</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1BuildConfig.html</anchorfile>
      <anchor>adce0720a9f09f63111a03695e2b4c2b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>abstract String</type>
      <name>localExecuteCommand</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1BuildConfig.html</anchorfile>
      <anchor>a844f8367e8f124336cea5799caac54ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final FederateInstance</type>
      <name>federate</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1BuildConfig.html</anchorfile>
      <anchor>a1f2f44857551686d99a4f949cfab27e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final FederationFileConfig</type>
      <name>fileConfig</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1BuildConfig.html</anchorfile>
      <anchor>a8cc8329997cb2464b3b8ba72f2573d96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final MessageReporter</type>
      <name>messageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1BuildConfig.html</anchorfile>
      <anchor>af8c8f289b37d7b8689f0f95223d288ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::launcher::CBuildConfig</name>
    <filename>classorg_1_1lflang_1_1federated_1_1launcher_1_1CBuildConfig.html</filename>
    <base>org.lflang.federated.launcher.BuildConfig</base>
    <member kind="function">
      <type></type>
      <name>CBuildConfig</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1CBuildConfig.html</anchorfile>
      <anchor>a94caf1de456b4ae5db3c4182e937b065</anchor>
      <arglist>(FederateInstance federate, FederationFileConfig fileConfig, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>compileCommand</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1CBuildConfig.html</anchorfile>
      <anchor>a4e10ee55985efd378f137b3977b7bf9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>localExecuteCommand</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1CBuildConfig.html</anchorfile>
      <anchor>a77f2aba1a74c78e0d67272bfde8e4285</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final FederateInstance</type>
      <name>federate</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1BuildConfig.html</anchorfile>
      <anchor>a1f2f44857551686d99a4f949cfab27e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final FederationFileConfig</type>
      <name>fileConfig</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1BuildConfig.html</anchorfile>
      <anchor>a8cc8329997cb2464b3b8ba72f2573d96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final MessageReporter</type>
      <name>messageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1BuildConfig.html</anchorfile>
      <anchor>af8c8f289b37d7b8689f0f95223d288ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::launcher::FedLauncherGenerator</name>
    <filename>classorg_1_1lflang_1_1federated_1_1launcher_1_1FedLauncherGenerator.html</filename>
    <member kind="function">
      <type>void</type>
      <name>doGenerate</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1FedLauncherGenerator.html</anchorfile>
      <anchor>a9db6e5fdcbe382f8cf1a5be2381f5723</anchor>
      <arglist>(List&lt; FederateInstance &gt; federates, RtiConfig rtiConfig)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FedLauncherGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1FedLauncherGenerator.html</anchorfile>
      <anchor>ad0fb7d344050bd1cd9f7a1fd0979c95b</anchor>
      <arglist>(TargetConfig targetConfig, FederationFileConfig fileConfig, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FederationFileConfig</type>
      <name>fileConfig</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1FedLauncherGenerator.html</anchorfile>
      <anchor>a4f63ec1a279f8c9418f43b97c38bec3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MessageReporter</type>
      <name>messageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1FedLauncherGenerator.html</anchorfile>
      <anchor>a11d0d91e941c0e5beb59fc9ad5e0e020</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TargetConfig</type>
      <name>targetConfig</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1FedLauncherGenerator.html</anchorfile>
      <anchor>a207cc1717afb4eb151760b29e57cba04</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::launcher::PyBuildConfig</name>
    <filename>classorg_1_1lflang_1_1federated_1_1launcher_1_1PyBuildConfig.html</filename>
    <base>org.lflang.federated.launcher.BuildConfig</base>
    <member kind="function">
      <type>String</type>
      <name>compileCommand</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1BuildConfig.html</anchorfile>
      <anchor>adce0720a9f09f63111a03695e2b4c2b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>localExecuteCommand</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1PyBuildConfig.html</anchorfile>
      <anchor>a843f16da81126c0f24a7ba659cd40624</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PyBuildConfig</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1PyBuildConfig.html</anchorfile>
      <anchor>a4345d7c3569a375486e16c1825747d15</anchor>
      <arglist>(FederateInstance federate, FederationFileConfig fileConfig, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final FederateInstance</type>
      <name>federate</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1BuildConfig.html</anchorfile>
      <anchor>a1f2f44857551686d99a4f949cfab27e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final FederationFileConfig</type>
      <name>fileConfig</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1BuildConfig.html</anchorfile>
      <anchor>a8cc8329997cb2464b3b8ba72f2573d96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final MessageReporter</type>
      <name>messageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1BuildConfig.html</anchorfile>
      <anchor>af8c8f289b37d7b8689f0f95223d288ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::launcher::RtiConfig</name>
    <filename>classorg_1_1lflang_1_1federated_1_1launcher_1_1RtiConfig.html</filename>
    <member kind="function">
      <type>Path</type>
      <name>getDirectory</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1RtiConfig.html</anchorfile>
      <anchor>ad15faf645d6fdf9637d455602cbce0ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getHost</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1RtiConfig.html</anchorfile>
      <anchor>ab7e0ee1b2b2656344a56cca40f8ae2e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPort</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1RtiConfig.html</anchorfile>
      <anchor>a1088e8bd946df2243516d06c41422589</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getRtiBinPath</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1RtiConfig.html</anchorfile>
      <anchor>a9a10f4b88cde4a65aaf31992b8582db5</anchor>
      <arglist>(FileConfig fileConfig)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getUser</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1RtiConfig.html</anchorfile>
      <anchor>a5691044fac08c99b46f3bf7a13175827</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RtiConfig</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1RtiConfig.html</anchorfile>
      <anchor>ad4e4f8c337c845fdbdb66f0eb6ea8d6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDirectory</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1RtiConfig.html</anchorfile>
      <anchor>a9f4067fcb6d41c4965ac4ec8f806a25d</anchor>
      <arglist>(Path directory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHost</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1RtiConfig.html</anchorfile>
      <anchor>abadafd8c1b5cd8c6050d7ef9b5a5114a</anchor>
      <arglist>(String host)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPort</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1RtiConfig.html</anchorfile>
      <anchor>ae59fce707e8a2d050f919783711e661d</anchor>
      <arglist>(int port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUser</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1RtiConfig.html</anchorfile>
      <anchor>ae3a96421400c70dca825772a9d230b37</anchor>
      <arglist>(String user)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::launcher::TsBuildConfig</name>
    <filename>classorg_1_1lflang_1_1federated_1_1launcher_1_1TsBuildConfig.html</filename>
    <base>org.lflang.federated.launcher.BuildConfig</base>
    <member kind="function">
      <type>String</type>
      <name>compileCommand</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1TsBuildConfig.html</anchorfile>
      <anchor>aef3d0ed582ec184799762ff0d58dafe1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>localExecuteCommand</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1TsBuildConfig.html</anchorfile>
      <anchor>a4c3214e893352b8741806e2b19a76cab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TsBuildConfig</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1TsBuildConfig.html</anchorfile>
      <anchor>aa4f5640c7fca0b9137efc65a089ebdb6</anchor>
      <arglist>(FederateInstance federate, FederationFileConfig fileConfig, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final FederateInstance</type>
      <name>federate</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1BuildConfig.html</anchorfile>
      <anchor>a1f2f44857551686d99a4f949cfab27e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final FederationFileConfig</type>
      <name>fileConfig</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1BuildConfig.html</anchorfile>
      <anchor>a8cc8329997cb2464b3b8ba72f2573d96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final MessageReporter</type>
      <name>messageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1launcher_1_1BuildConfig.html</anchorfile>
      <anchor>af8c8f289b37d7b8689f0f95223d288ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::serialization::FedCustomPythonSerialization</name>
    <filename>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedCustomPythonSerialization.html</filename>
    <base>org.lflang.federated.serialization.FedSerialization</base>
    <member kind="function">
      <type></type>
      <name>FedCustomPythonSerialization</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedCustomPythonSerialization.html</anchorfile>
      <anchor>aec9555e5c1dc3df33523398edf8ca9f3</anchor>
      <arglist>(String customSerializerPackage)</arglist>
    </member>
    <member kind="function">
      <type>StringBuilder</type>
      <name>generateCompilerExtensionForSupport</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedCustomPythonSerialization.html</anchorfile>
      <anchor>ac810ca47ec0f83483c85afafa445e211</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StringBuilder</type>
      <name>generateNetworkDeserializerCode</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedCustomPythonSerialization.html</anchorfile>
      <anchor>a9b72e292b817cf4e8224b47ea5e8f4b9</anchor>
      <arglist>(String varName, String targetType)</arglist>
    </member>
    <member kind="function">
      <type>StringBuilder</type>
      <name>generateNetworkSerializerCode</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedCustomPythonSerialization.html</anchorfile>
      <anchor>a27afaa26016507934afd54a0148a175b</anchor>
      <arglist>(String varName, String originalType)</arglist>
    </member>
    <member kind="function">
      <type>StringBuilder</type>
      <name>generatePreambleForSupport</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedCustomPythonSerialization.html</anchorfile>
      <anchor>a10b5b9507903b5f652ef14f59b464e50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isCompatible</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedCustomPythonSerialization.html</anchorfile>
      <anchor>a39f2f75da3ec72c4e5191ab8047ca0fe</anchor>
      <arglist>(GeneratorBase generator)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>serializedBufferLength</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedCustomPythonSerialization.html</anchorfile>
      <anchor>a35c2e40b9a483fd860952a94b0af7226</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>serializedBufferVar</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedCustomPythonSerialization.html</anchorfile>
      <anchor>a2c1e6e30eedf5fa57c8c075384eae54e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>deserializedVarName</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1serialization_1_1FedSerialization.html</anchorfile>
      <anchor>ad26ff751148d3f622edd98d54a6c27bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>serializedVarName</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1serialization_1_1FedSerialization.html</anchorfile>
      <anchor>a6a7cc5ce4312c556f0a277cb0b2792c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>String</type>
      <name>customSerializerPackage</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedCustomPythonSerialization.html</anchorfile>
      <anchor>a467041fa53e733f9ffe4e074a2c55977</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::serialization::FedNativePythonSerialization</name>
    <filename>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedNativePythonSerialization.html</filename>
    <base>org.lflang.federated.serialization.FedSerialization</base>
    <member kind="function">
      <type>StringBuilder</type>
      <name>generateCompilerExtensionForSupport</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedNativePythonSerialization.html</anchorfile>
      <anchor>a133747c1bb1f9188ed41497e5002f24e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StringBuilder</type>
      <name>generateNetworkDeserializerCode</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedNativePythonSerialization.html</anchorfile>
      <anchor>a021c12480787373df2e22e1cbfdbb5d0</anchor>
      <arglist>(String varName, String targetType)</arglist>
    </member>
    <member kind="function">
      <type>StringBuilder</type>
      <name>generateNetworkSerializerCode</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedNativePythonSerialization.html</anchorfile>
      <anchor>a900f3c18ce0ff3f10be14b7b761180ec</anchor>
      <arglist>(String varName, String originalType)</arglist>
    </member>
    <member kind="function">
      <type>StringBuilder</type>
      <name>generatePreambleForSupport</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedNativePythonSerialization.html</anchorfile>
      <anchor>a136afe98bbf596f1265f67f20a127100</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isCompatible</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedNativePythonSerialization.html</anchorfile>
      <anchor>ac60f106bd578c271c078a6b68d64bf2c</anchor>
      <arglist>(GeneratorBase generator)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>serializedBufferLength</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedNativePythonSerialization.html</anchorfile>
      <anchor>a7a9fac6f05088ef050fa0c05a6b57558</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>serializedBufferVar</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedNativePythonSerialization.html</anchorfile>
      <anchor>aaa7e1cff08e0423fe2597aadac5f5e7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>deserializedVarName</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1serialization_1_1FedSerialization.html</anchorfile>
      <anchor>ad26ff751148d3f622edd98d54a6c27bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>serializedVarName</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1serialization_1_1FedSerialization.html</anchorfile>
      <anchor>a6a7cc5ce4312c556f0a277cb0b2792c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::serialization::FedROS2CPPSerialization</name>
    <filename>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedROS2CPPSerialization.html</filename>
    <base>org.lflang.federated.serialization.FedSerialization</base>
    <member kind="function">
      <type>StringBuilder</type>
      <name>generateCompilerExtensionForSupport</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedROS2CPPSerialization.html</anchorfile>
      <anchor>ab7f46904b1f1ec1e27bf50d27569c114</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StringBuilder</type>
      <name>generateNetworkDeserializerCode</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedROS2CPPSerialization.html</anchorfile>
      <anchor>a852c86127e57d16cba8564d8490f9042</anchor>
      <arglist>(String varName, String targetType)</arglist>
    </member>
    <member kind="function">
      <type>StringBuilder</type>
      <name>generateNetworkSerializerCode</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedROS2CPPSerialization.html</anchorfile>
      <anchor>a8408b146467549f6e45fa398dd21881c</anchor>
      <arglist>(String varName, String originalType)</arglist>
    </member>
    <member kind="function">
      <type>StringBuilder</type>
      <name>generateNetworkSerializerCode</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedROS2CPPSerialization.html</anchorfile>
      <anchor>a36a7f33dd189f46dccdbcb1225c4c8be</anchor>
      <arglist>(String varName, String originalType, boolean isSharedPtrType)</arglist>
    </member>
    <member kind="function">
      <type>StringBuilder</type>
      <name>generatePreambleForSupport</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedROS2CPPSerialization.html</anchorfile>
      <anchor>ab35970b50190ca57ce544cbf87a18e96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isCompatible</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedROS2CPPSerialization.html</anchorfile>
      <anchor>a7027448bc92df57702fe0a96c52b73b5</anchor>
      <arglist>(GeneratorBase generator)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>serializedBufferLength</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedROS2CPPSerialization.html</anchorfile>
      <anchor>a1a806d9e480cb6d61bb7966c98d498c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>serializedBufferVar</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1serialization_1_1FedROS2CPPSerialization.html</anchorfile>
      <anchor>aafea28e5481879408cc0d868aa609091</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>deserializedVarName</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1serialization_1_1FedSerialization.html</anchorfile>
      <anchor>ad26ff751148d3f622edd98d54a6c27bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>serializedVarName</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1serialization_1_1FedSerialization.html</anchorfile>
      <anchor>a6a7cc5ce4312c556f0a277cb0b2792c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::federated::serialization::FedSerialization</name>
    <filename>interfaceorg_1_1lflang_1_1federated_1_1serialization_1_1FedSerialization.html</filename>
    <member kind="function">
      <type>StringBuilder</type>
      <name>generateCompilerExtensionForSupport</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1serialization_1_1FedSerialization.html</anchorfile>
      <anchor>acb53f1196a7a4d6e87e9f58107d24772</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StringBuilder</type>
      <name>generateNetworkDeserializerCode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1serialization_1_1FedSerialization.html</anchorfile>
      <anchor>ae9599d719dc13ad4bff82eccdd679804</anchor>
      <arglist>(String varName, String targetType)</arglist>
    </member>
    <member kind="function">
      <type>StringBuilder</type>
      <name>generateNetworkSerializerCode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1serialization_1_1FedSerialization.html</anchorfile>
      <anchor>a3fb6a60ff98f253ebdb33a82b96ebbaf</anchor>
      <arglist>(String varName, String originalType)</arglist>
    </member>
    <member kind="function">
      <type>StringBuilder</type>
      <name>generatePreambleForSupport</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1serialization_1_1FedSerialization.html</anchorfile>
      <anchor>a00744e1dd391efb9e7937998d5617d65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isCompatible</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1serialization_1_1FedSerialization.html</anchorfile>
      <anchor>a5b10e1230f7969306fac65305218162b</anchor>
      <arglist>(GeneratorBase generator)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>serializedBufferLength</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1serialization_1_1FedSerialization.html</anchorfile>
      <anchor>a384eee168aa046962c23bd5988f308b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>serializedBufferVar</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1serialization_1_1FedSerialization.html</anchorfile>
      <anchor>ad5ce9a37dac0e8146353a996c175db8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>deserializedVarName</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1serialization_1_1FedSerialization.html</anchorfile>
      <anchor>ad26ff751148d3f622edd98d54a6c27bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>serializedVarName</name>
      <anchorfile>interfaceorg_1_1lflang_1_1federated_1_1serialization_1_1FedSerialization.html</anchorfile>
      <anchor>a6a7cc5ce4312c556f0a277cb0b2792c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::federated::serialization::SupportedSerializers</name>
    <filename>enumorg_1_1lflang_1_1federated_1_1serialization_1_1SupportedSerializers.html</filename>
    <member kind="function">
      <type>String</type>
      <name>getSerializer</name>
      <anchorfile>enumorg_1_1lflang_1_1federated_1_1serialization_1_1SupportedSerializers.html</anchorfile>
      <anchor>a6b922cbb2b75859b0a63a2af6598338b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSerializer</name>
      <anchorfile>enumorg_1_1lflang_1_1federated_1_1serialization_1_1SupportedSerializers.html</anchorfile>
      <anchor>a8e678a39adef3e213997cebef851953a</anchor>
      <arglist>(String serializer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SupportedSerializers</name>
      <anchorfile>enumorg_1_1lflang_1_1federated_1_1serialization_1_1SupportedSerializers.html</anchorfile>
      <anchor>a9117116303b797d6f5635ce491b8e099</anchor>
      <arglist>(String serializer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SupportedSerializers</type>
      <name>fromCustomString</name>
      <anchorfile>enumorg_1_1lflang_1_1federated_1_1serialization_1_1SupportedSerializers.html</anchorfile>
      <anchor>a3135a186108fbb37b5a8bcab9da67111</anchor>
      <arglist>(String serializer)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CUSTOM</name>
      <anchorfile>enumorg_1_1lflang_1_1federated_1_1serialization_1_1SupportedSerializers.html</anchorfile>
      <anchor>aaa9be88ee0698d2eecced13e3dcc65a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NATIVE</name>
      <anchorfile>enumorg_1_1lflang_1_1federated_1_1serialization_1_1SupportedSerializers.html</anchorfile>
      <anchor>a7686595741f54f5ce34f7881c4ce05b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PROTO</name>
      <anchorfile>enumorg_1_1lflang_1_1federated_1_1serialization_1_1SupportedSerializers.html</anchorfile>
      <anchor>adfe3acfd3b6f68ed302f6eefdec0a73a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ROS2</name>
      <anchorfile>enumorg_1_1lflang_1_1federated_1_1serialization_1_1SupportedSerializers.html</anchorfile>
      <anchor>aad17cab4ec7058671ad1598d31e4126b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::federated::validation::FedValidator</name>
    <filename>classorg_1_1lflang_1_1federated_1_1validation_1_1FedValidator.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>validateFederatedReactor</name>
      <anchorfile>classorg_1_1lflang_1_1federated_1_1validation_1_1FedValidator.html</anchorfile>
      <anchor>a0d52235e4bf376fc088cfc6962eaa132</anchor>
      <arglist>(Reactor reactor, MessageReporter messageReporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::FileConfig</name>
    <filename>classorg_1_1lflang_1_1FileConfig.html</filename>
    <member kind="function">
      <type>void</type>
      <name>doClean</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a2f3cedf4124e5cc9292abc749a636c50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileConfig</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ab9be752caaf298cd2998c3533a8ce976</anchor>
      <arglist>(Resource resource, Path srcGenBasePath, boolean useHierarchicalBin)</arglist>
    </member>
    <member kind="function">
      <type>LFCommand</type>
      <name>getCommand</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a8b0ab00d8e9aeb0526396978b46cdbff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getDirectory</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a0805de9a6fdf878db785f32bf569e9e7</anchor>
      <arglist>(Resource r)</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getExecutable</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a21438a70c07ade97df6c4eb040c78df5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getModelGenBasePath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aab302b75642dbc55010558897d90d974</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getModelGenPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aaadd154f0fdb26cd627f67f3cbbe8112</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getOutPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aadbddca3925f8b7ca7b77123a25dc275</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getSrcGenBasePath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ac771a84f3498f17e042f76172757d941</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getSrcGenPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ae26b50321c8ce7d6f82079b0efbb25fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getSrcGenPkgPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a13a4ed53a8ac5a2dd38fd8585a7fffff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Path</type>
      <name>findPackageRoot</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a1f4440a73ce696b26daf6f8837981a00</anchor>
      <arglist>(final Path input, final Consumer&lt; String &gt; printWarning)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Resource</type>
      <name>getResource</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aa607ba3c51d2917175d4e50d713d7273</anchor>
      <arglist>(File file, Provider&lt; ResourceSet &gt; resourceSetProvider)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Resource</type>
      <name>getResource</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a90959c68962e8603088ffd34739ecdbd</anchor>
      <arglist>(Path path, XtextResourceSet xtextResourceSet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Path</type>
      <name>getSrcGenRoot</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a7fa5856208463eb1d79a283ac2a09d63</anchor>
      <arglist>(IFileSystemAccess2 fsa)</arglist>
    </member>
    <member kind="variable">
      <type>final Path</type>
      <name>binPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aa9e8742b0a791cc329eb06368a027f92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final IResource</type>
      <name>iResource</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a819b6b0f2489fca2b79521f8d2dbb850</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a826734253724b14eab96b52238ce03f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Resource</type>
      <name>resource</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a6ae8ffe20be19509655e2f39e8a0dae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Path</type>
      <name>srcFile</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a99e7606f0d8f9dc7d27f6f7394a2097e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Path</type>
      <name>srcPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>abd8fa0fe4c6d554309bd1aa576b8b65a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Path</type>
      <name>srcPkgPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a9873c33b25d6a3e668d96d1068a6dd8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final boolean</type>
      <name>useHierarchicalBin</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ac86a63029d65b24543f6ed15a4cc1423</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DEFAULT_BIN_DIR</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a6f81faca9bbf6ea82f4c9aa900a63943</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DEFAULT_MODEL_GEN_DIR</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ac5cb1fc2714e098bcaed2f4364eb3851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DEFAULT_SRC_DIR</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a8366f237b17ebf31b70104132fdc4e74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DEFAULT_SRC_GEN_DIR</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a89fcf5c51736e2119dd38727dea7467a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>getExecutableExtension</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>affa820120da34808619727af21612fd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Path</type>
      <name>getSubPkgPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aae6b918b653bb024955b75d657b7c0ff</anchor>
      <arglist>(Path srcPath)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>modelGenBasePath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ada9e29269897795f6441df88fdd42171</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>modelGenPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ae987c0a32474fbb3c9befce8ee22668d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>srcGenBasePath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>acea22dc46408617ec61f514a417ca272</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>srcGenPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a03061541a3ca5a3d3b6ede39f9c122c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::formatting2::LFFormatter</name>
    <filename>classorg_1_1lflang_1_1formatting2_1_1LFFormatter.html</filename>
    <member kind="function">
      <type>List&lt; ITextReplacement &gt;</type>
      <name>format</name>
      <anchorfile>classorg_1_1lflang_1_1formatting2_1_1LFFormatter.html</anchorfile>
      <anchor>ab53f647ceb2560cdff68c376d2922b31</anchor>
      <arglist>(FormatterRequest request)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::ActionInstance</name>
    <filename>classorg_1_1lflang_1_1generator_1_1ActionInstance.html</filename>
    <base>org.lflang.generator.TriggerInstance&lt; Action &gt;</base>
    <member kind="function">
      <type></type>
      <name>ActionInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ActionInstance.html</anchorfile>
      <anchor>af2c6562e37e416db19d4aaba524620dc</anchor>
      <arglist>(Action definition, ReactorInstance parent)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>getDependentReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>afe6d1d1335550edf242f39f976353787</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>getDependsOnReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a7d499b9439fef9389e065201524094ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeValue</type>
      <name>getMinDelay</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ActionInstance.html</anchorfile>
      <anchor>a657f6c53e0ee7b21246c4c3e6892c7ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeValue</type>
      <name>getMinSpacing</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ActionInstance.html</anchorfile>
      <anchor>a952e5008dc0fda68fa375774b249b530</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a1758955ff9f326f7b3696cab2bd34d48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getPolicy</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ActionInstance.html</anchorfile>
      <anchor>a70bb8bcfbea3916ae992dfb9bc63c01e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isPhysical</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ActionInstance.html</anchorfile>
      <anchor>a7e5b575e0c024b78b6ee44756a8b8652</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isReset</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>ac3f6ecf720f118e6a7fd6eac7d78ceb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isShutdown</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a599b1309beadd8d1df5efca63163c276</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isStartup</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>aaa731aee3ebeeb2549a9660abc413cd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final TimeValue</type>
      <name>DEFAULT_MIN_DELAY</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ActionInstance.html</anchorfile>
      <anchor>aa4f89c58893f9d18f9c29dcf07bdecb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package" static="yes">
      <type>static TriggerInstance&lt; BuiltinTriggerVariable &gt;</type>
      <name>builtinTrigger</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a70d25467ac1247a588eed4d907f0e806</anchor>
      <arglist>(BuiltinTriggerRef trigger, ReactorInstance parent)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>dependentReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a5707123aa8691ccd7c64b54f87fdd789</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>dependsOnReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a2dd11fae53d58c404f4f4ed48a6dd939</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CActionGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CActionGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateAuxiliaryStruct</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CActionGenerator.html</anchorfile>
      <anchor>a68b4bab7f129c9886ae3eaabaf036681</anchor>
      <arglist>(TypeParameterizedReactor tpr, Action action, Target target, CTypes types, CodeBuilder federatedExtension, boolean userFacing)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generateDeclarations</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CActionGenerator.html</anchorfile>
      <anchor>a7c2e744872569f130bd83faabe277524</anchor>
      <arglist>(TypeParameterizedReactor tpr, CodeBuilder body, CodeBuilder constructorCode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateInitializers</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CActionGenerator.html</anchorfile>
      <anchor>a4e1cadd72eff27095b2b96debd22c1d6</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateTokenInitializer</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CActionGenerator.html</anchorfile>
      <anchor>aa6ce83dbeeee329dd549583e24d10de9</anchor>
      <arglist>(String selfStruct, String actionName, String payloadSize)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CCmakeGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CCmakeGenerator.html</filename>
    <class kind="interface">org::lflang::generator::c::CCmakeGenerator::SetUpMainTarget</class>
    <member kind="function">
      <type></type>
      <name>CCmakeGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCmakeGenerator.html</anchorfile>
      <anchor>a1c4e8806adf4ad801fda40ce84ef3c62</anchor>
      <arglist>(FileConfig fileConfig, List&lt; String &gt; additionalSources)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CCmakeGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCmakeGenerator.html</anchorfile>
      <anchor>acc6ffb8561d906a330992f699c03fead</anchor>
      <arglist>(FileConfig fileConfig, List&lt; String &gt; additionalSources, SetUpMainTarget setUpMainTarget, String installCode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCmakeGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCmakeGenerator.html</anchorfile>
      <anchor>ae732ce65f0e997bcd021055472395ecd</anchor>
      <arglist>(SetUpMainTarget setUpMainTarget)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>MIN_CMAKE_VERSION</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCmakeGenerator.html</anchorfile>
      <anchor>a51625e1bca4a8bf2f3908746f44c9844</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>CodeBuilder</type>
      <name>generateCMakeCode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCmakeGenerator.html</anchorfile>
      <anchor>ab747bcb59f2fc9dcf5f56b1f38ced9b9</anchor>
      <arglist>(List&lt; String &gt; sources, boolean CppMode, boolean hasMain, String cMakeExtras, LFGeneratorContext context)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::generator::c::CCmakeGenerator::SetUpMainTarget</name>
    <filename>interfaceorg_1_1lflang_1_1generator_1_1c_1_1CCmakeGenerator_1_1SetUpMainTarget.html</filename>
    <member kind="function">
      <type>String</type>
      <name>getCmakeCode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1c_1_1CCmakeGenerator_1_1SetUpMainTarget.html</anchorfile>
      <anchor>a02548681d418dfd3603d24ba70904e2d</anchor>
      <arglist>(boolean hasMain, String executableName, Stream&lt; String &gt; cSources)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CCompiler</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CCompiler.html</filename>
    <member kind="function">
      <type>LFCommand</type>
      <name>buildCmakeCommand</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCompiler.html</anchorfile>
      <anchor>a79f06b50589b6646bb61e093f7f96f4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LFCommand</type>
      <name>buildWestFlashCommand</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCompiler.html</anchorfile>
      <anchor>af043c0fbaa35f489fceab2e3d30fc508</anchor>
      <arglist>(PlatformOptions options)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CCompiler</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCompiler.html</anchorfile>
      <anchor>a3fcf4aea77794624da28cc176cb69cf0</anchor>
      <arglist>(TargetConfig targetConfig, FileConfig fileConfig, MessageReporter messageReporter, boolean cppMode)</arglist>
    </member>
    <member kind="function">
      <type>LFCommand</type>
      <name>compileCmakeCommand</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCompiler.html</anchorfile>
      <anchor>a80452d960f980fbeb324777da7550d1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>runCCompiler</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCompiler.html</anchorfile>
      <anchor>a35056b49e57f88b3c6d40abfd0cfce19</anchor>
      <arglist>(GeneratorBase generator, LFGeneratorContext context)</arglist>
    </member>
    <member kind="function" protection="package" static="yes">
      <type>static String</type>
      <name>getFileExtension</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCompiler.html</anchorfile>
      <anchor>a4848368dc2c3e3cc770d7b29e6cd5456</anchor>
      <arglist>(boolean cppMode, TargetConfig targetConfig)</arglist>
    </member>
    <member kind="function" protection="package" static="yes">
      <type>static String</type>
      <name>getTargetFileName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCompiler.html</anchorfile>
      <anchor>a035405a117b5a3263ed6bf05bc25415e</anchor>
      <arglist>(String fileName, boolean cppMode, TargetConfig targetConfig)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>GeneratorCommandFactory</type>
      <name>commandFactory</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCompiler.html</anchorfile>
      <anchor>a8004665c95ba08d661bb0d3d36dcb9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>FileConfig</type>
      <name>fileConfig</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCompiler.html</anchorfile>
      <anchor>ac9a93c0ab3aaa5b873de556bb6cb8653</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>MessageReporter</type>
      <name>messageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCompiler.html</anchorfile>
      <anchor>a4e16eafaf8b36612ce2709c00e80ce0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>TargetConfig</type>
      <name>targetConfig</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCompiler.html</anchorfile>
      <anchor>aacf5dc4ea859e4a6d5b706b689994935</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CConstructorGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CConstructorGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateConstructor</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CConstructorGenerator.html</anchorfile>
      <anchor>a21f20481bf5292ca32a1ade1f00c37e9</anchor>
      <arglist>(TypeParameterizedReactor tpr, String constructorCode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateConstructorPrototype</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CConstructorGenerator.html</anchorfile>
      <anchor>a97bcd46313585d2ce74795ab3e37428d</anchor>
      <arglist>(TypeParameterizedReactor tpr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CCoreFilesUtils</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CCoreFilesUtils.html</filename>
    <member kind="function" static="yes">
      <type>static List&lt; String &gt;</type>
      <name>getCTargetHeader</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCoreFilesUtils.html</anchorfile>
      <anchor>ac6abaf52430a638a490b44558ae4a86c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>getCTargetSetHeader</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCoreFilesUtils.html</anchorfile>
      <anchor>a643753594b5acc7495be277955591fd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>getCTargetSetUndefHeader</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCoreFilesUtils.html</anchorfile>
      <anchor>af25a3d3b44ececa31d53be4482e6d7d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; String &gt;</type>
      <name>getCTargetSrc</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CCoreFilesUtils.html</anchorfile>
      <anchor>add652b4cf8d7b2f2e2c83fc680224546</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CDelayBodyGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CDelayBodyGenerator.html</filename>
    <base>org.lflang.generator.DelayBodyGenerator</base>
    <member kind="function">
      <type></type>
      <name>CDelayBodyGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CDelayBodyGenerator.html</anchorfile>
      <anchor>a93e881e7c2165b2278105a15ab262214</anchor>
      <arglist>(CTypes types)</arglist>
    </member>
    <member kind="function">
      <type>default void</type>
      <name>finalizeReactions</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1DelayBodyGenerator.html</anchorfile>
      <anchor>a4b7e9185821eda43639ac6f1a581e27e</anchor>
      <arglist>(Reaction delayReaction, Reaction forwardReaction)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>generateAfterDelaysWithVariableWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CDelayBodyGenerator.html</anchorfile>
      <anchor>a5730508e7f0d57bd702122afadb4594e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateDelayBody</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CDelayBodyGenerator.html</anchorfile>
      <anchor>a37c072ea655dffe1483e37115d185396</anchor>
      <arglist>(Action action, VarRef port)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateDelayGeneric</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CDelayBodyGenerator.html</anchorfile>
      <anchor>a9c3a1fb7eeaa12d7242e1cd84b62f041</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateForwardBody</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CDelayBodyGenerator.html</anchorfile>
      <anchor>a6ed3e949bb4ddf297b36e49351b52cc4</anchor>
      <arglist>(Action action, VarRef port)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>GEN_DELAY_CLASS_NAME</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1DelayBodyGenerator.html</anchorfile>
      <anchor>a53b472bb435691a61c44c039ebaa9d47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CTypes</type>
      <name>types</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CDelayBodyGenerator.html</anchorfile>
      <anchor>a1102d45a275f4fc11636ddd5339c6d2d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CEnclavedReactorTransformation</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclavedReactorTransformation.html</filename>
    <base>org.lflang.ast.AstTransformation</base>
    <member kind="function">
      <type>void</type>
      <name>applyTransformation</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclavedReactorTransformation.html</anchorfile>
      <anchor>ab777adeb6b5cbd289e7b671b44d8161c</anchor>
      <arglist>(List&lt; Reactor &gt; reactors)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CEnclavedReactorTransformation</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclavedReactorTransformation.html</anchorfile>
      <anchor>a8e161eeae52db318f8f0c2a8c341c864</anchor>
      <arglist>(Resource mainResource, CTypes types)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnvParams</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclavedReactorTransformation.html</anchorfile>
      <anchor>ae7effaa1c9228a0afbf7d019106da613</anchor>
      <arglist>(ReactorInstance conn, ReactorInstance source, ReactorInstance dest)</arglist>
    </member>
    <member kind="variable">
      <type>final ConnectionGraph&lt; Instantiation, EnclaveConnection &gt;</type>
      <name>connGraph</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclavedReactorTransformation.html</anchorfile>
      <anchor>a67ce75216f7a13a5e4a60db5c5b6ecc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Map&lt; Instantiation, Pair&lt; Instantiation, Instantiation &gt; &gt;</type>
      <name>enclavedConnections</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclavedReactorTransformation.html</anchorfile>
      <anchor>a7007694a695e5da48fcb784ef2520857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Instantiation</type>
      <name>PARENT</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclavedReactorTransformation.html</anchorfile>
      <anchor>afce58996d8a4aa1c1c16b2567804a252</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static String</type>
      <name>delayParamName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclavedReactorTransformation.html</anchorfile>
      <anchor>a13c0e5f2e215efa468d44360fc5b1f34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static String</type>
      <name>destEnvParamName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclavedReactorTransformation.html</anchorfile>
      <anchor>af8d6cdfcbe199ae0fef5e4e684593133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static String</type>
      <name>enclaveConnectionLibraryPath</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclavedReactorTransformation.html</anchorfile>
      <anchor>a956ea3311a887d3994f112243fafb0b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final LfFactory</type>
      <name>factory</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclavedReactorTransformation.html</anchorfile>
      <anchor>a64bc376390b072364fbe73c195cdcbda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static String</type>
      <name>hasAfterDelayParamName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclavedReactorTransformation.html</anchorfile>
      <anchor>aa05a0136b1b71d096e840861a5c3cdad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static String</type>
      <name>isPhysicalParamName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclavedReactorTransformation.html</anchorfile>
      <anchor>a332044b3ab7b80dc60da2b42ee214f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static String</type>
      <name>sourceEnvParamName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclavedReactorTransformation.html</anchorfile>
      <anchor>aaa2f02ce8c83b955a2ec403f7bf6eb6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CTypes</type>
      <name>types</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclavedReactorTransformation.html</anchorfile>
      <anchor>a05e8c91407e8e14303d7a27c545648c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Reactor</type>
      <name>connectionReactor</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclavedReactorTransformation.html</anchorfile>
      <anchor>af24a5057a94242e14fd60894765d8835</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CEnclaveGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveGenerator.html</filename>
    <member kind="function">
      <type></type>
      <name>CEnclaveGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveGenerator.html</anchorfile>
      <anchor>a2a08aa87bf255ceef4af26bc74386231</anchor>
      <arglist>(ReactorInstance main, CEnclavedReactorTransformation ast, String lfModuleName, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateDeclarations</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveGenerator.html</anchorfile>
      <anchor>a3ffe542eae6d6a12f3a5255d6c5ed8e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateDefinitions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveGenerator.html</anchorfile>
      <anchor>a3aef5f6c67296a6dfd25e8bfb7e60ce5</anchor>
      <arglist>(TargetConfig targetConfig)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; CEnclaveInstance &gt;</type>
      <name>getEnclaves</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveGenerator.html</anchorfile>
      <anchor>a7918c5607945c99d368891163536a1ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numEnclaves</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveGenerator.html</anchorfile>
      <anchor>a2761173865e9a4c46db942a64b1adf15</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CEnclaveGraph</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveGraph.html</filename>
    <member kind="function">
      <type>void</type>
      <name>build</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveGraph.html</anchorfile>
      <anchor>afa9a59dac911b9a106014305ff588a42</anchor>
      <arglist>(ReactorInstance main, Set&lt; CEnclaveInstance &gt; enclaves)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>buildCycleString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveGraph.html</anchorfile>
      <anchor>a6e4332979d199fb792576718cdca9ee7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CEnclaveGraph</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveGraph.html</anchorfile>
      <anchor>a37f3c725a832b95dba81ce98760ed62a</anchor>
      <arglist>(CEnclavedReactorTransformation ast)</arglist>
    </member>
    <member kind="function">
      <type>record</type>
      <name>EnclaveConnection</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveGraph.html</anchorfile>
      <anchor>aacbe5642dde39d43f6f2d35ae0d30d8b</anchor>
      <arglist>(TimeValue delay, boolean hasAfterDelay, boolean isPhysical)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasZeroDelayCycle</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveGraph.html</anchorfile>
      <anchor>ae9756c589edeb2818a4f0c49b3789956</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>ConnectionGraph&lt; CEnclaveInstance, EnclaveConnection &gt;</type>
      <name>graph</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveGraph.html</anchorfile>
      <anchor>a4fd5ef0bbeaaaa64931e2f5e11806cbd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CEnclaveInstance</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveInstance.html</filename>
    <member kind="function">
      <type></type>
      <name>CEnclaveInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveInstance.html</anchorfile>
      <anchor>ac35f0fb8ffd03f3fb9657f69867c6580</anchor>
      <arglist>(ReactorInstance inst, int numWorkers)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getId</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveInstance.html</anchorfile>
      <anchor>a64ee6921500b0aea0ac2b1774df77f32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>getReactorInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveInstance.html</anchorfile>
      <anchor>aa4a5169621b210098e58f7ecf434c9d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numIsPresentFields</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveInstance.html</anchorfile>
      <anchor>a739b5f5e8a7c9f816b69550f0097ac3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numModalReactors</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveInstance.html</anchorfile>
      <anchor>acbcf48833e683632ad6fda3178cd6d77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numModalResetStates</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveInstance.html</anchorfile>
      <anchor>a9f29ed846f4df5930850f29d012b47cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numResetReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveInstance.html</anchorfile>
      <anchor>aa79fa220c07d6a98b5d524c97b385eb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numShutdownReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveInstance.html</anchorfile>
      <anchor>a490f6c7d85bc385a0481e0c9bec4ded6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numStartupReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveInstance.html</anchorfile>
      <anchor>a9f93beef795b914712e337e991d330e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numTimerTriggers</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveInstance.html</anchorfile>
      <anchor>ab47683d837d26adc4836e74ce529bae7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numWatchdogs</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveInstance.html</anchorfile>
      <anchor>a864449014933ef5d6ee4ffc7071f0853</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numWorkers</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveInstance.html</anchorfile>
      <anchor>a137a555f4d781fe251f2abf875af36f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>traceFileName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CEnclaveInstance.html</anchorfile>
      <anchor>a0b6a9d018c99d5b63526a48fcf80a167</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CFileConfig</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CFileConfig.html</filename>
    <base>org.lflang.FileConfig</base>
    <member kind="function">
      <type></type>
      <name>CFileConfig</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CFileConfig.html</anchorfile>
      <anchor>a16fe3d13a7bf52d82d4ca7886a402d35</anchor>
      <arglist>(Resource resource, Path srcGenBasePath, boolean useHierarchicalBin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doClean</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a2f3cedf4124e5cc9292abc749a636c50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LFCommand</type>
      <name>getCommand</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a8b0ab00d8e9aeb0526396978b46cdbff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getDirectory</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a0805de9a6fdf878db785f32bf569e9e7</anchor>
      <arglist>(Resource r)</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getExecutable</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a21438a70c07ade97df6c4eb040c78df5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getIncludePath</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CFileConfig.html</anchorfile>
      <anchor>a9dbbc9f86fc55126f175bc5dc8e45812</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getModelGenBasePath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aab302b75642dbc55010558897d90d974</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getModelGenPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aaadd154f0fdb26cd627f67f3cbbe8112</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getOutPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aadbddca3925f8b7ca7b77123a25dc275</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getRuntimeIncludePath</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CFileConfig.html</anchorfile>
      <anchor>af533499ff32f54ee97bbdae2d96b976d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getSrcGenBasePath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ac771a84f3498f17e042f76172757d941</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getSrcGenPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ae26b50321c8ce7d6f82079b0efbb25fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getSrcGenPkgPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a13a4ed53a8ac5a2dd38fd8585a7fffff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Path</type>
      <name>findPackageRoot</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a1f4440a73ce696b26daf6f8837981a00</anchor>
      <arglist>(final Path input, final Consumer&lt; String &gt; printWarning)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Resource</type>
      <name>getResource</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aa607ba3c51d2917175d4e50d713d7273</anchor>
      <arglist>(File file, Provider&lt; ResourceSet &gt; resourceSetProvider)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Resource</type>
      <name>getResource</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a90959c68962e8603088ffd34739ecdbd</anchor>
      <arglist>(Path path, XtextResourceSet xtextResourceSet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Path</type>
      <name>getSrcGenRoot</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a7fa5856208463eb1d79a283ac2a09d63</anchor>
      <arglist>(IFileSystemAccess2 fsa)</arglist>
    </member>
    <member kind="variable">
      <type>final Path</type>
      <name>binPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aa9e8742b0a791cc329eb06368a027f92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final IResource</type>
      <name>iResource</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a819b6b0f2489fca2b79521f8d2dbb850</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a826734253724b14eab96b52238ce03f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Resource</type>
      <name>resource</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a6ae8ffe20be19509655e2f39e8a0dae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Path</type>
      <name>srcFile</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a99e7606f0d8f9dc7d27f6f7394a2097e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Path</type>
      <name>srcPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>abd8fa0fe4c6d554309bd1aa576b8b65a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Path</type>
      <name>srcPkgPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a9873c33b25d6a3e668d96d1068a6dd8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final boolean</type>
      <name>useHierarchicalBin</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ac86a63029d65b24543f6ed15a4cc1423</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DEFAULT_BIN_DIR</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a6f81faca9bbf6ea82f4c9aa900a63943</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DEFAULT_MODEL_GEN_DIR</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ac5cb1fc2714e098bcaed2f4364eb3851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DEFAULT_SRC_DIR</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a8366f237b17ebf31b70104132fdc4e74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DEFAULT_SRC_GEN_DIR</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a89fcf5c51736e2119dd38727dea7467a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>getExecutableExtension</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>affa820120da34808619727af21612fd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Path</type>
      <name>getSubPkgPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aae6b918b653bb024955b75d657b7c0ff</anchor>
      <arglist>(Path srcPath)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>modelGenBasePath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ada9e29269897795f6441df88fdd42171</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>modelGenPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ae987c0a32474fbb3c9befce8ee22668d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>srcGenBasePath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>acea22dc46408617ec61f514a417ca272</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>srcGenPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a03061541a3ca5a3d3b6ede39f9c122c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CMainFunctionGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CMainFunctionGenerator.html</filename>
    <member kind="function">
      <type></type>
      <name>CMainFunctionGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CMainFunctionGenerator.html</anchorfile>
      <anchor>a553de8e07df6cea80d04908297bda075</anchor>
      <arglist>(TargetConfig targetConfig)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateCode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CMainFunctionGenerator.html</anchorfile>
      <anchor>a43c99f701929e56b199b9a4ac22bdc37</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CMethodGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CMethodGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generateMacrosForMethods</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CMethodGenerator.html</anchorfile>
      <anchor>ad3ce935965dd0964a6a1af5c21a267dc</anchor>
      <arglist>(TypeParameterizedReactor tpr, CodeBuilder body)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generateMacroUndefsForMethods</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CMethodGenerator.html</anchorfile>
      <anchor>aeaeb8598f8eddd35a4f30ff480242802</anchor>
      <arglist>(Reactor reactor, CodeBuilder body)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateMethod</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CMethodGenerator.html</anchorfile>
      <anchor>a7cd33da3c09687b1723b326cb546fa46</anchor>
      <arglist>(Method method, TypeParameterizedReactor tpr, CTypes types, boolean suppressLineDirectives)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generateMethods</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CMethodGenerator.html</anchorfile>
      <anchor>ae400095a790ec699fe51e5398d17e698</anchor>
      <arglist>(TypeParameterizedReactor tpr, CodeBuilder code, CTypes types, boolean suppressLineDirectives)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateMethodSignature</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CMethodGenerator.html</anchorfile>
      <anchor>abece0d09330b19bc30811481406c46a8</anchor>
      <arglist>(Method method, TypeParameterizedReactor tpr, CTypes types)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>signatures</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CMethodGenerator.html</anchorfile>
      <anchor>a5da09ceb7ad480d13e42fd2a4802726e</anchor>
      <arglist>(TypeParameterizedReactor tpr, CodeBuilder body, CTypes types)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CMixedRadixGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CMixedRadixGenerator.html</filename>
    <member kind="variable" static="yes">
      <type>static String</type>
      <name>db</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CMixedRadixGenerator.html</anchorfile>
      <anchor>a7a8f0212c395d369894832478134e7cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static String</type>
      <name>dc</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CMixedRadixGenerator.html</anchorfile>
      <anchor>ac18d8ea9eb19989b32ccfb50b53c6a86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static String</type>
      <name>dr</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CMixedRadixGenerator.html</anchorfile>
      <anchor>a30b4ebb4d7c3dd516996c4114edb57ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static String</type>
      <name>sb</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CMixedRadixGenerator.html</anchorfile>
      <anchor>a63583dbade3fa516be02a591cf0f0470</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static String</type>
      <name>sc</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CMixedRadixGenerator.html</anchorfile>
      <anchor>af576c4e1f4bc86a4072bae8f0bdc4c9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static String</type>
      <name>sr</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CMixedRadixGenerator.html</anchorfile>
      <anchor>a03d51f396ce9790c592c1fa1cb29d0c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CModesGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CModesGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generateDeclarations</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CModesGenerator.html</anchorfile>
      <anchor>aebf71e49fa47146a352f6dbb01405b35</anchor>
      <arglist>(Reactor reactor, CodeBuilder body, CodeBuilder constructorCode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generateModeStructure</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CModesGenerator.html</anchorfile>
      <anchor>a3dced53bf4859b210ac6c0ff15e2abf3</anchor>
      <arglist>(ReactorInstance instance, CodeBuilder code)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateStateResetStructure</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CModesGenerator.html</anchorfile>
      <anchor>a9bb8a4c5873ec4b354819ccc9f09aba2</anchor>
      <arglist>(ReactorInstance instance, String modeRef, String selfRef, String varName, String source, String type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CParameterGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CParameterGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateDeclarations</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CParameterGenerator.html</anchorfile>
      <anchor>ab05ea686e5ce000164a7a2adf8409a4e</anchor>
      <arglist>(TypeParameterizedReactor reactor, CTypes types, boolean suppressLineDirectives)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>getInitializer</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CParameterGenerator.html</anchorfile>
      <anchor>adfdb4fb0936433c44070ba63e44eb572</anchor>
      <arglist>(ParameterInstance p)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CPortGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CPortGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateAuxiliaryStruct</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CPortGenerator.html</anchorfile>
      <anchor>a65ef7155603d6c3d25565da4767bae62</anchor>
      <arglist>(TypeParameterizedReactor tpr, Port port, Target target, MessageReporter messageReporter, CTypes types, CodeBuilder federatedExtension, boolean userFacing, ReactorDecl decl)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generateDeclarations</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CPortGenerator.html</anchorfile>
      <anchor>afb98df8d2d3a589a197b65218b01bfb3</anchor>
      <arglist>(TypeParameterizedReactor tpr, ReactorDecl decl, CodeBuilder body, CodeBuilder constructorCode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>initializeInputMultiport</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CPortGenerator.html</anchorfile>
      <anchor>a3850cde75d5eebd032bcfc0451ebc1aa</anchor>
      <arglist>(PortInstance input, String reactorSelfStruct)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>initializeOutputMultiport</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CPortGenerator.html</anchorfile>
      <anchor>ac870d812fd17e841902edc799e363041</anchor>
      <arglist>(PortInstance output, String reactorSelfStruct, CTypes types)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>localPortName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CPortGenerator.html</anchorfile>
      <anchor>a042d542e7f9bc5fdcc52f77ae80a58a1</anchor>
      <arglist>(TypeParameterizedReactor tpr, ReactorDecl decl, String portName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CPreambleGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CPreambleGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>arduinoBased</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CPreambleGenerator.html</anchorfile>
      <anchor>a224249dda7f9fb74555d44247f59c02d</anchor>
      <arglist>(TargetConfig targetConfig)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateDefineDirectives</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CPreambleGenerator.html</anchorfile>
      <anchor>ab72b584a537f1a517ec511f44d59f5b0</anchor>
      <arglist>(TargetConfig targetConfig, Path srcGenPath)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateIncludeStatements</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CPreambleGenerator.html</anchorfile>
      <anchor>a52237d44424873c9eedd78c88f7c1b67</anchor>
      <arglist>(TargetConfig targetConfig, boolean cppMode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CReactionGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CReactionGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generateBuiltinTriggeredReactionsArray</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactionGenerator.html</anchorfile>
      <anchor>aa3a8868e3d2b9a1deebc0ad8dfc709a2</anchor>
      <arglist>(Set&lt; Integer &gt; reactions, String name, CodeBuilder body, CodeBuilder constructorCode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateDeadlineFunctionHeader</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactionGenerator.html</anchorfile>
      <anchor>ad3e77975316393134a6ff825a89bd22b</anchor>
      <arglist>(TypeParameterizedReactor tpr, int reactionIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateDeadlineFunctionName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactionGenerator.html</anchorfile>
      <anchor>a737615e17717b217836b80e0e5a412da</anchor>
      <arglist>(TypeParameterizedReactor tpr, int reactionIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateDelayBody</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactionGenerator.html</anchorfile>
      <anchor>a66d467067754b38e46fc4fed5bc9ec6b</anchor>
      <arglist>(String ref, String actionName, boolean isTokenType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateForwardBody</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactionGenerator.html</anchorfile>
      <anchor>a7d11ce377935221f48c1f0cd5401a0bd</anchor>
      <arglist>(String outputName, String targetType, String actionName, boolean isTokenType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateFunction</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactionGenerator.html</anchorfile>
      <anchor>a3441783cbc5e9429ce1636aa615fae07</anchor>
      <arglist>(String header, String init, Code code, boolean suppressLineDirectives)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateFunctionHeader</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactionGenerator.html</anchorfile>
      <anchor>adffe6058e7ea7ac1162b37b96ca7ca02</anchor>
      <arglist>(String functionName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateInitializationForReaction</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactionGenerator.html</anchorfile>
      <anchor>acd3571f07be3acdeb549031e3f2dda4d</anchor>
      <arglist>(String body, Reaction reaction, TypeParameterizedReactor tpr, int reactionIndex, CTypes types, MessageReporter messageReporter, Instantiation mainDef, boolean requiresTypes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateOutputVariablesInReaction</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactionGenerator.html</anchorfile>
      <anchor>afabeecbad9c5d9f2291f3e352f65734d</anchor>
      <arglist>(VarRef effect, TypeParameterizedReactor tpr, MessageReporter messageReporter, boolean requiresTypes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateReaction</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactionGenerator.html</anchorfile>
      <anchor>a97c95fc05a950ae56adc5458889f03ce</anchor>
      <arglist>(Reaction reaction, TypeParameterizedReactor tpr, int reactionIndex, Instantiation mainDef, MessageReporter messageReporter, CTypes types, TargetConfig targetConfig, boolean requiresType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generateReactionAndTriggerStructs</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactionGenerator.html</anchorfile>
      <anchor>ae642f92c28dd06791955ba955ec2f321</anchor>
      <arglist>(CodeBuilder body, TypeParameterizedReactor tpr, CodeBuilder constructorCode, CTypes types)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateReactionFunctionHeader</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactionGenerator.html</anchorfile>
      <anchor>abe0238ebe9171ec13d973370294278c8</anchor>
      <arglist>(TypeParameterizedReactor tpr, int reactionIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateReactionFunctionName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactionGenerator.html</anchorfile>
      <anchor>a5f53cab0e4f658098354cbd31a3c4c24</anchor>
      <arglist>(TypeParameterizedReactor tpr, int reactionIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateStpFunctionHeader</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactionGenerator.html</anchorfile>
      <anchor>a6dc5e98ae9f14b34bc9022cc00d7312f</anchor>
      <arglist>(TypeParameterizedReactor tpr, int reactionIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateStpFunctionName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactionGenerator.html</anchorfile>
      <anchor>a68948066d3a1fc473ff73a3993bd2709</anchor>
      <arglist>(TypeParameterizedReactor tpr, int reactionIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateWatchdogVariablesInReaction</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactionGenerator.html</anchorfile>
      <anchor>a58c44bde6d21106c598c34ec39112a0f</anchor>
      <arglist>(VarRef effect)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>maxContainedReactorBankWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactionGenerator.html</anchorfile>
      <anchor>adbbb527fe3d7fa30d815470c2f372456</anchor>
      <arglist>(Instantiation containedReactor, LinkedList&lt; Instantiation &gt; breadcrumbs, int max, Instantiation mainDef)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static String</type>
      <name>DISABLE_REACTION_INITIALIZATION_MARKER</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactionGenerator.html</anchorfile>
      <anchor>ac16703ae588508b6132d741d07eaae9a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CReactorHeaderFileGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CReactorHeaderFileGenerator.html</filename>
    <class kind="interface">org::lflang::generator::c::CReactorHeaderFileGenerator::GenerateAuxiliaryStructs</class>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>doGenerate</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactorHeaderFileGenerator.html</anchorfile>
      <anchor>ad8c6b876391d4f2cc950bb8dff295d5c</anchor>
      <arglist>(CTypes types, TypeParameterizedReactor tpr, CFileConfig fileConfig, GenerateAuxiliaryStructs generator, Function&lt; Reactor, String &gt; topLevelPreamble)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>nonInlineInitialization</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactorHeaderFileGenerator.html</anchorfile>
      <anchor>aee9d85697c88e0ae0dc1c63963780baf</anchor>
      <arglist>(Reaction r, TypeParameterizedReactor reactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Path</type>
      <name>outputPath</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactorHeaderFileGenerator.html</anchorfile>
      <anchor>a8f8f1bccfc6a7ff67906a2c87a8ed7ab</anchor>
      <arglist>(TypeParameterizedReactor tpr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>reactionArguments</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CReactorHeaderFileGenerator.html</anchorfile>
      <anchor>a56fc4faa5bb180cb0ea64b65bfb0e2c6</anchor>
      <arglist>(Reaction r, TypeParameterizedReactor reactor)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::generator::c::CReactorHeaderFileGenerator::GenerateAuxiliaryStructs</name>
    <filename>interfaceorg_1_1lflang_1_1generator_1_1c_1_1CReactorHeaderFileGenerator_1_1GenerateAuxiliaryStructs.html</filename>
    <member kind="function">
      <type>void</type>
      <name>generate</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1c_1_1CReactorHeaderFileGenerator_1_1GenerateAuxiliaryStructs.html</anchorfile>
      <anchor>a5bc6a15b504e3a45bd8cc4cdbd70e112</anchor>
      <arglist>(CodeBuilder b, TypeParameterizedReactor r, boolean userFacing)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CStateGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CStateGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateDeclarations</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CStateGenerator.html</anchorfile>
      <anchor>aefb9f5ea04891e0ed3a4daf2245d9032</anchor>
      <arglist>(TypeParameterizedReactor reactor, CTypes types, boolean suppressLineDirectives)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateInitializer</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CStateGenerator.html</anchorfile>
      <anchor>a1d71186133f789a26f19cec8cd0927cc</anchor>
      <arglist>(ReactorInstance instance, String selfRef, StateVar stateVar, ModeInstance mode, CTypes types)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CTimerGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CTimerGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateInitializer</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTimerGenerator.html</anchorfile>
      <anchor>a3e9751d6f0f1e4ed1ff1c177146979d4</anchor>
      <arglist>(TimerInstance timer, CEnclaveInstance enc)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CTracingGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CTracingGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateTraceTableEntries</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTracingGenerator.html</anchorfile>
      <anchor>ab2c1940a94163fca41e12f61dce2262f</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CTriggerObjectsGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CTriggerObjectsGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateInitializeTriggerObjects</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTriggerObjectsGenerator.html</anchorfile>
      <anchor>ab9e443a7f193541a160949cc434336d2</anchor>
      <arglist>(ReactorInstance main, Set&lt; CEnclaveInstance &gt; enclaves, TargetConfig targetConfig, CodeBuilder initializeTriggerObjects, CodeBuilder startTimeStep, CTypes types, String lfModuleName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateSchedulerInitializerEnclave</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTriggerObjectsGenerator.html</anchorfile>
      <anchor>aaa47aeabbc409c08ef95ae1667cd5301</anchor>
      <arglist>(CEnclaveInstance enclave, ReactionInstanceGraph reactionInstanceGraph)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateSchedulerInitializerMain</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTriggerObjectsGenerator.html</anchorfile>
      <anchor>a3471fd9a0073af165c671c04ff149c0f</anchor>
      <arglist>(ReactorInstance main, Set&lt; CEnclaveInstance &gt; enclaves, TargetConfig targetConfig)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CTypes</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</filename>
    <base>org.lflang.generator.TargetTypes</base>
    <member kind="function">
      <type></type>
      <name>CTypes</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>af21556423f5a8282a2f0f9922d554add</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>default String</type>
      <name>escapeIdentifier</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a6fb005ca8e89ff21310eb1f2869a7c18</anchor>
      <arglist>(String ident)</arglist>
    </member>
    <member kind="function">
      <type>default String</type>
      <name>getTargetBracedListExpr</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a2babf7f7832b3075287836b0caceda66</anchor>
      <arglist>(BracedListExpression expr, InferredType typeOrNull)</arglist>
    </member>
    <member kind="function">
      <type>default String</type>
      <name>getTargetBracketListExpr</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a20ebd97caa978757eb73d61fd4912861</anchor>
      <arglist>(BracketListExpression expr, InferredType typeOrNull)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetParamRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>ab6d383c4be52327eaabac9acf74efac4</anchor>
      <arglist>(ParameterReference expr, InferredType typeOrNull)</arglist>
    </member>
    <member kind="function">
      <type>default String</type>
      <name>getTargetParenthesistListExpr</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a16a56b5bd119009e85c10b8e9ea771d4</anchor>
      <arglist>(ParenthesisListExpression expr, InferredType typeOrNull)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetTagType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>aa10804013137480e39e1a50c2fc8909a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetTimeExpr</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>ab5dc84664be8d694b1a8b53aafc59415</anchor>
      <arglist>(TimeValue time)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetTimeType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>aa67327341a195dd28df062b7eef12e26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>a1910224fcc7a2bcd9ec7f26d2bbdecbb</anchor>
      <arglist>(InferredType type)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetUndefinedType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>a2df2421251cc9c22c00486da2faad559</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getVariableDeclaration</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>a607ced37a52022a044f24e9112913f24</anchor>
      <arglist>(TypeParameterizedReactor tpr, InferredType type, String variableName, boolean initializer)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>supportsGenerics</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>ad02eb0a542999dfd866943198e55aedc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>cMacroName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>a6c38a28203e54cbbb1285920b6540008</anchor>
      <arglist>(TimeUnit unit)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CTypes</type>
      <name>generateParametersIn</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>a056df53f93d1393ddcc4f23290635d75</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CTypes</type>
      <name>getInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>aaea04a453c5b7119c2a1fe14f159728a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static final Pattern</type>
      <name>arrayPattern</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>a09a71fba301c77cb1499629637160329</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CUtil</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</filename>
    <class kind="interface">org::lflang::generator::c::CUtil::ReportCommandErrors</class>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>actionRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a065cb9e041aba47479a9e1e1bb7b3c58</anchor>
      <arglist>(ActionInstance instance, String runtimeIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static HashSet&lt; String &gt;</type>
      <name>allIncludes</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a5eb3ffaab8a7fc3ad215afcdb0f8df32</anchor>
      <arglist>(TypeParameterizedReactor tpr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>bankIndex</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a9ae7b346ce6f8bc1f01b3b6ad90b52c8</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>bankIndexName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a4b9cee042cd11af59a76d0893403d21b</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>channelIndex</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a448b9b3a0cb910e5550c397349790977</anchor>
      <arglist>(PortInstance port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>channelIndexName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a088acc670aa314175c4f70d1ae24054b</anchor>
      <arglist>(PortInstance port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>getName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a656705d258bbcbce6e4ce6ba903ee44b</anchor>
      <arglist>(TypeParameterizedReactor reactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>internalIncludeGuard</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a0f4dc466e59743dbd98e1a715af3f62d</anchor>
      <arglist>(TypeParameterizedReactor tpr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>abe9ae5ca2df7cfca62039c8e61a1a786</anchor>
      <arglist>(PortInstance port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>ab7d0ab19e38f898d81464a38e388fbfd</anchor>
      <arglist>(PortInstance port, boolean isNested, boolean includeChannelIndex, String runtimeIndex, String bankIndex, String channelIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a28ae8f530e7caadc5a7c1bcc5d881c10</anchor>
      <arglist>(PortInstance port, String runtimeIndex, String bankIndex, String channelIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRefInReaction</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a90fb0319be4420356a6f95888afa202a</anchor>
      <arglist>(VarRef reference, Integer bankIndex, Integer multiportIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRefName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>af46af088997d2c75ef491c7db1776325</anchor>
      <arglist>(PortInstance port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRefName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>aeb4bf3311ced7d34c25c7c7e2d2c7b26</anchor>
      <arglist>(PortInstance port, String runtimeIndex, String bankIndex, String channelIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRefNested</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a766dab5e92fd570b519343a0311603e0</anchor>
      <arglist>(PortInstance port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRefNested</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a667b0c49fd4977f33c365b1cf92267ba</anchor>
      <arglist>(PortInstance port, String runtimeIndex, String bankIndex, String channelIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRefNestedName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a06b68ba4213eedb62515f726f5ad2bd6</anchor>
      <arglist>(PortInstance port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRefNestedName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a8066516d8e5ead97ca28c17ef7fbf0ae</anchor>
      <arglist>(PortInstance port, String runtimeIndex, String bankIndex, String channelIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>reactionRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>aaf78d998ddab33c0ff0a8fc00d15b661</anchor>
      <arglist>(ReactionInstance reaction)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>reactionRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a87efe9f85ca2ef8ed7a0f1960d158e2f</anchor>
      <arglist>(ReactionInstance reaction, String runtimeIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>reactorRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>ab52c48cf9266848144ac05a6e91589bd</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>reactorRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>ac08c69f9e1cbc7f04737f5ce6300af1e</anchor>
      <arglist>(ReactorInstance instance, String runtimeIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>reactorRefName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a65cb3cc230a1153f54de3ff7e2f2e585</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>reactorRefNested</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a86f92884830a18449631fe32ef5e3b26</anchor>
      <arglist>(ReactorInstance reactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>reactorRefNested</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a62db15239be477b43220bd744f11934e</anchor>
      <arglist>(ReactorInstance reactor, String runtimeIndex, String bankIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>runtimeIndex</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a0ebae86cb14e67125bf84d59d23f2d04</anchor>
      <arglist>(ReactorInstance reactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>selfType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a9cc4c2e3a78cbc7d7c38a28ab0681c15</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>selfType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>adacc82b6441afef6e37346c163f25933</anchor>
      <arglist>(TypeParameterizedReactor reactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>triggerRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a648adfa8eb3def1624d5946fb35393b8</anchor>
      <arglist>(TriggerInstance&lt;? extends Variable &gt; instance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>triggerRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a2622e722a9f97a05e69904424d39fd3d</anchor>
      <arglist>(TriggerInstance&lt;? extends Variable &gt; instance, String runtimeIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>triggerRefNested</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a7ea8350353c98634a8caa055397e1ea5</anchor>
      <arglist>(PortInstance port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>triggerRefNested</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a7686acbc8c91d7f071de00f024bfe9e2</anchor>
      <arglist>(PortInstance port, String runtimeIndex, String bankIndex)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>ENVIRONMENT_VARIABLE_NAME</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a1c415a35381593c95ca569e739ccb4af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>NUM_ENVIRONMENT_VARIABLE_NAME</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>abfab338b6c73cb900103f106b3241211</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>RTI_BIN_SUFFIX</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a6835ca17261ba4c73ec7f3f4cfe101ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>RTI_DISTRIBUTION_SCRIPT_SUFFIX</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a03586154fdbba83d92a99c2464a84da7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::generator::c::CUtil::ReportCommandErrors</name>
    <filename>interfaceorg_1_1lflang_1_1generator_1_1c_1_1CUtil_1_1ReportCommandErrors.html</filename>
    <member kind="function">
      <type>void</type>
      <name>report</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1c_1_1CUtil_1_1ReportCommandErrors.html</anchorfile>
      <anchor>a5ec0cce0770bc1f3a24ed4e7cf75d4fa</anchor>
      <arglist>(String errors)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::CWatchdogGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1CWatchdogGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>hasWatchdogs</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CWatchdogGenerator.html</anchorfile>
      <anchor>a49bdace7d86edde6ddba984ff61823c7</anchor>
      <arglist>(Reactor reactor)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>generateInitializeWatchdogs</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CWatchdogGenerator.html</anchorfile>
      <anchor>a573ede93fbdd7db1caac798fb9c15cf3</anchor>
      <arglist>(CodeBuilder code, ReactorInstance instance)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>generateWatchdogs</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CWatchdogGenerator.html</anchorfile>
      <anchor>a01478c32ff5b7e1a20365b804f3ef3e6</anchor>
      <arglist>(CodeBuilder src, CodeBuilder header, TypeParameterizedReactor tpr, boolean suppressLineDirectives, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>generateWatchdogStruct</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CWatchdogGenerator.html</anchorfile>
      <anchor>ae03df97a5170efc1d7da37f66e1ec528</anchor>
      <arglist>(CodeBuilder body, TypeParameterizedReactor tpr, CodeBuilder constructorCode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::InteractingContainedReactors</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1InteractingContainedReactors.html</filename>
    <member kind="function">
      <type>Set&lt; Instantiation &gt;</type>
      <name>containedReactors</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1InteractingContainedReactors.html</anchorfile>
      <anchor>adbe016f48d44272b78ad237ef5dc2901</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InteractingContainedReactors</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1InteractingContainedReactors.html</anchorfile>
      <anchor>a4327be2e163adca88a75efc0fa04c893</anchor>
      <arglist>(Reactor reactor)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; Port &gt;</type>
      <name>portsOfInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1InteractingContainedReactors.html</anchorfile>
      <anchor>ac7b72978ed857446c1837a87cd632ece</anchor>
      <arglist>(Instantiation containedReactor)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; Integer &gt;</type>
      <name>reactionsTriggered</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1InteractingContainedReactors.html</anchorfile>
      <anchor>a0b0c6a2b07d70c4547ceab69f3682803</anchor>
      <arglist>(Instantiation containedReactor, Port port)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LinkedHashMap&lt; Instantiation, LinkedHashMap&lt; Port, LinkedList&lt; Integer &gt; &gt; &gt;</type>
      <name>portsByContainedReactor</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1InteractingContainedReactors.html</anchorfile>
      <anchor>a51a87063e7fa857e9f90dd2fd93e388d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::c::TypeParameterizedReactor</name>
    <filename>classorg_1_1lflang_1_1generator_1_1c_1_1TypeParameterizedReactor.html</filename>
    <member kind="function">
      <type>String</type>
      <name>argsString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1TypeParameterizedReactor.html</anchorfile>
      <anchor>af1bff40deb8e483b3ade4bd95bba0b2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doDefines</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1TypeParameterizedReactor.html</anchorfile>
      <anchor>a0c30156086c4bfb9f926388196817eed</anchor>
      <arglist>(CodeBuilder b)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1TypeParameterizedReactor.html</anchorfile>
      <anchor>a72fae66ec63750ad7251ef0db41e472a</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1TypeParameterizedReactor.html</anchorfile>
      <anchor>a677c7d086f43040ecfc0cf34e1a23af3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1TypeParameterizedReactor.html</anchorfile>
      <anchor>aa6be0da44e5490df0d296b35f96b2964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Reactor</type>
      <name>reactor</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1TypeParameterizedReactor.html</anchorfile>
      <anchor>a95ed32f055c66e9e482939cd66e571ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>InferredType</type>
      <name>resolveType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1TypeParameterizedReactor.html</anchorfile>
      <anchor>a7ed57133eae524686f76de1fcd354a93</anchor>
      <arglist>(InferredType t)</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>resolveType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1TypeParameterizedReactor.html</anchorfile>
      <anchor>a4ceedc90330819501c4a582948b33190</anchor>
      <arglist>(Type t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TypeParameterizedReactor</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1TypeParameterizedReactor.html</anchorfile>
      <anchor>a97401680d33f02ddf5b3d2ea7df0e8db</anchor>
      <arglist>(Instantiation i, List&lt; Reactor &gt; reactors)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TypeParameterizedReactor</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1TypeParameterizedReactor.html</anchorfile>
      <anchor>a3f33e782270d99ef0d2b03258bc545d4</anchor>
      <arglist>(Instantiation i, TypeParameterizedReactor parent)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>uniqueName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1TypeParameterizedReactor.html</anchorfile>
      <anchor>a929e9d02ad1645e0995bc81e5f71dba2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::CodeBuilder</name>
    <filename>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</filename>
    <member kind="function">
      <type></type>
      <name>CodeBuilder</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>adfb43ba41fca5d32834adcbb878ef3d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CodeBuilder</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>adb6f8ce23272059c9073418af028e350</anchor>
      <arglist>(CodeBuilder model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endChannelIteration</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>af10e453331db63e44641dc8867362088</anchor>
      <arglist>(PortInstance port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endScopedBankChannelIteration</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>a5e0c7b19cbf399870f2c8dfe502d153b</anchor>
      <arglist>(PortInstance port, String count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endScopedBlock</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>a17edb043707364e33c97b96539e478b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endScopedRangeBlock</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>a7919b5ffaf29490c56b8d905a6aedebf</anchor>
      <arglist>(RuntimeRange&lt; PortInstance &gt; range)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endScopedRangeBlock</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>a8a319d5d0bd93b5cc793896a9ef0c017</anchor>
      <arglist>(SendRange srcRange, RuntimeRange&lt; PortInstance &gt; dstRange)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getCode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>af77e41f7c9b5681404dd6ddee2f7fada</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>indent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>a4556f9b7d7735bde41a71da3948d431e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>ad07282fbda310fb540023dd30252cc45</anchor>
      <arglist>(int position, String text)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>a9ea60cd8bff74f489268db69fecd50b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>newLine</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>a8dfeb8fc45e92209c918c891961cf96a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pr</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>afdf0a84b1e687ecb730822ee15ac3835</anchor>
      <arglist>(CharSequence text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pr</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>abffcfa55d3cf1c6ba254f447c4b84aba</anchor>
      <arglist>(String format, Object... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prComment</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>a90050989af9f40aa0ca88ad37db96c9f</anchor>
      <arglist>(String comment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prEndSourceLineNumber</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>ae2ee495f6a70d4b49df0613d06a53f98</anchor>
      <arglist>(boolean suppress)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>prSourceLineNumber</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>aaac146f04fd6fe63520a1b867ce90320</anchor>
      <arglist>(EObject eObject, boolean suppress)</arglist>
    </member>
    <member kind="function">
      <type>CodeBuilder</type>
      <name>removeLines</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>aa222e7f98bbd28f38b44eb25815efbc8</anchor>
      <arglist>(String prefix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startChannelIteration</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>a266cfc60ed416b5b2d37257ac8923491</anchor>
      <arglist>(PortInstance port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startScopedBankChannelIteration</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>a3216ec3dc8d95b0b66c8a249afaeeccb</anchor>
      <arglist>(PortInstance port, String count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startScopedBlock</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>a736881374a2a013a862c44b42c473900</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startScopedBlock</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>ad26d9b1552b8d87a9672194d9bbc3b37</anchor>
      <arglist>(ReactorInstance reactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startScopedRangeBlock</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>a477eba7861177dbe404c15b1b90f703f</anchor>
      <arglist>(RuntimeRange&lt; PortInstance &gt; range, String runtimeIndex, String bankIndex, String channelIndex, boolean nested)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startScopedRangeBlock</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>aa31c583321bfbb6fbeb263efbd1b1799</anchor>
      <arglist>(SendRange srcRange, RuntimeRange&lt; PortInstance &gt; dstRange)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>a18df8484e5b619910465deb653155e5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unindent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>ae81b5f45d3e93a7cf2ca626805f9e549</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CodeMap</type>
      <name>writeToFile</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeBuilder.html</anchorfile>
      <anchor>a9a3df2c5cf243f4843748fa3e3119bde</anchor>
      <arglist>(String path)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::CodeMap</name>
    <filename>classorg_1_1lflang_1_1generator_1_1CodeMap.html</filename>
    <class kind="class">org::lflang::generator::CodeMap::Correspondence</class>
    <member kind="function">
      <type>Position</type>
      <name>adjusted</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeMap.html</anchorfile>
      <anchor>a2bfc4caf113c7e0e18eedd114fcb5860</anchor>
      <arglist>(Path lfFile, Position generatedFilePosition)</arglist>
    </member>
    <member kind="function">
      <type>Range</type>
      <name>adjusted</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeMap.html</anchorfile>
      <anchor>a2cd86bb729bf37189b3c4f1c6de0dce5</anchor>
      <arglist>(Path lfFile, Range generatedFileRange)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>firstNonWhitespace</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeMap.html</anchorfile>
      <anchor>aa8f21124a183e0c712888983623ccb22</anchor>
      <arglist>(int line)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getGeneratedCode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeMap.html</anchorfile>
      <anchor>a4062643fc003cebb43bb080a588a5d10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; Path &gt;</type>
      <name>lfSourcePaths</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeMap.html</anchorfile>
      <anchor>a4e9f94c7b8af52b0aa4663a2f43371ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CodeMap</type>
      <name>fromGeneratedCode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeMap.html</anchorfile>
      <anchor>a59ff66ec43d7987aa08dd408ba1bb1cc</anchor>
      <arglist>(String internalGeneratedCode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::CodeMap::Correspondence</name>
    <filename>classorg_1_1lflang_1_1generator_1_1CodeMap_1_1Correspondence.html</filename>
    <member kind="function">
      <type>Range</type>
      <name>getGeneratedRange</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeMap_1_1Correspondence.html</anchorfile>
      <anchor>a350f7dacd451622b2e4591ef5e1e97ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Range</type>
      <name>getLfRange</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeMap_1_1Correspondence.html</anchorfile>
      <anchor>a863d2003213c12627525312dc453c6b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getPath</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeMap_1_1Correspondence.html</anchorfile>
      <anchor>a0ea4a7e4550abbb948ad60bdc1fc1238</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeMap_1_1Correspondence.html</anchorfile>
      <anchor>a826f80a5c056667002b5922d87eff135</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Correspondence</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeMap_1_1Correspondence.html</anchorfile>
      <anchor>a257bd11a179e208adf534219abf9151d</anchor>
      <arglist>(String s, Position relativeTo)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>tag</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1CodeMap_1_1Correspondence.html</anchorfile>
      <anchor>a5726c4ad7ca46dee9e28dc612e533c34</anchor>
      <arglist>(EObject astNode, String representation, boolean verbatim)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::DeadlineInstance</name>
    <filename>classorg_1_1lflang_1_1generator_1_1DeadlineInstance.html</filename>
    <member kind="function">
      <type></type>
      <name>DeadlineInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1DeadlineInstance.html</anchorfile>
      <anchor>a33cbad4b69959ed96f053e6abe5ec157</anchor>
      <arglist>(Deadline definition, ReactionInstance reaction)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1DeadlineInstance.html</anchorfile>
      <anchor>a390cdb0c5cbb4c7dc6aaece24254c80c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>final TimeValue</type>
      <name>maxDelay</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1DeadlineInstance.html</anchorfile>
      <anchor>a34626a01d92b916116eb724b08d95479</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::generator::DelayBodyGenerator</name>
    <filename>interfaceorg_1_1lflang_1_1generator_1_1DelayBodyGenerator.html</filename>
    <member kind="function">
      <type>default void</type>
      <name>finalizeReactions</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1DelayBodyGenerator.html</anchorfile>
      <anchor>a4b7e9185821eda43639ac6f1a581e27e</anchor>
      <arglist>(Reaction delayReaction, Reaction forwardReaction)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>generateAfterDelaysWithVariableWidth</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1DelayBodyGenerator.html</anchorfile>
      <anchor>ac23cc226b4d73cc8f9bbc432acad1c0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateDelayBody</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1DelayBodyGenerator.html</anchorfile>
      <anchor>aff91025ee65874c41fe564e4d3e12f6a</anchor>
      <arglist>(Action action, VarRef port)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateDelayGeneric</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1DelayBodyGenerator.html</anchorfile>
      <anchor>a49d03f00044a0d851687ad2a5601278c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateForwardBody</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1DelayBodyGenerator.html</anchorfile>
      <anchor>a91f537b97c5ad0db21e074a4663a43b0</anchor>
      <arglist>(Action action, VarRef port)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>GEN_DELAY_CLASS_NAME</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1DelayBodyGenerator.html</anchorfile>
      <anchor>a53b472bb435691a61c44c039ebaa9d47</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::DiagnosticReporting</name>
    <filename>classorg_1_1lflang_1_1generator_1_1DiagnosticReporting.html</filename>
    <class kind="interface">org::lflang::generator::DiagnosticReporting::Strategy</class>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>messageOf</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1DiagnosticReporting.html</anchorfile>
      <anchor>a2f7fc1cbe4642390e1ade4615275fce5</anchor>
      <arglist>(String message, Path path, Position position)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DiagnosticSeverity</type>
      <name>severityOf</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1DiagnosticReporting.html</anchorfile>
      <anchor>a7b63e7a86536361e857c59d59d9b200c</anchor>
      <arglist>(String severity)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::generator::DiagnosticReporting::Strategy</name>
    <filename>interfaceorg_1_1lflang_1_1generator_1_1DiagnosticReporting_1_1Strategy.html</filename>
    <member kind="function">
      <type>void</type>
      <name>report</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1DiagnosticReporting_1_1Strategy.html</anchorfile>
      <anchor>a6a3a80b73b5ec14b0760d9790b5a0200</anchor>
      <arglist>(String validationOutput, MessageReporter messageReporter, Map&lt; Path, CodeMap &gt; map)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::docker::CDockerGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1docker_1_1CDockerGenerator.html</filename>
    <base>org.lflang.generator.docker.DockerGenerator</base>
    <member kind="function">
      <type></type>
      <name>CDockerGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1CDockerGenerator.html</anchorfile>
      <anchor>ac8592934c6037fef1cc8c9035448f8c2</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; String &gt;</type>
      <name>defaultEntryPoint</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1CDockerGenerator.html</anchorfile>
      <anchor>aea4edb5881f6180653034196f56f9d3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>defaultImage</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1CDockerGenerator.html</anchorfile>
      <anchor>acdfda7a2f566b361124e625d83a1f0b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DEFAULT_BASE_IMAGE</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1CDockerGenerator.html</anchorfile>
      <anchor>a951c63f18517ba6417bff69783471838</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>defaultBuildCommands</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1CDockerGenerator.html</anchorfile>
      <anchor>a745e5d4bfd8f1d91e29a7efe3fb2b3e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateCopyForSources</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>aaf276f452872800c575db07b850071cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateCopyOfExecutable</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a3f876a772be287015868764ab49f29ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateCopyOfScript</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>ad5f90737e787ff7870d0894c5903a452</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateDockerFileContent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>aa8bd7492abc4b404060c4f9f480a0599</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateEntryPoint</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a62f3ad1a3cf54ba6e80c7c26a1f0c865</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateHeader</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>abcdfba04c2867dc102fed962a34c4e79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateRunForBuild</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a625ed62c184df6978b65bab617e156d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateRunForInstallingDeps</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1CDockerGenerator.html</anchorfile>
      <anchor>aa55d60452fdfdd1f94d0da2a7c8561a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateRunForMakingExecutableDir</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a2b639f0aeccd266360a325d68e0d52be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>getBuildCommands</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>abed231f15e5c3ce3a7d48b49245f68c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>getPostBuildCommand</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a2a4f6ab8dc7612c8479805e2afba95a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>getPreBuildCommand</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a18e3478b0483ea2d6fe3898394aef27e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final LFGeneratorContext</type>
      <name>context</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a35be75b7c35204d83f2ecb0283419761</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::docker::DockerComposeGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>build</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>a10c408a91e3be7df45a3af59f7d55550</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>buildIfRequested</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>a910a7eb55197269dc0752621901c594f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createLauncher</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>ac132b5bfca3b62dbf33fcdf7f7f733e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DockerComposeGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>aa2e699fbb6e4dfb9fcaedd30d6779b0d</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeDockerComposeFile</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>a3a0ef5db6cdf598226eddafdbdb05b41</anchor>
      <arglist>(List&lt; DockerData &gt; services)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeDockerComposeFile</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>a0f10fbfe264588f7c9f998cf8c25aeeb</anchor>
      <arglist>(List&lt; DockerData &gt; services, String networkName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateDockerNetwork</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>af35bd07cf433150cc42a6a3a48b7d1bb</anchor>
      <arglist>(String networkName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateDockerServices</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>a6277d175672b100d76089d7d19f9cb16</anchor>
      <arglist>(List&lt; DockerData &gt; services)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>getBuildContext</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>a8130531c4fa345aa16888d4ad83838cc</anchor>
      <arglist>(DockerData data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>getContainerName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>ae884af37a130c73a6d77ee1f48307d6d</anchor>
      <arglist>(DockerData data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>getServiceDescription</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>aa38b07cfe15e578ec48726207868ba2f</anchor>
      <arglist>(DockerData data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>getServiceName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>aa4c3d0ab9559f16f08fde2196942778a</anchor>
      <arglist>(DockerData data)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final LFGeneratorContext</type>
      <name>context</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>a87d6b0900f8047cce88ec353230789a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::docker::DockerData</name>
    <filename>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerData.html</filename>
    <member kind="function">
      <type>void</type>
      <name>copyScripts</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerData.html</anchorfile>
      <anchor>a9ee735725b3c7c728f80f02ccbb714c3</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DockerData</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerData.html</anchorfile>
      <anchor>a335e684c3b6c65e7f3fcb227de81ea83</anchor>
      <arglist>(String serviceName, Path dockerFilePath, String dockerFileContent, LFGeneratorContext context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeDockerFile</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerData.html</anchorfile>
      <anchor>ad9ad60aeb4e02975ef1f0531b1088a35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>final String</type>
      <name>serviceName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerData.html</anchorfile>
      <anchor>afbe01494d09f3ad7520dd94cd9f367ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::docker::DockerGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</filename>
    <member kind="function">
      <type></type>
      <name>DockerGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a0e13d1d0d5f16f4b70c9f892056c9edc</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>abstract List&lt; String &gt;</type>
      <name>defaultBuildCommands</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a5d95a3c7a64fb32d8c7de4a6ec30c5ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateCopyForSources</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>aaf276f452872800c575db07b850071cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateCopyOfExecutable</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a3f876a772be287015868764ab49f29ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateCopyOfScript</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>ad5f90737e787ff7870d0894c5903a452</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateDockerFileContent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>aa8bd7492abc4b404060c4f9f480a0599</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateEntryPoint</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a62f3ad1a3cf54ba6e80c7c26a1f0c865</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateHeader</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>abcdfba04c2867dc102fed962a34c4e79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateRunForBuild</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a625ed62c184df6978b65bab617e156d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>abstract String</type>
      <name>generateRunForInstallingDeps</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a59399419b650c5702fe2514afb9f4c90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateRunForMakingExecutableDir</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a2b639f0aeccd266360a325d68e0d52be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>getBuildCommands</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>abed231f15e5c3ce3a7d48b49245f68c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>getPostBuildCommand</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a2a4f6ab8dc7612c8479805e2afba95a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>getPreBuildCommand</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a18e3478b0483ea2d6fe3898394aef27e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final LFGeneratorContext</type>
      <name>context</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a35be75b7c35204d83f2ecb0283419761</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::docker::FedDockerComposeGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1docker_1_1FedDockerComposeGenerator.html</filename>
    <base>org.lflang.generator.docker.DockerComposeGenerator</base>
    <member kind="function">
      <type>boolean</type>
      <name>build</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>a10c408a91e3be7df45a3af59f7d55550</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>buildIfRequested</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>a910a7eb55197269dc0752621901c594f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createLauncher</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>ac132b5bfca3b62dbf33fcdf7f7f733e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FedDockerComposeGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1FedDockerComposeGenerator.html</anchorfile>
      <anchor>add72d4d2521825f531a86db3066eb54e</anchor>
      <arglist>(LFGeneratorContext context, String rtiHost)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeDockerComposeFile</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>a3a0ef5db6cdf598226eddafdbdb05b41</anchor>
      <arglist>(List&lt; DockerData &gt; services)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeDockerComposeFile</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>a0f10fbfe264588f7c9f998cf8c25aeeb</anchor>
      <arglist>(List&lt; DockerData &gt; services, String networkName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateDockerNetwork</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>af35bd07cf433150cc42a6a3a48b7d1bb</anchor>
      <arglist>(String networkName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateDockerServices</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1FedDockerComposeGenerator.html</anchorfile>
      <anchor>af135d0004c57c686545553f3d0f68def</anchor>
      <arglist>(List&lt; DockerData &gt; services)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>getBuildContext</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1FedDockerComposeGenerator.html</anchorfile>
      <anchor>ae46d33e3ae16a0f502dee5016093e254</anchor>
      <arglist>(DockerData data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>getContainerName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1FedDockerComposeGenerator.html</anchorfile>
      <anchor>a82944b864283e52808a4b62da8d5d1e3</anchor>
      <arglist>(DockerData data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>getServiceDescription</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1FedDockerComposeGenerator.html</anchorfile>
      <anchor>adf5aa325584823a6a0b2da7798ef7660</anchor>
      <arglist>(DockerData data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>getServiceName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1FedDockerComposeGenerator.html</anchorfile>
      <anchor>a32e4927ef4011f00952437b89a3e0532</anchor>
      <arglist>(DockerData data)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final LFGeneratorContext</type>
      <name>context</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerComposeGenerator.html</anchorfile>
      <anchor>a87d6b0900f8047cce88ec353230789a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::docker::PythonDockerGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1docker_1_1PythonDockerGenerator.html</filename>
    <base>org.lflang.generator.docker.CDockerGenerator</base>
    <member kind="function">
      <type>List&lt; String &gt;</type>
      <name>defaultEntryPoint</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1PythonDockerGenerator.html</anchorfile>
      <anchor>a5c1fc58629951b0f56a0aecc7f039162</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>defaultImage</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1PythonDockerGenerator.html</anchorfile>
      <anchor>aa027f9cf48cda88a3f74fc5de37c57a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PythonDockerGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1PythonDockerGenerator.html</anchorfile>
      <anchor>ade41b199197f4fd06582396057ececef</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DEFAULT_BASE_IMAGE</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1PythonDockerGenerator.html</anchorfile>
      <anchor>a708e67a3528db03bed27c809173658b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>defaultBuildCommands</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1CDockerGenerator.html</anchorfile>
      <anchor>a745e5d4bfd8f1d91e29a7efe3fb2b3e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateCopyForSources</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>aaf276f452872800c575db07b850071cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateCopyOfExecutable</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1PythonDockerGenerator.html</anchorfile>
      <anchor>a2e7e924c265bc59ae35b206b004bb3d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateCopyOfScript</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>ad5f90737e787ff7870d0894c5903a452</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateDockerFileContent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>aa8bd7492abc4b404060c4f9f480a0599</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateEntryPoint</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a62f3ad1a3cf54ba6e80c7c26a1f0c865</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateHeader</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>abcdfba04c2867dc102fed962a34c4e79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateRunForBuild</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a625ed62c184df6978b65bab617e156d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateRunForInstallingDeps</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1CDockerGenerator.html</anchorfile>
      <anchor>aa55d60452fdfdd1f94d0da2a7c8561a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateRunForMakingExecutableDir</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a2b639f0aeccd266360a325d68e0d52be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>getBuildCommands</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>abed231f15e5c3ce3a7d48b49245f68c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>getPostBuildCommand</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a2a4f6ab8dc7612c8479805e2afba95a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>getPreBuildCommand</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a18e3478b0483ea2d6fe3898394aef27e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final LFGeneratorContext</type>
      <name>context</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a35be75b7c35204d83f2ecb0283419761</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::docker::RtiDockerGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1docker_1_1RtiDockerGenerator.html</filename>
    <base>org.lflang.generator.docker.CDockerGenerator</base>
    <member kind="function">
      <type>String</type>
      <name>builderBase</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1RtiDockerGenerator.html</anchorfile>
      <anchor>ac0f0b3ef45560ea743eb56899e5d33e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; String &gt;</type>
      <name>defaultEntryPoint</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1CDockerGenerator.html</anchorfile>
      <anchor>aea4edb5881f6180653034196f56f9d3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>defaultImage</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1CDockerGenerator.html</anchorfile>
      <anchor>acdfda7a2f566b361124e625d83a1f0b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RtiDockerGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1RtiDockerGenerator.html</anchorfile>
      <anchor>a9ea08f632e3f4620a7de524dcd5ade37</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DEFAULT_BASE_IMAGE</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1CDockerGenerator.html</anchorfile>
      <anchor>a951c63f18517ba6417bff69783471838</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>defaultBuildCommands</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1CDockerGenerator.html</anchorfile>
      <anchor>a745e5d4bfd8f1d91e29a7efe3fb2b3e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateCopyForSources</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>aaf276f452872800c575db07b850071cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateCopyOfExecutable</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a3f876a772be287015868764ab49f29ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateCopyOfScript</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>ad5f90737e787ff7870d0894c5903a452</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateDockerFileContent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1RtiDockerGenerator.html</anchorfile>
      <anchor>a74aeedee6686b259d802804cc7f657c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateEntryPoint</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a62f3ad1a3cf54ba6e80c7c26a1f0c865</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateHeader</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>abcdfba04c2867dc102fed962a34c4e79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateRunForBuild</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a625ed62c184df6978b65bab617e156d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateRunForInstallingDeps</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1CDockerGenerator.html</anchorfile>
      <anchor>aa55d60452fdfdd1f94d0da2a7c8561a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateRunForMakingExecutableDir</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a2b639f0aeccd266360a325d68e0d52be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>getBuildCommands</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>abed231f15e5c3ce3a7d48b49245f68c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>getPostBuildCommand</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a2a4f6ab8dc7612c8479805e2afba95a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>getPreBuildCommand</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a18e3478b0483ea2d6fe3898394aef27e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final LFGeneratorContext</type>
      <name>context</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a35be75b7c35204d83f2ecb0283419761</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::docker::TSDockerGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1docker_1_1TSDockerGenerator.html</filename>
    <base>org.lflang.generator.docker.DockerGenerator</base>
    <member kind="function">
      <type>List&lt; String &gt;</type>
      <name>defaultEntryPoint</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1TSDockerGenerator.html</anchorfile>
      <anchor>af527ae84dc07dca3efe40838468b38de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>defaultImage</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1TSDockerGenerator.html</anchorfile>
      <anchor>a782257b7da5f386b6cef2ec5a2d6e1c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TSDockerGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1TSDockerGenerator.html</anchorfile>
      <anchor>ae7bb6bce40af458f058dbca14a9fac71</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>defaultBuildCommands</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1TSDockerGenerator.html</anchorfile>
      <anchor>ad6091ec07c47bca450ab63febebc7e96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateCopyForSources</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1TSDockerGenerator.html</anchorfile>
      <anchor>ae7948a540fc227f1d42d5910a2275499</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateCopyOfExecutable</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1TSDockerGenerator.html</anchorfile>
      <anchor>ac448d22794cbc4fb22774ad321b1fcd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateCopyOfScript</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>ad5f90737e787ff7870d0894c5903a452</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateDockerFileContent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>aa8bd7492abc4b404060c4f9f480a0599</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateEntryPoint</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a62f3ad1a3cf54ba6e80c7c26a1f0c865</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateHeader</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>abcdfba04c2867dc102fed962a34c4e79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateRunForBuild</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a625ed62c184df6978b65bab617e156d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateRunForInstallingDeps</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1TSDockerGenerator.html</anchorfile>
      <anchor>a3677a099b13d508db907b802558d867c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateRunForMakingExecutableDir</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1TSDockerGenerator.html</anchorfile>
      <anchor>aa57602feb0a2f460b90b929439c23855</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>getBuildCommands</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>abed231f15e5c3ce3a7d48b49245f68c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>getPostBuildCommand</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a2a4f6ab8dc7612c8479805e2afba95a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>getPreBuildCommand</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a18e3478b0483ea2d6fe3898394aef27e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final LFGeneratorContext</type>
      <name>context</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1docker_1_1DockerGenerator.html</anchorfile>
      <anchor>a35be75b7c35204d83f2ecb0283419761</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::GenerationException</name>
    <filename>classorg_1_1lflang_1_1generator_1_1GenerationException.html</filename>
    <member kind="function">
      <type></type>
      <name>GenerationException</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GenerationException.html</anchorfile>
      <anchor>a98b4d3a114052c704908db564f9e6877</anchor>
      <arglist>(EObject location, String message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenerationException</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GenerationException.html</anchorfile>
      <anchor>ae500718b107089b239cc5479764d95d3</anchor>
      <arglist>(EObject location, String message, Throwable cause)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenerationException</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GenerationException.html</anchorfile>
      <anchor>a2bca3e32cc8805f51ef20380eac9040c</anchor>
      <arglist>(String message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenerationException</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GenerationException.html</anchorfile>
      <anchor>a982225dd4de1f39e3d3dd5ba4b475e10</anchor>
      <arglist>(String message, Throwable cause)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GenerationException</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GenerationException.html</anchorfile>
      <anchor>aa6dca5348fac4a394b765e2545122fdf</anchor>
      <arglist>(Throwable cause)</arglist>
    </member>
    <member kind="function">
      <type>EObject</type>
      <name>getLocation</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GenerationException.html</anchorfile>
      <anchor>a4e6523a417c0d0cd7824fcd8200fe8a2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::GeneratorBase</name>
    <filename>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</filename>
    <class kind="class">org::lflang::generator::GeneratorBase::ErrorFileAndLine</class>
    <member kind="function">
      <type>void</type>
      <name>doGenerate</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a3ded068ccd6087581c52c6d80524bdbd</anchor>
      <arglist>(Resource resource, LFGeneratorContext context)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>errorsOccurred</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a4bfcd2402734c85e95a48adec2469ecd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GeneratorBase</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>af836bb7768dd2624b93fb7d828eede06</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="function">
      <type>GeneratorCommandFactory</type>
      <name>getCommandFactory</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a9b51c74f19faa0824615a88441fcec9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Instantiation</type>
      <name>getMainDef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a336488d0091b4ac7209758abf7ab0290</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getReactionBankIndex</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a467957ed9c6c738b60bccdb0b97f1004</anchor>
      <arglist>(Reaction reaction)</arglist>
    </member>
    <member kind="function">
      <type>abstract Target</type>
      <name>getTarget</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a51983901e918a390df3819de262c1806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TargetConfig</type>
      <name>getTargetConfig</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a5e78d5eb676f985a18d026030728e623</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>abstract TargetTypes</type>
      <name>getTargetTypes</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>ad5cc1ae2da03e76666a17304df71c98e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printInfo</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>aefc1b3ca1f8d97f8698e6fbe3165f720</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reportCommandErrors</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>aaeb55fee83eaf9360d71dcd8f943ab40</anchor>
      <arglist>(String stderr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReactionBankIndex</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a377eb5ed8dcd6bb63316f5f6de1a63bc</anchor>
      <arglist>(Reaction reaction, int bankIndex)</arglist>
    </member>
    <member kind="variable">
      <type>final LFGeneratorContext</type>
      <name>context</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a5d8b3a0c17a0d139e2c6e9ef8dff5f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>hasModalReactors</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>abbc8eb791ff878c8a4c2455317bc2356</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>hasWatchdogs</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a16ad311724fcd9a9c3fe518e1c3867ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ReactorInstance</type>
      <name>main</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a15120128a9146cf649a0defbf050e0b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MessageReporter</type>
      <name>messageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a667b3435299a11670e38d5446144ad89</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>additionalPostProcessingForModes</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a3471e4881e3f2ac3c90d67f04250f38e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>buildUsingDocker</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>afb0e93b376214115893f8482add44d02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkModalReactorSupport</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a9fa510d65403927b6d5b3bac927a02b6</anchor>
      <arglist>(boolean isSupported)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkWatchdogSupport</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a64c3e94a38cac0ce103d2e264c83db27</anchor>
      <arglist>(boolean isSupported)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>cleanIfNeeded</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>aaa20bf0994f7162a7be5476a3a2de1f0</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>copyUserFiles</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a6db28beb3f6ffb5ba51f2570f15474cb</anchor>
      <arglist>(TargetConfig targetConfig, FileConfig fileConfig)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createMainInstantiation</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a99817f623739bf8840acc2c2f12f4351</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>getConflictingConnectionsInModalReactorsBody</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>aaba754fe24422d5beaafbd3fb2ca0259</anchor>
      <arglist>(VarRef source, VarRef dest)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>abstract DockerGenerator</type>
      <name>getDockerGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a5d7c3f30db58a407763494917a46ec13</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ErrorFileAndLine</type>
      <name>parseCommandOutput</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>ac93f5e61a886e94ad600f4ddd1532b50</anchor>
      <arglist>(String line)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerTransformation</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a2e38efc5be65b8ce39fa751caeecb2d7</anchor>
      <arglist>(AstTransformation transformation)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setReactorsAndInstantiationGraph</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a651b7331a0a87503d0f674f8d9ea182e</anchor>
      <arglist>(LFGeneratorContext.Mode mode)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GeneratorCommandFactory</type>
      <name>commandFactory</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a4bfacb8fb4e80bb444d1c1ff4fb773b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>InstantiationGraph</type>
      <name>instantiationGraph</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a6c4bab272ae039836ea92bfff851fc8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Instantiation</type>
      <name>mainDef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a596a9538e19ceca48377bfa7e6279ce9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Map&lt; Reaction, Integer &gt;</type>
      <name>reactionBankIndices</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>aaba9f3fc436a133cd61a140967e73706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>List&lt; Reactor &gt;</type>
      <name>reactors</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>adf20e0d64aa14fda544445708d6fdf51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final TargetConfig</type>
      <name>targetConfig</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase.html</anchorfile>
      <anchor>a3b9c60edb15a9b1584a07732bb7c5e65</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::GeneratorBase::ErrorFileAndLine</name>
    <filename>classorg_1_1lflang_1_1generator_1_1GeneratorBase_1_1ErrorFileAndLine.html</filename>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase_1_1ErrorFileAndLine.html</anchorfile>
      <anchor>a331c1fca8d7a1788c61be0056f20de56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>character</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase_1_1ErrorFileAndLine.html</anchorfile>
      <anchor>ac66b6f84b35a1c6b6f3e19faa6b1923b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>filepath</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase_1_1ErrorFileAndLine.html</anchorfile>
      <anchor>acf04033410a5d833ffa6f20879030836</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>isError</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase_1_1ErrorFileAndLine.html</anchorfile>
      <anchor>a7826fa9d4fad17d2d1a57bb9933f6ce9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>line</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase_1_1ErrorFileAndLine.html</anchorfile>
      <anchor>a1a7d4cef6135f905b9ac189f89b9a053</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>message</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorBase_1_1ErrorFileAndLine.html</anchorfile>
      <anchor>a5554adb04a559dc86cb32ca163d34696</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::GeneratorCommandFactory</name>
    <filename>classorg_1_1lflang_1_1generator_1_1GeneratorCommandFactory.html</filename>
    <member kind="function">
      <type>LFCommand</type>
      <name>createCommand</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorCommandFactory.html</anchorfile>
      <anchor>a1ff4b068cd32be3f7cfdaa0654cc61c3</anchor>
      <arglist>(String cmd, List&lt; String &gt; args)</arglist>
    </member>
    <member kind="function">
      <type>LFCommand</type>
      <name>createCommand</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorCommandFactory.html</anchorfile>
      <anchor>a3cacda6ec207ea789353e00b09cceb9e</anchor>
      <arglist>(String cmd, List&lt; String &gt; args, boolean failOnError)</arglist>
    </member>
    <member kind="function">
      <type>LFCommand</type>
      <name>createCommand</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorCommandFactory.html</anchorfile>
      <anchor>a720e8c9ec917d56d292c300b8f727cf2</anchor>
      <arglist>(String cmd, List&lt; String &gt; args, Path dir)</arglist>
    </member>
    <member kind="function">
      <type>LFCommand</type>
      <name>createCommand</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorCommandFactory.html</anchorfile>
      <anchor>acfff12ff7a6c0227a6687634f3e7f38a</anchor>
      <arglist>(String cmd, List&lt; String &gt; args, Path dir, boolean failOnError)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GeneratorCommandFactory</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorCommandFactory.html</anchorfile>
      <anchor>ac1361f0fc3eb5772a6eaf512ee6429f7</anchor>
      <arglist>(MessageReporter messageReporter, FileConfig fileConfig)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQuiet</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorCommandFactory.html</anchorfile>
      <anchor>ac5fd32dccfcff45f41c8ae210fac81c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVerbose</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorCommandFactory.html</anchorfile>
      <anchor>a53b05712986d7e6a539bbfd4ee88389b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final FileConfig</type>
      <name>fileConfig</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorCommandFactory.html</anchorfile>
      <anchor>ac70fae96e26aa1d6cd70e61501ff4bf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final MessageReporter</type>
      <name>messageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorCommandFactory.html</anchorfile>
      <anchor>a96bd4029a2c16e827548967e15024149</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boolean</type>
      <name>quiet</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorCommandFactory.html</anchorfile>
      <anchor>aad6a89971be14e8bf5a70e7afff51f88</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::GeneratorResult</name>
    <filename>classorg_1_1lflang_1_1generator_1_1GeneratorResult.html</filename>
    <class kind="enum">org::lflang::generator::GeneratorResult::Status</class>
    <member kind="function">
      <type></type>
      <name>GeneratorResult</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorResult.html</anchorfile>
      <anchor>a7173f412615ac8a462807503022904af</anchor>
      <arglist>(Status status, LFGeneratorContext context, Map&lt; Path, CodeMap &gt; codeMaps)</arglist>
    </member>
    <member kind="function">
      <type>Map&lt; Path, CodeMap &gt;</type>
      <name>getCodeMaps</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorResult.html</anchorfile>
      <anchor>a4c020b4450c85ff426519ace972b50e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LFGeneratorContext</type>
      <name>getContext</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorResult.html</anchorfile>
      <anchor>ab2998780bc46fd6b3bf5433d492b1109</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Status</type>
      <name>getStatus</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorResult.html</anchorfile>
      <anchor>a9226dd58d7d8b40fe5f4b85bbd03b322</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getUserMessage</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorResult.html</anchorfile>
      <anchor>a1e1f12f5ca5d7b846d2afd0a9db95062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static GeneratorResult</type>
      <name>CANCELLED</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorResult.html</anchorfile>
      <anchor>ad48488b36b8133193cae0d3c2f4618eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static GeneratorResult</type>
      <name>FAILED</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorResult.html</anchorfile>
      <anchor>adf941dbe66052d0a641a640ee488e14a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static BiFunction&lt; LFGeneratorContext, Map&lt; Path, CodeMap &gt;, GeneratorResult &gt;</type>
      <name>GENERATED_NO_EXECUTABLE</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorResult.html</anchorfile>
      <anchor>a71ae5377e2555f7d0548d7e578a70a7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static GeneratorResult</type>
      <name>NOTHING</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorResult.html</anchorfile>
      <anchor>a6490208eb3c6b2177878b2e4fa8a5c84</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::generator::GeneratorResult::Status</name>
    <filename>enumorg_1_1lflang_1_1generator_1_1GeneratorResult_1_1Status.html</filename>
    <class kind="interface">org::lflang::generator::GeneratorResult::Status::GetUserMessage</class>
    <member kind="function">
      <type></type>
      <name>Status</name>
      <anchorfile>enumorg_1_1lflang_1_1generator_1_1GeneratorResult_1_1Status.html</anchorfile>
      <anchor>a08d6808e5913cf736e29bcb467d958b4</anchor>
      <arglist>(GetUserMessage gum)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CANCELLED</name>
      <anchorfile>enumorg_1_1lflang_1_1generator_1_1GeneratorResult_1_1Status.html</anchorfile>
      <anchor>acdab83bff1b7ffe2a72bac2acd872155</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>COMPILED</name>
      <anchorfile>enumorg_1_1lflang_1_1generator_1_1GeneratorResult_1_1Status.html</anchorfile>
      <anchor>a567880c0e513ba9aace88faaad7996ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FAILED</name>
      <anchorfile>enumorg_1_1lflang_1_1generator_1_1GeneratorResult_1_1Status.html</anchorfile>
      <anchor>a7e21cc50b2171f28d4f9bed25372ab5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>GENERATED</name>
      <anchorfile>enumorg_1_1lflang_1_1generator_1_1GeneratorResult_1_1Status.html</anchorfile>
      <anchor>a4120cc00c8a269a8ba9bee1e792bfa29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NOTHING</name>
      <anchorfile>enumorg_1_1lflang_1_1generator_1_1GeneratorResult_1_1Status.html</anchorfile>
      <anchor>a358b34906bc3784cce5b81c17b6f2aa3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::generator::GeneratorResult::Status::GetUserMessage</name>
    <filename>interfaceorg_1_1lflang_1_1generator_1_1GeneratorResult_1_1Status_1_1GetUserMessage.html</filename>
    <member kind="function">
      <type>String</type>
      <name>apply</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1GeneratorResult_1_1Status_1_1GetUserMessage.html</anchorfile>
      <anchor>a653b12be7d21d4e32d7d2ee532d77d84</anchor>
      <arglist>(GeneratorResult result)</arglist>
    </member>
    <member kind="variable">
      <type>GetUserMessage</type>
      <name>COMPLETED</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1GeneratorResult_1_1Status_1_1GetUserMessage.html</anchorfile>
      <anchor>a8035071aa5a038fe7a8e552d2f82b418</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::GeneratorUtils</name>
    <filename>classorg_1_1lflang_1_1generator_1_1GeneratorUtils.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>accommodatePhysicalActionsIfPresent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorUtils.html</anchorfile>
      <anchor>a1b3260ac9148263c23d9b8b5f7f3535a</anchor>
      <arglist>(Set&lt; Resource &gt; resources, boolean setsKeepAliveOptionAutomatically, TargetConfig targetConfig, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>canGenerate</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorUtils.html</anchorfile>
      <anchor>aeb694252338cfa9074fda551d3483394</anchor>
      <arglist>(Boolean errorsOccurred, Instantiation mainDef, MessageReporter messageReporter, LFGeneratorContext context)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static&lt; T &gt; Iterable&lt; T &gt;</type>
      <name>findAll</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorUtils.html</anchorfile>
      <anchor>a2fd9368fb969a0ff0b3f6349e4149657</anchor>
      <arglist>(Resource resource, Class&lt; T &gt; nodeType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TargetDecl</type>
      <name>findTargetDecl</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorUtils.html</anchorfile>
      <anchor>aca1e0c6e9fb8138bfdb0a850deb70e13</anchor>
      <arglist>(Resource resource)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Set&lt; Resource &gt;</type>
      <name>getResources</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorUtils.html</anchorfile>
      <anchor>a507eb238b7e9dc4b81fc542fa380d278</anchor>
      <arglist>(Iterable&lt; Reactor &gt; reactors)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isHostWindows</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorUtils.html</anchorfile>
      <anchor>affcb5e223231b1bda991f765d8f6982c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>refreshProject</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GeneratorUtils.html</anchorfile>
      <anchor>a1e62f0797f9cf5f107992158803e2b8d</anchor>
      <arglist>(Resource resource, Mode compilerMode)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::HumanReadableReportingStrategy</name>
    <filename>classorg_1_1lflang_1_1generator_1_1HumanReadableReportingStrategy.html</filename>
    <base>org.lflang.generator.DiagnosticReporting.Strategy</base>
    <member kind="function">
      <type></type>
      <name>HumanReadableReportingStrategy</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1HumanReadableReportingStrategy.html</anchorfile>
      <anchor>a899e6e3a2f2feb5db8da0060b4d27e2a</anchor>
      <arglist>(Pattern diagnosticMessagePattern, Pattern labelPattern)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HumanReadableReportingStrategy</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1HumanReadableReportingStrategy.html</anchorfile>
      <anchor>aaaf33dc772865544d793182568c3672a</anchor>
      <arglist>(Pattern diagnosticMessagePattern, Pattern labelPattern, Path relativeTo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>report</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1HumanReadableReportingStrategy.html</anchorfile>
      <anchor>a3c37ed2b8db0845b5b1575b425111490</anchor>
      <arglist>(String validationOutput, MessageReporter messageReporter, Map&lt; Path, CodeMap &gt; map)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::IntegratedBuilder</name>
    <filename>classorg_1_1lflang_1_1generator_1_1IntegratedBuilder.html</filename>
    <class kind="interface">org::lflang::generator::IntegratedBuilder::ReportProgress</class>
    <member kind="function">
      <type>Resource</type>
      <name>getResource</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1IntegratedBuilder.html</anchorfile>
      <anchor>ac5d5ba01654931a187e6c0e7ef068a89</anchor>
      <arglist>(URI uri)</arglist>
    </member>
    <member kind="function">
      <type>GeneratorResult</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1IntegratedBuilder.html</anchorfile>
      <anchor>af89ff0f9c0e4760662c080cff2311ab2</anchor>
      <arglist>(URI uri, String json, boolean mustComplete, ReportProgress reportProgress, CancelIndicator cancelIndicator)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final int</type>
      <name>COMPILED_PERCENT_PROGRESS</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1IntegratedBuilder.html</anchorfile>
      <anchor>a518cbee4f9e28ca60f26352c24b1cb80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final int</type>
      <name>GENERATED_PERCENT_PROGRESS</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1IntegratedBuilder.html</anchorfile>
      <anchor>afdc0754e5673f37c297b25c9f9270f96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final int</type>
      <name>START_PERCENT_PROGRESS</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1IntegratedBuilder.html</anchorfile>
      <anchor>a4f17972557832248757573e00473e27a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final int</type>
      <name>VALIDATED_PERCENT_PROGRESS</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1IntegratedBuilder.html</anchorfile>
      <anchor>ac007029d2b6c99251cf76a72969b86ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GeneratorArguments</type>
      <name>getArgs</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1IntegratedBuilder.html</anchorfile>
      <anchor>a58b8ca284a3f3b2f89033670b6998f6f</anchor>
      <arglist>(String jsonString)</arglist>
    </member>
    <member kind="function" protection="package" static="yes">
      <type>static DiagnosticSeverity</type>
      <name>convertSeverity</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1IntegratedBuilder.html</anchorfile>
      <anchor>a6aa937fd92376e911dd118c37bb519aa</anchor>
      <arglist>(Severity severity)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::generator::IntegratedBuilder::ReportProgress</name>
    <filename>interfaceorg_1_1lflang_1_1generator_1_1IntegratedBuilder_1_1ReportProgress.html</filename>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1IntegratedBuilder_1_1ReportProgress.html</anchorfile>
      <anchor>aaad33bcabd90c4b312f605fb7074332b</anchor>
      <arglist>(String message, Integer percentage)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::InvalidLfSourceException</name>
    <filename>classorg_1_1lflang_1_1generator_1_1InvalidLfSourceException.html</filename>
    <member kind="function">
      <type>EObject</type>
      <name>getNode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1InvalidLfSourceException.html</anchorfile>
      <anchor>a40b1046af24623d9e2237af467d2289d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getProblem</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1InvalidLfSourceException.html</anchorfile>
      <anchor>a73bef4828f34ba610f5bb2a2f84dffb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InvalidLfSourceException</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1InvalidLfSourceException.html</anchorfile>
      <anchor>a114a5d121c0b93171e622cf44f7262dc</anchor>
      <arglist>(EObject node, String problem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InvalidLfSourceException</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1InvalidLfSourceException.html</anchorfile>
      <anchor>ac060369aecce3666d661cedca8567e9a</anchor>
      <arglist>(String problem, EObject node)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::InvalidSourceException</name>
    <filename>classorg_1_1lflang_1_1generator_1_1InvalidSourceException.html</filename>
    <member kind="function">
      <type></type>
      <name>InvalidSourceException</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1InvalidSourceException.html</anchorfile>
      <anchor>a39b76bc0ef7bab8938277da5475d8a3f</anchor>
      <arglist>(String message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::LanguageServerMessageReporter</name>
    <filename>classorg_1_1lflang_1_1generator_1_1LanguageServerMessageReporter.html</filename>
    <base>org.lflang.MessageReporterBase</base>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LanguageServerMessageReporter.html</anchorfile>
      <anchor>a98f8eeb6dd17599e0459a05d399f14f2</anchor>
      <arglist>(Path file, int line)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a3d5b75f44f1985a4e1024a8b43d61fec</anchor>
      <arglist>(Path file)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a22bc622a160433fe40df98e229626760</anchor>
      <arglist>(Path file, Position pos)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a00cdd7120113ce25c9830e183e14c66f</anchor>
      <arglist>(EObject node)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a77356f4ec9535154ed819b9b32a1ceee</anchor>
      <arglist>(EObject node, EStructuralFeature feature)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>aee12d3be7c0c2f5e32079dfddd54c7da</anchor>
      <arglist>(Path file, Range range)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>atNullableLine</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a398b2acbf471940ad542db86c34bd7dd</anchor>
      <arglist>(Path file, Integer line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearHistory</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a40dba989b4d7ea727cf7b4a6bea7431f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>getErrorsOccurred</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LanguageServerMessageReporter.html</anchorfile>
      <anchor>ad07d1218819e3f7cb9a34c5e5832ecb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LanguageServerMessageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LanguageServerMessageReporter.html</anchorfile>
      <anchor>a2122761b8f357995e214f0e6bb1ef7be</anchor>
      <arglist>(EObject parseRoot)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>nowhere</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a6d8e986624a920121b5c6a165f3073a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>publishDiagnostics</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LanguageServerMessageReporter.html</anchorfile>
      <anchor>ae8635a3563eaaa199b3931edcbfacb68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setClient</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LanguageServerMessageReporter.html</anchorfile>
      <anchor>a8630cc63d1c22d0b8bfeb0dd046661ba</anchor>
      <arglist>(LanguageClient client)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>report</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LanguageServerMessageReporter.html</anchorfile>
      <anchor>a5f989ff2c02553d15fc8857bd00e35f1</anchor>
      <arglist>(Path path, org.lflang.generator.Range range, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>abstract void</type>
      <name>report</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a064ce0489556a88f56a47059c1bb146b</anchor>
      <arglist>(Path path, Range range, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reportOnNode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LanguageServerMessageReporter.html</anchorfile>
      <anchor>a56603982a696f06975263b7321cba165</anchor>
      <arglist>(EObject node, EStructuralFeature feature, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reportOnNode</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a084f678d4f71661620ed91058e4694c1</anchor>
      <arglist>(EObject node, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reportWithoutPosition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LanguageServerMessageReporter.html</anchorfile>
      <anchor>a97a4406e45a06c460bbcdc082a34a569</anchor>
      <arglist>(DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Stage2</type>
      <name>wrap</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a365b78fc2a5d81158e450ea7aea5821b</anchor>
      <arglist>(Stage2 e)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::generator::LfExpressionVisitor</name>
    <filename>interfaceorg_1_1lflang_1_1generator_1_1LfExpressionVisitor.html</filename>
    <templarg>P</templarg>
    <templarg>R</templarg>
    <class kind="class">org::lflang::generator::LfExpressionVisitor::DefaultLfVisitor</class>
    <class kind="class">org::lflang::generator::LfExpressionVisitor::LfExpressionDeepCopyVisitor</class>
    <member kind="function">
      <type>static&lt; P, R &gt; R</type>
      <name>dispatch</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LfExpressionVisitor.html</anchorfile>
      <anchor>a1ea0fffe968c23a36f2fcdc6dc0e1bd5</anchor>
      <arglist>(Expression e, P arg, LfExpressionVisitor&lt;? super P, ? extends R &gt; visitor)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>visitBracedListExpr</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LfExpressionVisitor.html</anchorfile>
      <anchor>abff7e42cd9ed1321cbb596c45d7127d7</anchor>
      <arglist>(BracedListExpression expr, P param)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>visitBracketListExpr</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LfExpressionVisitor.html</anchorfile>
      <anchor>a9531557f8bdc033b38dd35fc3ddfc6da</anchor>
      <arglist>(BracketListExpression expr, P param)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>visitCodeExpr</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LfExpressionVisitor.html</anchorfile>
      <anchor>a3f71531ce93b54326de4f777b090b983</anchor>
      <arglist>(CodeExpr expr, P param)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>visitLiteral</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LfExpressionVisitor.html</anchorfile>
      <anchor>a2093560717b5b981d5bc2e88347eb867</anchor>
      <arglist>(Literal expr, P param)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>visitParameterRef</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LfExpressionVisitor.html</anchorfile>
      <anchor>ae14ad6c326e9600e3fd6152b30539bfd</anchor>
      <arglist>(ParameterReference expr, P param)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>visitTimeLiteral</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LfExpressionVisitor.html</anchorfile>
      <anchor>a23dc3a26ee209e59a84719b5028d1f36</anchor>
      <arglist>(Time expr, P param)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::LfExpressionVisitor::DefaultLfVisitor</name>
    <filename>classorg_1_1lflang_1_1generator_1_1LfExpressionVisitor_1_1DefaultLfVisitor.html</filename>
    <templarg>P</templarg>
    <templarg>R</templarg>
    <base>org.lflang.generator.LfExpressionVisitor&lt; P, R &gt;</base>
    <member kind="function">
      <type>static&lt; P, R &gt; R</type>
      <name>dispatch</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LfExpressionVisitor.html</anchorfile>
      <anchor>a1ea0fffe968c23a36f2fcdc6dc0e1bd5</anchor>
      <arglist>(Expression e, P arg, LfExpressionVisitor&lt;? super P, ? extends R &gt; visitor)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>visitBracedListExpr</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LfExpressionVisitor_1_1DefaultLfVisitor.html</anchorfile>
      <anchor>acc05e281c62215dad461dba40a1aee12</anchor>
      <arglist>(BracedListExpression expr, P param)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>visitBracketListExpr</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LfExpressionVisitor_1_1DefaultLfVisitor.html</anchorfile>
      <anchor>a15d9c66363d34605fb9a4c031a7bc9d6</anchor>
      <arglist>(BracketListExpression expr, P param)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>visitCodeExpr</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LfExpressionVisitor_1_1DefaultLfVisitor.html</anchorfile>
      <anchor>a01646c972eceb29edf324938e6047507</anchor>
      <arglist>(CodeExpr expr, P param)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>visitLiteral</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LfExpressionVisitor_1_1DefaultLfVisitor.html</anchorfile>
      <anchor>a0ba15f2795545f81682324ac039c729d</anchor>
      <arglist>(Literal expr, P param)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>visitParameterRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LfExpressionVisitor_1_1DefaultLfVisitor.html</anchorfile>
      <anchor>a3a9f3f55015cd5a223d44bb186844abd</anchor>
      <arglist>(ParameterReference expr, P param)</arglist>
    </member>
    <member kind="function">
      <type>R</type>
      <name>visitTimeLiteral</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LfExpressionVisitor_1_1DefaultLfVisitor.html</anchorfile>
      <anchor>a5ee3fed618655dffec75ad052b86dbd3</anchor>
      <arglist>(Time expr, P param)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>abstract R</type>
      <name>visitExpression</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LfExpressionVisitor_1_1DefaultLfVisitor.html</anchorfile>
      <anchor>a8c4740428f7bbc87f6a24e1fa9f3a446</anchor>
      <arglist>(Expression expr, P param)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::LfExpressionVisitor::LfExpressionDeepCopyVisitor</name>
    <filename>classorg_1_1lflang_1_1generator_1_1LfExpressionVisitor_1_1LfExpressionDeepCopyVisitor.html</filename>
    <templarg>P</templarg>
    <base>org.lflang.generator.LfExpressionVisitor&lt; P, Expression &gt;</base>
    <member kind="function">
      <type>static&lt; P, R &gt; R</type>
      <name>dispatch</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LfExpressionVisitor.html</anchorfile>
      <anchor>a1ea0fffe968c23a36f2fcdc6dc0e1bd5</anchor>
      <arglist>(Expression e, P arg, LfExpressionVisitor&lt;? super P, ? extends R &gt; visitor)</arglist>
    </member>
    <member kind="function">
      <type>Expression</type>
      <name>visitBracedListExpr</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LfExpressionVisitor_1_1LfExpressionDeepCopyVisitor.html</anchorfile>
      <anchor>a742b2dd59c8692b74d879b31e050d931</anchor>
      <arglist>(BracedListExpression expr, P param)</arglist>
    </member>
    <member kind="function">
      <type>Expression</type>
      <name>visitBracketListExpr</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LfExpressionVisitor_1_1LfExpressionDeepCopyVisitor.html</anchorfile>
      <anchor>a139986ae1536b5c4f59764c12e9f82d0</anchor>
      <arglist>(BracketListExpression expr, P param)</arglist>
    </member>
    <member kind="function">
      <type>Expression</type>
      <name>visitCodeExpr</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LfExpressionVisitor_1_1LfExpressionDeepCopyVisitor.html</anchorfile>
      <anchor>a332097b788707753456b72499ef5195a</anchor>
      <arglist>(CodeExpr expr, P param)</arglist>
    </member>
    <member kind="function">
      <type>Expression</type>
      <name>visitLiteral</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LfExpressionVisitor_1_1LfExpressionDeepCopyVisitor.html</anchorfile>
      <anchor>a09f24550a9324c91377b14db04a51245</anchor>
      <arglist>(Literal expr, P param)</arglist>
    </member>
    <member kind="function">
      <type>Expression</type>
      <name>visitParameterRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LfExpressionVisitor_1_1LfExpressionDeepCopyVisitor.html</anchorfile>
      <anchor>a83e5339bbb1fbe5f5aa3b983264692bd</anchor>
      <arglist>(ParameterReference expr, P param)</arglist>
    </member>
    <member kind="function">
      <type>Expression</type>
      <name>visitTimeLiteral</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LfExpressionVisitor_1_1LfExpressionDeepCopyVisitor.html</anchorfile>
      <anchor>abbb0f6c1dda5b0246a5e51a720272ec7</anchor>
      <arglist>(Time expr, P param)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::LFGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1LFGenerator.html</filename>
    <member kind="function">
      <type>void</type>
      <name>doGenerate</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LFGenerator.html</anchorfile>
      <anchor>a8e936179f742e41aae48788e01af3d51</anchor>
      <arglist>(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>errorsOccurred</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LFGenerator.html</anchorfile>
      <anchor>a9bce0c3086fcc8aa6653aaf86085f333</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FileConfig</type>
      <name>createFileConfig</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LFGenerator.html</anchorfile>
      <anchor>a89bac53c8a3fe8a32c4681a1a54ce41d</anchor>
      <arglist>(Resource resource, Path srcGenBasePath, boolean useHierarchicalBin)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boolean</type>
      <name>generatorErrorsOccurred</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1LFGenerator.html</anchorfile>
      <anchor>a1ab0532cc43cbc1b988946fcd04c5681</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::generator::LFGeneratorContext</name>
    <filename>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</filename>
    <class kind="enum">org::lflang::generator::LFGeneratorContext::Mode</class>
    <member kind="function">
      <type>void</type>
      <name>finish</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</anchorfile>
      <anchor>af621c412fc64a6b07a8185d1f72bb49f</anchor>
      <arglist>(GeneratorResult result)</arglist>
    </member>
    <member kind="function">
      <type>default void</type>
      <name>finish</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</anchorfile>
      <anchor>a68d454ed8e23001da5c772ebe74ac4e1</anchor>
      <arglist>(GeneratorResult.Status status, Map&lt; Path, CodeMap &gt; codeMaps)</arglist>
    </member>
    <member kind="function">
      <type>GeneratorArguments</type>
      <name>getArgs</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</anchorfile>
      <anchor>a3623463e1031bf25579db9bb353cd53b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MessageReporter</type>
      <name>getErrorReporter</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</anchorfile>
      <anchor>ab11cdbfd153df210a8695714033f38c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FileConfig</type>
      <name>getFileConfig</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</anchorfile>
      <anchor>ad9779e6d9f698e463d15ff32816b4c7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Mode</type>
      <name>getMode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</anchorfile>
      <anchor>a3ef16c224bd6cbbdadcefd85056ba648</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GeneratorResult</type>
      <name>getResult</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</anchorfile>
      <anchor>a4eec39f578a0c7928d578f094df3edae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TargetConfig</type>
      <name>getTargetConfig</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</anchorfile>
      <anchor>a4a300151622cc8da963a8a3791189877</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>default boolean</type>
      <name>isCleanRequested</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</anchorfile>
      <anchor>a88be89fe594897a416ac42d7f124aa70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reportProgress</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</anchorfile>
      <anchor>ab05bc3358114f45c6f4f4706f7df0f19</anchor>
      <arglist>(String message, int percentage)</arglist>
    </member>
    <member kind="function">
      <type>default void</type>
      <name>unsuccessfulFinish</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</anchorfile>
      <anchor>a774a1ab8a43fa876ea5b41001e2935b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LFGeneratorContext</type>
      <name>lfGeneratorContextOf</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</anchorfile>
      <anchor>ab2974bb9f44c1dff1aae98dae6dead86</anchor>
      <arglist>(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context)</arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::generator::LFGeneratorContext::Mode</name>
    <filename>enumorg_1_1lflang_1_1generator_1_1LFGeneratorContext_1_1Mode.html</filename>
    <member kind="variable">
      <type></type>
      <name>EPOCH</name>
      <anchorfile>enumorg_1_1lflang_1_1generator_1_1LFGeneratorContext_1_1Mode.html</anchorfile>
      <anchor>acb26ccacd8478e7cad0195b9a1aec7fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>LSP_FAST</name>
      <anchorfile>enumorg_1_1lflang_1_1generator_1_1LFGeneratorContext_1_1Mode.html</anchorfile>
      <anchor>a97909410bf7eacc5082662f254652c80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>LSP_MEDIUM</name>
      <anchorfile>enumorg_1_1lflang_1_1generator_1_1LFGeneratorContext_1_1Mode.html</anchorfile>
      <anchor>aa917223cce14756b2588db8e59fd5548</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>LSP_SLOW</name>
      <anchorfile>enumorg_1_1lflang_1_1generator_1_1LFGeneratorContext_1_1Mode.html</anchorfile>
      <anchor>aa3cb1b697a6c9dc6f66e190eb548f743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>STANDALONE</name>
      <anchorfile>enumorg_1_1lflang_1_1generator_1_1LFGeneratorContext_1_1Mode.html</anchorfile>
      <anchor>a00e34ca948aa1b2d2b4d6bc292dc6e8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNDEFINED</name>
      <anchorfile>enumorg_1_1lflang_1_1generator_1_1LFGeneratorContext_1_1Mode.html</anchorfile>
      <anchor>abfc0321a5081138d5e9c5e6cd3ac52b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::MainContext</name>
    <filename>classorg_1_1lflang_1_1generator_1_1MainContext.html</filename>
    <base>org.lflang.generator.LFGeneratorContext</base>
    <member kind="function">
      <type>default void</type>
      <name>finish</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</anchorfile>
      <anchor>a68d454ed8e23001da5c772ebe74ac4e1</anchor>
      <arglist>(GeneratorResult.Status status, Map&lt; Path, CodeMap &gt; codeMaps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finish</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MainContext.html</anchorfile>
      <anchor>a90d11905ed16c4f9e2629a4466e0a998</anchor>
      <arglist>(GeneratorResult result)</arglist>
    </member>
    <member kind="function">
      <type>GeneratorArguments</type>
      <name>getArgs</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MainContext.html</anchorfile>
      <anchor>a8ebe33db3d0c7958c0b75dd060e9af40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CancelIndicator</type>
      <name>getCancelIndicator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MainContext.html</anchorfile>
      <anchor>a7890161ef85957dc54dbfe89348a443a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MessageReporter</type>
      <name>getErrorReporter</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MainContext.html</anchorfile>
      <anchor>af488fb86572c6f70b2c7f7805a6bb188</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FileConfig</type>
      <name>getFileConfig</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MainContext.html</anchorfile>
      <anchor>af20bf8b4391af3fee2a78539cacc7978</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Mode</type>
      <name>getMode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MainContext.html</anchorfile>
      <anchor>a9ce24b86b6bf90f52f663b2a0453f12a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GeneratorResult</type>
      <name>getResult</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MainContext.html</anchorfile>
      <anchor>a992aac0d755abf2388ddb7258274a8aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TargetConfig</type>
      <name>getTargetConfig</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MainContext.html</anchorfile>
      <anchor>a485c96940f6248cf87c2aa70e9f2fb27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>default boolean</type>
      <name>isCleanRequested</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</anchorfile>
      <anchor>a88be89fe594897a416ac42d7f124aa70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadTargetConfig</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MainContext.html</anchorfile>
      <anchor>af67690a676578fb690014aac1ca66b57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MainContext</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MainContext.html</anchorfile>
      <anchor>a1c2e9b5f0d9d9b9da15c0517d96fca33</anchor>
      <arglist>(Mode mode, CancelIndicator cancelIndicator, ReportProgress reportProgress, GeneratorArguments args, Resource resource, IFileSystemAccess2 fsa, Function&lt; FileConfig, MessageReporter &gt; constructErrorReporter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MainContext</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MainContext.html</anchorfile>
      <anchor>ab47d685611a64d0e92ed7c2a7f100203</anchor>
      <arglist>(Mode mode, Resource resource, IFileSystemAccess2 fsa, CancelIndicator cancelIndicator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reportProgress</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MainContext.html</anchorfile>
      <anchor>a4b1f90fd1dc5dcd4ab5913d3da611b3a</anchor>
      <arglist>(String message, int percentage)</arglist>
    </member>
    <member kind="function">
      <type>default void</type>
      <name>unsuccessfulFinish</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</anchorfile>
      <anchor>a774a1ab8a43fa876ea5b41001e2935b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LFGeneratorContext</type>
      <name>lfGeneratorContextOf</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</anchorfile>
      <anchor>ab2974bb9f44c1dff1aae98dae6dead86</anchor>
      <arglist>(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static Function&lt; FileConfig, MessageReporter &gt;</type>
      <name>EPOCH_ERROR_REPORTER_CONSTRUCTOR</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MainContext.html</anchorfile>
      <anchor>a1c4369af33f2134befb7cf328dfdbffb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::MixedRadixInt</name>
    <filename>classorg_1_1lflang_1_1generator_1_1MixedRadixInt.html</filename>
    <member kind="function">
      <type>MixedRadixInt</type>
      <name>copy</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MixedRadixInt.html</anchorfile>
      <anchor>a2e71d72642d3e3f79cdb731754db73c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MixedRadixInt.html</anchorfile>
      <anchor>ab39656a0a5b1e2db7a838e1de91b52b7</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MixedRadixInt.html</anchorfile>
      <anchor>a38033b4f9b81d21bcef47bb6f1184b42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MixedRadixInt.html</anchorfile>
      <anchor>a2f7f9b35bc9efff840047e7f2af5383c</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; Integer &gt;</type>
      <name>getDigits</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MixedRadixInt.html</anchorfile>
      <anchor>a51215e2a1f13838f42f5ece60a7b190a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; Integer &gt;</type>
      <name>getPermutation</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MixedRadixInt.html</anchorfile>
      <anchor>a56c046696d1662a80bbfd1fa14901dc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; Integer &gt;</type>
      <name>getRadixes</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MixedRadixInt.html</anchorfile>
      <anchor>aa5be0d317236b132fda9a48c2db9830d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MixedRadixInt.html</anchorfile>
      <anchor>a03d680b8721d8dd25d17713550e0987e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>increment</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MixedRadixInt.html</anchorfile>
      <anchor>a592331a17aad4f96c24e3e3d605c12c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>magnitude</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MixedRadixInt.html</anchorfile>
      <anchor>afa8cb0f4ae1873b6289616f36d9c9f1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MixedRadixInt</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MixedRadixInt.html</anchorfile>
      <anchor>a0cd6be7755e5583d2d6e721fdaf07d76</anchor>
      <arglist>(List&lt; Integer &gt; digits, List&lt; Integer &gt; radixes, List&lt; Integer &gt; permutation)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numDigits</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MixedRadixInt.html</anchorfile>
      <anchor>adb443a130c70b01f745dd7adbb7abf64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MixedRadixInt.html</anchorfile>
      <anchor>af16e8b6a0ec3334cf813e57b03bb2e21</anchor>
      <arglist>(int v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMagnitude</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MixedRadixInt.html</anchorfile>
      <anchor>a02a04f72d2111bb735d2108d1bfda429</anchor>
      <arglist>(int v)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MixedRadixInt.html</anchorfile>
      <anchor>a08ff427dab0c74290049867a7b9cc7d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final MixedRadixInt</type>
      <name>ZERO</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1MixedRadixInt.html</anchorfile>
      <anchor>a632b5c06d06d7c58f4f88f7a34a903f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::ModeInstance</name>
    <filename>classorg_1_1lflang_1_1generator_1_1ModeInstance.html</filename>
    <base>org.lflang.generator.NamedInstance&lt; Mode &gt;</base>
    <class kind="class">org::lflang::generator::ModeInstance::Transition</class>
    <member kind="function">
      <type>boolean</type>
      <name>contains</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance.html</anchorfile>
      <anchor>a8a5bd2e8c41e33fbf786d9454f3044cb</anchor>
      <arglist>(NamedInstance&lt;?&gt; instance)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getDefinition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a0b661e9f7d91c7d9f2c815e968aa10c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a6d6af7cccc27c21f342d765f21ca7712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getFullName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a012826abad45e46018ec7936726aec7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getFullNameWithJoiner</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>af5d13b4be19a550c0027c07ce7614aef</anchor>
      <arglist>(String joiner)</arglist>
    </member>
    <member kind="function">
      <type>ModeInstance</type>
      <name>getMode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a2cb04f0ba64b9db0066e5e25beefb853</anchor>
      <arglist>(boolean direct)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance.html</anchorfile>
      <anchor>a13ae36af68b6e3b1e443e2dfec4f8f10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>getParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a55b5c007c12d2316fb3d70a2e6dd8583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac3ed25f6147d2eb95e04a9e8d6aecbae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ab29bfc4f3c55758936059ba704ed5271</anchor>
      <arglist>(ReactorInstance container)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isInitial</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance.html</anchorfile>
      <anchor>abec9d7ed1ff90854920739f7cc0598c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; ReactorInstance &gt;</type>
      <name>parents</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a86ea09ffc1ff03d3dec96584f91b7b9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>root</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance.html</anchorfile>
      <anchor>af67bc2b8cdb753ac2945da6add29d31f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupTranstions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance.html</anchorfile>
      <anchor>a255c0bde01f31cd678492b9c15199ab7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a373142cf51403bb5f3cadd40208b7bd2</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance.html</anchorfile>
      <anchor>ae9a431354c05251e38638a4e0df17601</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>uniqueID</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>af120660533fab9c85cc3359723e97f27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>List&lt; ActionInstance &gt;</type>
      <name>actions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance.html</anchorfile>
      <anchor>a187d1af9ccbe745eefc706eca8b65f1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; ReactorInstance &gt;</type>
      <name>instantiations</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance.html</anchorfile>
      <anchor>a73053aaa3048a665db6355d0c14668d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; ReactionInstance &gt;</type>
      <name>reactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance.html</anchorfile>
      <anchor>a9cf56222b4f6043d49817afca94c08c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; TimerInstance &gt;</type>
      <name>timers</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance.html</anchorfile>
      <anchor>a7a0ea6b0d2a717a2c657e6f0e3174e29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; Transition &gt;</type>
      <name>transitions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance.html</anchorfile>
      <anchor>ab31ab42c92d481cdad2473f044dbc400</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>identifierLengthLimit</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac379d6bf5321bb1fa1cbc1e8db1f4009</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ModeInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance.html</anchorfile>
      <anchor>a74d2f92f1389bec8c2460ca5204009a5</anchor>
      <arglist>(Mode definition, ReactorInstance parent)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>depth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac04ad303921e771e9f09615137b2608f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>T</type>
      <name>definition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a871444834354a0e77b4b7bcef94cb07a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>ReactorInstance</type>
      <name>parent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ad7dd92ad472a49a094dff3360335bfdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>HashMap&lt; String, Integer &gt;</type>
      <name>uniqueIDCount</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a28d661c783189176e86e43d54e4b8f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>int</type>
      <name>width</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a28cb0ab446f4de043e16c9327c198ab0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::ModeInstance::Transition</name>
    <filename>classorg_1_1lflang_1_1generator_1_1ModeInstance_1_1Transition.html</filename>
    <base>org.lflang.generator.NamedInstance&lt; VarRef &gt;</base>
    <member kind="function">
      <type>T</type>
      <name>getDefinition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a0b661e9f7d91c7d9f2c815e968aa10c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a6d6af7cccc27c21f342d765f21ca7712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getFullName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a012826abad45e46018ec7936726aec7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getFullNameWithJoiner</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>af5d13b4be19a550c0027c07ce7614aef</anchor>
      <arglist>(String joiner)</arglist>
    </member>
    <member kind="function">
      <type>ModeInstance</type>
      <name>getMode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a2cb04f0ba64b9db0066e5e25beefb853</anchor>
      <arglist>(boolean direct)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance_1_1Transition.html</anchorfile>
      <anchor>a619aa0f161cfe2ca03f319ecd7a88aad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>getParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a55b5c007c12d2316fb3d70a2e6dd8583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ModeTransition</type>
      <name>getType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance_1_1Transition.html</anchorfile>
      <anchor>a80a7e8ba80221ab1a90eb64af182b1db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac3ed25f6147d2eb95e04a9e8d6aecbae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ab29bfc4f3c55758936059ba704ed5271</anchor>
      <arglist>(ReactorInstance container)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; ReactorInstance &gt;</type>
      <name>parents</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a86ea09ffc1ff03d3dec96584f91b7b9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>root</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance_1_1Transition.html</anchorfile>
      <anchor>a2bf160e1680048dee7734503114e909a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a373142cf51403bb5f3cadd40208b7bd2</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>uniqueID</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>af120660533fab9c85cc3359723e97f27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>final ReactionInstance</type>
      <name>reaction</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance_1_1Transition.html</anchorfile>
      <anchor>a3b26810270ba44d2da08cfc4387dc2a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final ModeInstance</type>
      <name>source</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance_1_1Transition.html</anchorfile>
      <anchor>ab66cbf82e840cb18d03fe63b34b652d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final ModeInstance</type>
      <name>target</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance_1_1Transition.html</anchorfile>
      <anchor>a185d3ca5aec01908b04f135088383268</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final ModeTransition</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance_1_1Transition.html</anchorfile>
      <anchor>a4ae6c8a9791a03e321dc308a7e0875f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>identifierLengthLimit</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac379d6bf5321bb1fa1cbc1e8db1f4009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>depth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac04ad303921e771e9f09615137b2608f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type></type>
      <name>Transition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ModeInstance_1_1Transition.html</anchorfile>
      <anchor>a259e6104134da9d53615364f8b9b87ec</anchor>
      <arglist>(ModeInstance source, ModeInstance target, ReactionInstance reaction, VarRef definition)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>T</type>
      <name>definition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a871444834354a0e77b4b7bcef94cb07a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>ReactorInstance</type>
      <name>parent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ad7dd92ad472a49a094dff3360335bfdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>HashMap&lt; String, Integer &gt;</type>
      <name>uniqueIDCount</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a28d661c783189176e86e43d54e4b8f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>int</type>
      <name>width</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a28cb0ab446f4de043e16c9327c198ab0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::NamedInstance</name>
    <filename>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type>T</type>
      <name>getDefinition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a0b661e9f7d91c7d9f2c815e968aa10c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a6d6af7cccc27c21f342d765f21ca7712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getFullName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a012826abad45e46018ec7936726aec7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getFullNameWithJoiner</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>af5d13b4be19a550c0027c07ce7614aef</anchor>
      <arglist>(String joiner)</arglist>
    </member>
    <member kind="function">
      <type>ModeInstance</type>
      <name>getMode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a2cb04f0ba64b9db0066e5e25beefb853</anchor>
      <arglist>(boolean direct)</arglist>
    </member>
    <member kind="function">
      <type>abstract String</type>
      <name>getName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a9c32fa61b16083b3e47139f88c58e0bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>getParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a55b5c007c12d2316fb3d70a2e6dd8583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>getParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a58b68a1c0aced88beca70db9561c4896</anchor>
      <arglist>(int d)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac3ed25f6147d2eb95e04a9e8d6aecbae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ab29bfc4f3c55758936059ba704ed5271</anchor>
      <arglist>(ReactorInstance container)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; ReactorInstance &gt;</type>
      <name>parents</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a86ea09ffc1ff03d3dec96584f91b7b9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>root</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a7db346a838dbf9d4cca4be45a56e34d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a373142cf51403bb5f3cadd40208b7bd2</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>uniqueID</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>af120660533fab9c85cc3359723e97f27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>identifierLengthLimit</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac379d6bf5321bb1fa1cbc1e8db1f4009</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>NamedInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a186a8092380b44c8a879d75a27d91f7c</anchor>
      <arglist>(T definition, ReactorInstance parent)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>depth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac04ad303921e771e9f09615137b2608f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>T</type>
      <name>definition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a871444834354a0e77b4b7bcef94cb07a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>ReactorInstance</type>
      <name>parent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ad7dd92ad472a49a094dff3360335bfdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>HashMap&lt; String, Integer &gt;</type>
      <name>uniqueIDCount</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a28d661c783189176e86e43d54e4b8f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>int</type>
      <name>width</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a28cb0ab446f4de043e16c9327c198ab0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::ParameterInstance</name>
    <filename>classorg_1_1lflang_1_1generator_1_1ParameterInstance.html</filename>
    <base>org.lflang.generator.NamedInstance&lt; Parameter &gt;</base>
    <member kind="function">
      <type>Initializer</type>
      <name>getActualValue</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ParameterInstance.html</anchorfile>
      <anchor>a84fd7e1076248504a03eb6c001692650</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getDefinition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a0b661e9f7d91c7d9f2c815e968aa10c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a6d6af7cccc27c21f342d765f21ca7712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getFullName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a012826abad45e46018ec7936726aec7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getFullNameWithJoiner</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>af5d13b4be19a550c0027c07ce7614aef</anchor>
      <arglist>(String joiner)</arglist>
    </member>
    <member kind="function">
      <type>ModeInstance</type>
      <name>getMode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a2cb04f0ba64b9db0066e5e25beefb853</anchor>
      <arglist>(boolean direct)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ParameterInstance.html</anchorfile>
      <anchor>ab3a6855cd66af3bc748dff31b4e1c983</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Assignment</type>
      <name>getOverride</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ParameterInstance.html</anchorfile>
      <anchor>add5aba1355f30d4bf1aa1b8913172ae4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>getParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a55b5c007c12d2316fb3d70a2e6dd8583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac3ed25f6147d2eb95e04a9e8d6aecbae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ab29bfc4f3c55758936059ba704ed5271</anchor>
      <arglist>(ReactorInstance container)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParameterInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ParameterInstance.html</anchorfile>
      <anchor>a45d9c6b05d2ac9774e46a7cb2f65a1ac</anchor>
      <arglist>(Parameter definition, ReactorInstance parent)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; ReactorInstance &gt;</type>
      <name>parents</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a86ea09ffc1ff03d3dec96584f91b7b9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>root</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a7db346a838dbf9d4cca4be45a56e34d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a373142cf51403bb5f3cadd40208b7bd2</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ParameterInstance.html</anchorfile>
      <anchor>ae5b4f8a75426a8e00f14115bf6cd5693</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>uniqueID</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>af120660533fab9c85cc3359723e97f27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>InferredType</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ParameterInstance.html</anchorfile>
      <anchor>a2e2df389c44dbb89e37dd1714fe229ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>identifierLengthLimit</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac379d6bf5321bb1fa1cbc1e8db1f4009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>depth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac04ad303921e771e9f09615137b2608f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>T</type>
      <name>definition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a871444834354a0e77b4b7bcef94cb07a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>ReactorInstance</type>
      <name>parent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ad7dd92ad472a49a094dff3360335bfdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>HashMap&lt; String, Integer &gt;</type>
      <name>uniqueIDCount</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a28d661c783189176e86e43d54e4b8f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>int</type>
      <name>width</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a28cb0ab446f4de043e16c9327c198ab0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::PortInstance</name>
    <filename>classorg_1_1lflang_1_1generator_1_1PortInstance.html</filename>
    <base>org.lflang.generator.TriggerInstance&lt; Port &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>clearCaches</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>a4d9619b8882a0dd2e5e8b97b7a37fb66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; Connection &gt;</type>
      <name>connectionsFrom</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>a55866f43df568b86cd72ecb760ea1d4a</anchor>
      <arglist>(PortInstance upstreamPort)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; Connection &gt;</type>
      <name>connectionsTo</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>ad2eddfcef11d013561748dea41b54190</anchor>
      <arglist>(PortInstance downstreamPort)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; SendRange &gt;</type>
      <name>eventualDestinations</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>a3eced36dbd547fdd38fccc42a68aa9b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; RuntimeRange&lt; PortInstance &gt; &gt;</type>
      <name>eventualSources</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>a3031ac68133546f9a20e7a66f17f750d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; SendRange &gt;</type>
      <name>getDependentPorts</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>a80fe45fdf46cda45887db4751adf1836</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>getDependentReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>afe6d1d1335550edf242f39f976353787</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; RuntimeRange&lt; PortInstance &gt; &gt;</type>
      <name>getDependsOnPorts</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>a19462a2baa0a4c67dcd09ea59724a700</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>getDependsOnReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a7d499b9439fef9389e065201524094ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLevelUpperBound</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>a9ee59a702c7f45d7d4cda3c48739fe0a</anchor>
      <arglist>(MixedRadixInt index)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a1758955ff9f326f7b3696cab2bd34d48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isInput</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>a1e190571086e8eaa15f51354e95eda88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isMultiport</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>a9f988886f4e5029754b936ea3b7d0771</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isOutput</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>a32e56324af42fc6728cd6ae93dc45b0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isReset</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>ac3f6ecf720f118e6a7fd6eac7d78ceb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isShutdown</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a599b1309beadd8d1df5efca63163c276</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isStartup</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>aaa731aee3ebeeb2549a9660abc413cd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeValue</type>
      <name>minDelayFrom</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>a2c96dd190f17401b80a2c340943921b5</anchor>
      <arglist>(PortInstance upstreamPort)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PortInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>a7e387ade393c83189e1b7237bab73a23</anchor>
      <arglist>(Port definition, ReactorInstance parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PortInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>a8b14736026edd8089d980c71f8837fcb</anchor>
      <arglist>(Port definition, ReactorInstance parent, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordIndexForPortChannel</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>aff7eb42e4bdc3318fc96571e343162c2</anchor>
      <arglist>(MixedRadixInt index, int level)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>a751e88657b34d79b172a79ad0b30d7e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="package" static="yes">
      <type>static TriggerInstance&lt; BuiltinTriggerVariable &gt;</type>
      <name>builtinTrigger</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a70d25467ac1247a588eed4d907f0e806</anchor>
      <arglist>(BuiltinTriggerRef trigger, ReactorInstance parent)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>List&lt; SendRange &gt;</type>
      <name>dependentPorts</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>a1e671223b06a8cb8841f5860d2e51957</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>dependentReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a5707123aa8691ccd7c64b54f87fdd789</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>List&lt; RuntimeRange&lt; PortInstance &gt; &gt;</type>
      <name>dependsOnPorts</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>a2985969e3d584d18031cda9940ddfca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>dependsOnReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a2dd11fae53d58c404f4f4ed48a6dd939</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Map&lt; PortInstance, List&lt; Connection &gt; &gt;</type>
      <name>downstreamConnections</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>af6f2b72d44a07c635487fbdde9608222</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>boolean</type>
      <name>isMultiport</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>ac92c31af520ff0af52c9c4803e89203b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Map&lt; PortInstance, List&lt; Connection &gt; &gt;</type>
      <name>upstreamConnections</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1PortInstance.html</anchorfile>
      <anchor>adf58939a10e2807ca35cfa7464a87e97</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::Position</name>
    <filename>classorg_1_1lflang_1_1generator_1_1Position.html</filename>
    <member kind="function">
      <type>int</type>
      <name>compareTo</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Position.html</anchorfile>
      <anchor>a944394d7d714a3b35cae13df733db8e3</anchor>
      <arglist>(Position o)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Position.html</anchorfile>
      <anchor>a550be0670e7bdb6bbd0dc340bbe6799a</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOneBasedColumn</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Position.html</anchorfile>
      <anchor>aa27e845ee87da539f849a8e2efb59ea9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOneBasedLine</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Position.html</anchorfile>
      <anchor>acb405f9b4b45b0798a4e3e1f838912ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getZeroBasedColumn</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Position.html</anchorfile>
      <anchor>a636c7c24e67e66f3829b021fc6dcfc7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getZeroBasedLine</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Position.html</anchorfile>
      <anchor>a306980c118a4aacfde1f763750dc0459</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Position.html</anchorfile>
      <anchor>a25f3c9150ad5880b17b32effdaf4eedd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Position</type>
      <name>minus</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Position.html</anchorfile>
      <anchor>ab25cfbe1f3bea81871987cf1c7bf4059</anchor>
      <arglist>(Position other)</arglist>
    </member>
    <member kind="function">
      <type>Position</type>
      <name>plus</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Position.html</anchorfile>
      <anchor>ac5c9294e896bf306b116f0d37c56662b</anchor>
      <arglist>(Position other)</arglist>
    </member>
    <member kind="function">
      <type>Position</type>
      <name>plus</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Position.html</anchorfile>
      <anchor>a0c16731c0aacf6ed783885dd14c1895b</anchor>
      <arglist>(String text)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Position.html</anchorfile>
      <anchor>a2503ea3846e5d554c2bc444565654271</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Position</type>
      <name>displacementOf</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Position.html</anchorfile>
      <anchor>af0b52faf8df84b9e965851660b8bf606</anchor>
      <arglist>(String text)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Position</type>
      <name>fromOffset</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Position.html</anchorfile>
      <anchor>a6a2d10ec8ffd2affe3cce0943acd2f70</anchor>
      <arglist>(int offset, String content)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Position</type>
      <name>fromOneBased</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Position.html</anchorfile>
      <anchor>a1b03007c59aefd633b9cd20fe898bb6e</anchor>
      <arglist>(int line, int column)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Position</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Position.html</anchorfile>
      <anchor>a03c79000394fec50db6d7485f8068fce</anchor>
      <arglist>(String s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Position</type>
      <name>fromZeroBased</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Position.html</anchorfile>
      <anchor>adae3b0ed8afddae6f4c441a1b2a82d1d</anchor>
      <arglist>(int line, int column)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>removeNamedCapturingGroups</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Position.html</anchorfile>
      <anchor>af840b3051042aa2b7d0480ef61616549</anchor>
      <arglist>(Pattern regex)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Position</type>
      <name>ORIGIN</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Position.html</anchorfile>
      <anchor>a35003526417518b8e54b1a7ef86ecd5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Pattern</type>
      <name>PATTERN</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Position.html</anchorfile>
      <anchor>aae4b8667420567c54a916ec9ce47916c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::python::PyFileConfig</name>
    <filename>classorg_1_1lflang_1_1generator_1_1python_1_1PyFileConfig.html</filename>
    <base>org.lflang.generator.c.CFileConfig</base>
    <member kind="function">
      <type>void</type>
      <name>doClean</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a2f3cedf4124e5cc9292abc749a636c50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LFCommand</type>
      <name>getCommand</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a8b0ab00d8e9aeb0526396978b46cdbff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getDirectory</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a0805de9a6fdf878db785f32bf569e9e7</anchor>
      <arglist>(Resource r)</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getExecutable</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a21438a70c07ade97df6c4eb040c78df5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getIncludePath</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CFileConfig.html</anchorfile>
      <anchor>a9dbbc9f86fc55126f175bc5dc8e45812</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getModelGenBasePath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aab302b75642dbc55010558897d90d974</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getModelGenPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aaadd154f0fdb26cd627f67f3cbbe8112</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getOutPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aadbddca3925f8b7ca7b77123a25dc275</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getRuntimeIncludePath</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CFileConfig.html</anchorfile>
      <anchor>af533499ff32f54ee97bbdae2d96b976d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getSrcGenBasePath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ac771a84f3498f17e042f76172757d941</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getSrcGenPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ae26b50321c8ce7d6f82079b0efbb25fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getSrcGenPkgPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a13a4ed53a8ac5a2dd38fd8585a7fffff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PyFileConfig</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PyFileConfig.html</anchorfile>
      <anchor>a85a7d1b30f7155ee0e0bdc8dd02f053f</anchor>
      <arglist>(Resource resource, Path srcGenBasePath, boolean useHierarchicalBin)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Path</type>
      <name>findPackageRoot</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a1f4440a73ce696b26daf6f8837981a00</anchor>
      <arglist>(final Path input, final Consumer&lt; String &gt; printWarning)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Resource</type>
      <name>getResource</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aa607ba3c51d2917175d4e50d713d7273</anchor>
      <arglist>(File file, Provider&lt; ResourceSet &gt; resourceSetProvider)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Resource</type>
      <name>getResource</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a90959c68962e8603088ffd34739ecdbd</anchor>
      <arglist>(Path path, XtextResourceSet xtextResourceSet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Path</type>
      <name>getSrcGenRoot</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a7fa5856208463eb1d79a283ac2a09d63</anchor>
      <arglist>(IFileSystemAccess2 fsa)</arglist>
    </member>
    <member kind="variable">
      <type>final Path</type>
      <name>binPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aa9e8742b0a791cc329eb06368a027f92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final IResource</type>
      <name>iResource</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a819b6b0f2489fca2b79521f8d2dbb850</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a826734253724b14eab96b52238ce03f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Resource</type>
      <name>resource</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a6ae8ffe20be19509655e2f39e8a0dae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Path</type>
      <name>srcFile</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a99e7606f0d8f9dc7d27f6f7394a2097e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Path</type>
      <name>srcPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>abd8fa0fe4c6d554309bd1aa576b8b65a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Path</type>
      <name>srcPkgPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a9873c33b25d6a3e668d96d1068a6dd8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final boolean</type>
      <name>useHierarchicalBin</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ac86a63029d65b24543f6ed15a4cc1423</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DEFAULT_BIN_DIR</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a6f81faca9bbf6ea82f4c9aa900a63943</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DEFAULT_MODEL_GEN_DIR</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ac5cb1fc2714e098bcaed2f4364eb3851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DEFAULT_SRC_DIR</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a8366f237b17ebf31b70104132fdc4e74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DEFAULT_SRC_GEN_DIR</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a89fcf5c51736e2119dd38727dea7467a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>getExecutableExtension</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PyFileConfig.html</anchorfile>
      <anchor>a92996b892de19738b6518ed9a4a34fb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Path</type>
      <name>getSubPkgPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>aae6b918b653bb024955b75d657b7c0ff</anchor>
      <arglist>(Path srcPath)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>modelGenBasePath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ada9e29269897795f6441df88fdd42171</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>modelGenPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>ae987c0a32474fbb3c9befce8ee22668d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>srcGenBasePath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>acea22dc46408617ec61f514a417ca272</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Path</type>
      <name>srcGenPath</name>
      <anchorfile>classorg_1_1lflang_1_1FileConfig.html</anchorfile>
      <anchor>a03061541a3ca5a3d3b6ede39f9c122c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::python::PythonActionGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1python_1_1PythonActionGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateAliasTypeDef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonActionGenerator.html</anchorfile>
      <anchor>ab43938d63eda4dfb604ab33361a67fc7</anchor>
      <arglist>(TypeParameterizedReactor tpr, Action action, String genericActionType)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::python::PythonDelayBodyGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1python_1_1PythonDelayBodyGenerator.html</filename>
    <base>org.lflang.generator.c.CDelayBodyGenerator</base>
    <member kind="function">
      <type>void</type>
      <name>finalizeReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonDelayBodyGenerator.html</anchorfile>
      <anchor>a12cd8a54a70568997b32614bcb569338</anchor>
      <arglist>(Reaction delayReaction, Reaction forwardReaction)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>generateAfterDelaysWithVariableWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CDelayBodyGenerator.html</anchorfile>
      <anchor>a5730508e7f0d57bd702122afadb4594e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateDelayBody</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonDelayBodyGenerator.html</anchorfile>
      <anchor>a36c18d5e4bcf5b6b964f8cc44651e8e6</anchor>
      <arglist>(Action action, VarRef port)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateDelayGeneric</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CDelayBodyGenerator.html</anchorfile>
      <anchor>a9c3a1fb7eeaa12d7242e1cd84b62f041</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateForwardBody</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonDelayBodyGenerator.html</anchorfile>
      <anchor>aca9ba0b04fece265e8cf7e0d5eef3f25</anchor>
      <arglist>(Action action, VarRef port)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PythonDelayBodyGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonDelayBodyGenerator.html</anchorfile>
      <anchor>aefd88fe508559b6f00321a7a77e11041</anchor>
      <arglist>(PythonTypes types)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>GEN_DELAY_CLASS_NAME</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1DelayBodyGenerator.html</anchorfile>
      <anchor>a53b472bb435691a61c44c039ebaa9d47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CTypes</type>
      <name>types</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CDelayBodyGenerator.html</anchorfile>
      <anchor>a1102d45a275f4fc11636ddd5339c6d2d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::python::PythonGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</filename>
    <base>org.lflang.generator.c.CCmakeGenerator.SetUpMainTarget</base>
    <member kind="function">
      <type>void</type>
      <name>doGenerate</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>a82524ebbeba32d5018592d255b95e020</anchor>
      <arglist>(Resource resource, LFGeneratorContext context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateAuxiliaryStructs</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>a219a86c27fb4e52857c5e5badb7a3357</anchor>
      <arglist>(CodeBuilder builder, TypeParameterizedReactor tpr, boolean userFacing)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generateDirectives</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>aecfa36fbd40fa871c72f33f5511d5bb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generatePythonCode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>aae930b08140595cbe631af741bce267a</anchor>
      <arglist>(String pyModuleName)</arglist>
    </member>
    <member kind="function">
      <type>Map&lt; Path, CodeMap &gt;</type>
      <name>generatePythonFiles</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>a94cc16d3e7642564862c35a43638aa2f</anchor>
      <arglist>(String lfModuleName, String pyModuleName, String pyFileName)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>generatePythonReactorClasses</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>afdd059d82f78709f08d5cf922061eb16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getCmakeCode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>a205da9690fe1231f8db72cba1a5a1d31</anchor>
      <arglist>(boolean hasMain, String executableName, Stream&lt; String &gt; cSources)</arglist>
    </member>
    <member kind="function">
      <type>Target</type>
      <name>getTarget</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>a3d65395ee8e430c0f1dc0ff111e4dc00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TargetTypes</type>
      <name>getTargetTypes</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>ac057ceeb8259f372e6f22c209411da97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isOSCompatible</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>a68ec764c01fa4a426c90faa3be0cb340</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processProtoFile</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>a7056d943b0f025ea9a50a871ea85e95e</anchor>
      <arglist>(String filename)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PythonGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>ac1f717fc4d5cd6f03b551ae82cea3d3f</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>additionalPostProcessingForModes</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>a120340734a090799ec661a5a62819899</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>copyTargetFiles</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>a096f1d14720ae2bca9e3b2aa47e34c41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateMethods</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>a4c4b53adaa59e690e25b9929ab2c93eb</anchor>
      <arglist>(CodeBuilder src, TypeParameterizedReactor reactor)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateParameterInitialization</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>a0538206031f1098bcfaae437521231d9</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateReaction</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>ab4a3f3dc763b7b61e8a91de577fc4cbf</anchor>
      <arglist>(CodeBuilder src, Reaction reaction, TypeParameterizedReactor tpr, int reactionIndex)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateReactorClassHeaders</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>ac8573010598c8584223320e2c8c1e298</anchor>
      <arglist>(TypeParameterizedReactor tpr, String headerName, CodeBuilder header, CodeBuilder src)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateReactorInstanceExtension</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>adec998a1480df92fcdbe0ae14545b99f</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateSelfStructExtension</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>ab792d8576dfd0395bc07ea145a56ad30</anchor>
      <arglist>(CodeBuilder selfStructBody, Reactor reactor, CodeBuilder constructorCode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateStateVariableInitializations</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>ae6db4721cbcbdd7c944d6b3157412dc1</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>generateTopLevelPreambles</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>af2a5000297fa55dc199ec95462075dc4</anchor>
      <arglist>(Reactor ignored)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>generateUserPreamblesForReactor</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>a7bd61cd7fbdd9bce077b04e8c675b41b</anchor>
      <arglist>(Reactor reactor, CodeBuilder src)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>getConflictingConnectionsInModalReactorsBody</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>aacc852f058104fcb73006e83a74ab711</anchor>
      <arglist>(VarRef sourceRef, VarRef destRef)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>PythonDockerGenerator</type>
      <name>getDockerGenerator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>a0503805e6aad133a914bbf0ec86087b8</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleProtoFiles</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>af00a81e28cf43c3b0d64ad11a310667f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>setUpGeneralParameters</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>adcf1fce9fd2362d761a3485247feb4cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>String</type>
      <name>genericActionType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>a8ba05ee0c6a9d598ef8fb472630906e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>String</type>
      <name>genericPortType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonGenerator.html</anchorfile>
      <anchor>a8c8184bacb3fa2eb89f0af13cd476d6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::python::PythonMainFunctionGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1python_1_1PythonMainFunctionGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateCode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonMainFunctionGenerator.html</anchorfile>
      <anchor>acb6456de5c960774751df5201321d646</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::python::PythonMethodGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1python_1_1PythonMethodGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateMethod</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonMethodGenerator.html</anchorfile>
      <anchor>a6196344e0cff466c3a194d6fa7a6ecde</anchor>
      <arglist>(Method method)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateMethods</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonMethodGenerator.html</anchorfile>
      <anchor>af0faaa7fd939501100c153ee0fd2fcf4</anchor>
      <arglist>(Reactor reactor)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::python::PythonModeGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1python_1_1PythonModeGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generateResetReactionsIfNeeded</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonModeGenerator.html</anchorfile>
      <anchor>ad5165a8b1cd84332746317b3da8e0450</anchor>
      <arglist>(List&lt; Reactor &gt; reactors)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::python::PythonParameterGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1python_1_1PythonParameterGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generatePythonGetters</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonParameterGenerator.html</anchorfile>
      <anchor>a7d923d77522862507c053459eef2bc41</anchor>
      <arglist>(ReactorDecl decl)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generatePythonInitializer</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonParameterGenerator.html</anchorfile>
      <anchor>ac324e61abc258dc5caeb0c1d069b7f0a</anchor>
      <arglist>(ParameterInstance p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generatePythonInstantiations</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonParameterGenerator.html</anchorfile>
      <anchor>a21ccf293f7f22fefa45816e011f7111b</anchor>
      <arglist>(ReactorDecl decl, PythonTypes types)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::python::PythonPortGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1python_1_1PythonPortGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generateActionVariableToSendToPythonReaction</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonPortGenerator.html</anchorfile>
      <anchor>a6fb79cc877dcb950720afaa375755bc5</anchor>
      <arglist>(List&lt; String &gt; pyObjects, Action action, ReactorDecl decl)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateAliasTypeDef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonPortGenerator.html</anchorfile>
      <anchor>a8e28a90824debdfcd3c2915ca3ae2d98</anchor>
      <arglist>(TypeParameterizedReactor tpr, Port port, boolean isTokenType, String genericPortType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generateInputVariablesToSendToPythonReaction</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonPortGenerator.html</anchorfile>
      <anchor>a2b8c17f07e30659d1f02923106e09ce0</anchor>
      <arglist>(List&lt; String &gt; pyObjects, Input input, ReactorDecl decl)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generateOutputVariablesToSendToPythonReaction</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonPortGenerator.html</anchorfile>
      <anchor>abe9d802eff2fea7fb8a4e28652be3880</anchor>
      <arglist>(List&lt; String &gt; pyObjects, Output output)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generatePortVariablesToSendToPythonReaction</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonPortGenerator.html</anchorfile>
      <anchor>a7727e2db77376c0fcdb572fbf28434bc</anchor>
      <arglist>(List&lt; String &gt; pyObjects, VarRef port, ReactorDecl decl)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generatePythonListForContainedBank</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonPortGenerator.html</anchorfile>
      <anchor>a649788f4a79f7dc422cc5fa4b367939e</anchor>
      <arglist>(String reactorName, Port port, String widthSpec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generatePythonPortVariableInReaction</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonPortGenerator.html</anchorfile>
      <anchor>a37e26203505d49b32d78c93127c2c626</anchor>
      <arglist>(VarRef port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateVariablesForSendingToContainedReactors</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonPortGenerator.html</anchorfile>
      <anchor>abde26175c79a8a29d9dd4e8d6c67eb04</anchor>
      <arglist>(List&lt; String &gt; pyObjects, Instantiation definition, Port port)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>NONMULTIPORT_WIDTHSPEC</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonPortGenerator.html</anchorfile>
      <anchor>a0cea1b30385ef0cb928a714b93c4d39d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::python::PythonPreambleGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1python_1_1PythonPreambleGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateCDefineDirectives</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonPreambleGenerator.html</anchorfile>
      <anchor>a7e632be91c0db7ff3d7c4fb97b744ba2</anchor>
      <arglist>(TargetConfig targetConfig, Path srcGenPath, boolean hasModalReactors)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateCIncludeStatements</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonPreambleGenerator.html</anchorfile>
      <anchor>ab68a8fa1d160f63fbbbcf68d90a3e107</anchor>
      <arglist>(TargetConfig targetConfig, boolean CCppMode, boolean hasModalReactors)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generatePythonPreambles</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonPreambleGenerator.html</anchorfile>
      <anchor>a2d884cda7c7616c884ee2e1572d08891</anchor>
      <arglist>(List&lt; Preamble &gt; preambles)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::python::PythonReactionGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactionGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateCPythonDeadlineCaller</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactionGenerator.html</anchorfile>
      <anchor>aca6d8fb56fd0a89af042537ac3c4e6c0</anchor>
      <arglist>(TypeParameterizedReactor r, int reactionIndex, List&lt; String &gt; pyObjects)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateCPythonDeadlineFunctionName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactionGenerator.html</anchorfile>
      <anchor>af8ed11897b36a67efa592c5b6a03ae9d</anchor>
      <arglist>(int reactionIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateCPythonReactionCaller</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactionGenerator.html</anchorfile>
      <anchor>adc3241b23d2c30078cb92a78fb20b0fa</anchor>
      <arglist>(TypeParameterizedReactor reactor, int reactionIndex, List&lt; String &gt; pyObjects, String inits)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateCPythonReactionFunctionName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactionGenerator.html</anchorfile>
      <anchor>a581c18f9a0118a0fb49d53454d4596bd</anchor>
      <arglist>(int reactionIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateCPythonReactionLinker</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactionGenerator.html</anchorfile>
      <anchor>aa7f35459de16a6094d93a5f780ca7ac5</anchor>
      <arglist>(ReactorInstance instance, ReactionInstance reaction, String nameOfSelfStruct)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateCPythonReactionLinkers</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactionGenerator.html</anchorfile>
      <anchor>a2ab3244ab253c158e73a3f014edcd2d9</anchor>
      <arglist>(ReactorInstance instance, Instantiation mainDef)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateCPythonSTPCaller</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactionGenerator.html</anchorfile>
      <anchor>abd8ce1e56196bc1ad711243f2a7a17b7</anchor>
      <arglist>(TypeParameterizedReactor r, int reactionIndex, List&lt; String &gt; pyObjects)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateCPythonSTPFunctionName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactionGenerator.html</anchorfile>
      <anchor>a14f6c38c0ec0abc528ad4f932fd5546f</anchor>
      <arglist>(int reactionIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateCReaction</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactionGenerator.html</anchorfile>
      <anchor>a1dac84fed42a60249a0696bee7a4b2e1</anchor>
      <arglist>(Reaction reaction, TypeParameterizedReactor tpr, Reactor r, int reactionIndex, Instantiation mainDef, MessageReporter messageReporter, CTypes types)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateFunction</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactionGenerator.html</anchorfile>
      <anchor>a4d9909786a863d2b2cc668605a41d1ff</anchor>
      <arglist>(String header, String init, Code code, String pyCaller)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generatePythonDeadlineFunctionName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactionGenerator.html</anchorfile>
      <anchor>a1d90ae61c27ecfcf9c3e48ee67e848dc</anchor>
      <arglist>(int reactionIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generatePythonFunction</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactionGenerator.html</anchorfile>
      <anchor>a51548c5027272314a2a4a69b8f4c3459</anchor>
      <arglist>(String pythonFunctionName, String inits, String reactionBody, List&lt; String &gt; reactionParameters)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generatePythonReaction</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactionGenerator.html</anchorfile>
      <anchor>aa76a391eaae366ccdd3b7bfb00f3eebd</anchor>
      <arglist>(Reactor reactor, Reaction reaction, int reactionIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generatePythonReactionFunctionName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactionGenerator.html</anchorfile>
      <anchor>ae9e23b8e8db8ade403384b8b8c3fec09</anchor>
      <arglist>(int reactionIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>generatePythonReactionParametersAndInitializations</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactionGenerator.html</anchorfile>
      <anchor>a72622c937fb4e5da8e261553bf18e966</anchor>
      <arglist>(List&lt; String &gt; parameters, CodeBuilder inits, ReactorDecl decl, Reaction reaction)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generatePythonReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactionGenerator.html</anchorfile>
      <anchor>ab4d066d9cfed31ddfd5fed8769035ff7</anchor>
      <arglist>(Reactor reactor, List&lt; Reaction &gt; reactions)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generatePythonSTPFunctionName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactionGenerator.html</anchorfile>
      <anchor>ad75986db60c32e2bec6887c632f9ec2d</anchor>
      <arglist>(int reactionIndex)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::python::PythonReactorGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactorGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateListsToHoldClassInstances</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactorGenerator.html</anchorfile>
      <anchor>ab74e31810957b792cc9da7b90b32c1a3</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generatePythonClass</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactorGenerator.html</anchorfile>
      <anchor>a2249fd82a5010ff3c6a5251edb7107ef</anchor>
      <arglist>(ReactorInstance instance, List&lt; String &gt; instantiatedClasses, ReactorInstance main, PythonTypes types)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generatePythonClass</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactorGenerator.html</anchorfile>
      <anchor>a979dde779fe0f0b34b21bf612b85868a</anchor>
      <arglist>(ReactorInstance instance, ReactorInstance main, PythonTypes types)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generatePythonClassInstantiations</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonReactorGenerator.html</anchorfile>
      <anchor>a10e90bcb6671f4e39c0a6aa5033ff62e</anchor>
      <arglist>(ReactorInstance instance, ReactorInstance main)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::python::PythonStateGenerator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1python_1_1PythonStateGenerator.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generatePythonInitializer</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonStateGenerator.html</anchorfile>
      <anchor>a89a74c1797a5e4a79785ee9bf2012a58</anchor>
      <arglist>(StateVar state)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generatePythonInstantiations</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonStateGenerator.html</anchorfile>
      <anchor>aed73ed2bdc0227ad7805d3e5bf3fe7f9</anchor>
      <arglist>(ReactorDecl decl)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::python::PythonTypes</name>
    <filename>classorg_1_1lflang_1_1generator_1_1python_1_1PythonTypes.html</filename>
    <base>org.lflang.generator.c.CTypes</base>
    <member kind="function">
      <type>default String</type>
      <name>escapeIdentifier</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a6fb005ca8e89ff21310eb1f2869a7c18</anchor>
      <arglist>(String ident)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getPythonType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonTypes.html</anchorfile>
      <anchor>a92e025270192361c2e990da0f474f1f9</anchor>
      <arglist>(InferredType type)</arglist>
    </member>
    <member kind="function">
      <type>default String</type>
      <name>getTargetBracedListExpr</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a2babf7f7832b3075287836b0caceda66</anchor>
      <arglist>(BracedListExpression expr, InferredType typeOrNull)</arglist>
    </member>
    <member kind="function">
      <type>default String</type>
      <name>getTargetBracketListExpr</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a20ebd97caa978757eb73d61fd4912861</anchor>
      <arglist>(BracketListExpression expr, InferredType typeOrNull)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetParamRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonTypes.html</anchorfile>
      <anchor>a8d7f4dd49f8c703ff6dd6b717766320e</anchor>
      <arglist>(ParameterReference expr, InferredType typeOrNull)</arglist>
    </member>
    <member kind="function">
      <type>default String</type>
      <name>getTargetParenthesistListExpr</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a16a56b5bd119009e85c10b8e9ea771d4</anchor>
      <arglist>(ParenthesisListExpression expr, InferredType typeOrNull)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetTagType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>aa10804013137480e39e1a50c2fc8909a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetTimeExpr</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>ab5dc84664be8d694b1a8b53aafc59415</anchor>
      <arglist>(TimeValue time)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetTimeType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>aa67327341a195dd28df062b7eef12e26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>a1910224fcc7a2bcd9ec7f26d2bbdecbb</anchor>
      <arglist>(InferredType type)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetUndefinedType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonTypes.html</anchorfile>
      <anchor>a80bee1e47f8f41439b34705fd872f7e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getVariableDeclaration</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>a607ced37a52022a044f24e9112913f24</anchor>
      <arglist>(TypeParameterizedReactor tpr, InferredType type, String variableName, boolean initializer)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>supportsGenerics</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>ad02eb0a542999dfd866943198e55aedc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>cMacroName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>a6c38a28203e54cbbb1285920b6540008</anchor>
      <arglist>(TimeUnit unit)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PythonTypes</type>
      <name>generateParametersIn</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonTypes.html</anchorfile>
      <anchor>aaedd8da3d9c5c5a1c0561d7dd429a26a</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PythonTypes</type>
      <name>getInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonTypes.html</anchorfile>
      <anchor>aab9f5b229316b94adca14a8746459d16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static final Pattern</type>
      <name>arrayPattern</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CTypes.html</anchorfile>
      <anchor>a09a71fba301c77cb1499629637160329</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static final Pattern</type>
      <name>pointerPatternVariable</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonTypes.html</anchorfile>
      <anchor>ac1d14d5226fa1213ff7ef21d7a1b95b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::python::PythonValidator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1python_1_1PythonValidator.html</filename>
    <base>org.lflang.generator.Validator</base>
    <member kind="function">
      <type>final void</type>
      <name>doValidate</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Validator.html</anchorfile>
      <anchor>a2a2bfcf4a8ca13ac23c8436702c05eb3</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PythonValidator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonValidator.html</anchorfile>
      <anchor>ad0083ff67d6a2e75f2fd6b2b5569c711</anchor>
      <arglist>(FileConfig fileConfig, MessageReporter messageReporter, Map&lt; Path, CodeMap &gt; codeMaps, Set&lt; String &gt; protoNames)</arglist>
    </member>
    <member kind="function">
      <type>final int</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Validator.html</anchorfile>
      <anchor>a7de85c7271a8f9ae9d351cb61a2ea896</anchor>
      <arglist>(LFCommand command, CancelIndicator cancelIndicator)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Pair&lt; Strategy, Strategy &gt;</type>
      <name>getBuildReportingStrategies</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonValidator.html</anchorfile>
      <anchor>ae6046cea1a0ab30b795d9b2e91625b68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Collection&lt; ValidationStrategy &gt;</type>
      <name>getPossibleStrategies</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PythonValidator.html</anchorfile>
      <anchor>a5812d516ea8f095ee3dfe83846f5552f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>validationEnabledByDefault</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Validator.html</anchorfile>
      <anchor>a00c547a33c657025d27550723d4025d2</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::python::PyUtil</name>
    <filename>classorg_1_1lflang_1_1generator_1_1python_1_1PyUtil.html</filename>
    <base>org.lflang.generator.c.CUtil</base>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>actionRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a065cb9e041aba47479a9e1e1bb7b3c58</anchor>
      <arglist>(ActionInstance instance, String runtimeIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static HashSet&lt; String &gt;</type>
      <name>allIncludes</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a5eb3ffaab8a7fc3ad215afcdb0f8df32</anchor>
      <arglist>(TypeParameterizedReactor tpr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>bankIndex</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a9ae7b346ce6f8bc1f01b3b6ad90b52c8</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>bankIndexName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a4b9cee042cd11af59a76d0893403d21b</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>channelIndex</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a448b9b3a0cb910e5550c397349790977</anchor>
      <arglist>(PortInstance port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>channelIndexName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a088acc670aa314175c4f70d1ae24054b</anchor>
      <arglist>(PortInstance port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateGILAcquireCode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PyUtil.html</anchorfile>
      <anchor>a4e6d86876edba5bf42059b0f253e3b8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>generateGILReleaseCode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PyUtil.html</anchorfile>
      <anchor>ab246874219a19602f7a8976776bf8bc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>getName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a656705d258bbcbce6e4ce6ba903ee44b</anchor>
      <arglist>(TypeParameterizedReactor reactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>internalIncludeGuard</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a0f4dc466e59743dbd98e1a715af3f62d</anchor>
      <arglist>(TypeParameterizedReactor tpr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>abe9ae5ca2df7cfca62039c8e61a1a786</anchor>
      <arglist>(PortInstance port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>ab7d0ab19e38f898d81464a38e388fbfd</anchor>
      <arglist>(PortInstance port, boolean isNested, boolean includeChannelIndex, String runtimeIndex, String bankIndex, String channelIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a28ae8f530e7caadc5a7c1bcc5d881c10</anchor>
      <arglist>(PortInstance port, String runtimeIndex, String bankIndex, String channelIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRefInReaction</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a90fb0319be4420356a6f95888afa202a</anchor>
      <arglist>(VarRef reference, Integer bankIndex, Integer multiportIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRefName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>af46af088997d2c75ef491c7db1776325</anchor>
      <arglist>(PortInstance port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRefName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>aeb4bf3311ced7d34c25c7c7e2d2c7b26</anchor>
      <arglist>(PortInstance port, String runtimeIndex, String bankIndex, String channelIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRefNested</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a766dab5e92fd570b519343a0311603e0</anchor>
      <arglist>(PortInstance port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRefNested</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a667b0c49fd4977f33c365b1cf92267ba</anchor>
      <arglist>(PortInstance port, String runtimeIndex, String bankIndex, String channelIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRefNestedName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a06b68ba4213eedb62515f726f5ad2bd6</anchor>
      <arglist>(PortInstance port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>portRefNestedName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a8066516d8e5ead97ca28c17ef7fbf0ae</anchor>
      <arglist>(PortInstance port, String runtimeIndex, String bankIndex, String channelIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>pyBuildValueArgumentType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PyUtil.html</anchorfile>
      <anchor>a30be02eef789936cb6605eba31a814c9</anchor>
      <arglist>(String type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>reactionRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>aaf78d998ddab33c0ff0a8fc00d15b661</anchor>
      <arglist>(ReactionInstance reaction)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>reactionRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a87efe9f85ca2ef8ed7a0f1960d158e2f</anchor>
      <arglist>(ReactionInstance reaction, String runtimeIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>reactorRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PyUtil.html</anchorfile>
      <anchor>a7c660fbbf94b5c51c04ca617d21c88d6</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>reactorRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PyUtil.html</anchorfile>
      <anchor>a273a2cfb75ddedf96c5bdd14a1930a3f</anchor>
      <arglist>(ReactorInstance instance, String runtimeIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>reactorRefName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1python_1_1PyUtil.html</anchorfile>
      <anchor>ae39332bdac09f7eae8be55f252287d31</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>reactorRefNested</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a86f92884830a18449631fe32ef5e3b26</anchor>
      <arglist>(ReactorInstance reactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>reactorRefNested</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a62db15239be477b43220bd744f11934e</anchor>
      <arglist>(ReactorInstance reactor, String runtimeIndex, String bankIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>runtimeIndex</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a0ebae86cb14e67125bf84d59d23f2d04</anchor>
      <arglist>(ReactorInstance reactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>selfType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a9cc4c2e3a78cbc7d7c38a28ab0681c15</anchor>
      <arglist>(ReactorInstance instance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>selfType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>adacc82b6441afef6e37346c163f25933</anchor>
      <arglist>(TypeParameterizedReactor reactor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>triggerRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a648adfa8eb3def1624d5946fb35393b8</anchor>
      <arglist>(TriggerInstance&lt;? extends Variable &gt; instance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>triggerRef</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a2622e722a9f97a05e69904424d39fd3d</anchor>
      <arglist>(TriggerInstance&lt;? extends Variable &gt; instance, String runtimeIndex)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>triggerRefNested</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a7ea8350353c98634a8caa055397e1ea5</anchor>
      <arglist>(PortInstance port)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>triggerRefNested</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a7686acbc8c91d7f071de00f024bfe9e2</anchor>
      <arglist>(PortInstance port, String runtimeIndex, String bankIndex)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>ENVIRONMENT_VARIABLE_NAME</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a1c415a35381593c95ca569e739ccb4af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>NUM_ENVIRONMENT_VARIABLE_NAME</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>abfab338b6c73cb900103f106b3241211</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>RTI_BIN_SUFFIX</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a6835ca17261ba4c73ec7f3f4cfe101ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>RTI_DISTRIBUTION_SCRIPT_SUFFIX</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1c_1_1CUtil.html</anchorfile>
      <anchor>a03586154fdbba83d92a99c2464a84da7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::Range</name>
    <filename>classorg_1_1lflang_1_1generator_1_1Range.html</filename>
    <member kind="function">
      <type>int</type>
      <name>compareTo</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Range.html</anchorfile>
      <anchor>a5b14f9614f34619a4a5fa75eac5fb897</anchor>
      <arglist>(Range o)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>contains</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Range.html</anchorfile>
      <anchor>a8daecd9c30ccc1b151ec572af44e20bb</anchor>
      <arglist>(Position p)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Range.html</anchorfile>
      <anchor>aa5bee407b914c15a7f062ee061924395</anchor>
      <arglist>(Object o)</arglist>
    </member>
    <member kind="function">
      <type>Position</type>
      <name>getEndExclusive</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Range.html</anchorfile>
      <anchor>aaa2e3768495c2bfe50170ec351afa0ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Position</type>
      <name>getStartInclusive</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Range.html</anchorfile>
      <anchor>a51a63b1488cd8454e7a6f73132efbc09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Range.html</anchorfile>
      <anchor>a6540082c82ce12b5215befbb5db049a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Range.html</anchorfile>
      <anchor>ae65b6a5ad85d3904eecb2220bae4e02e</anchor>
      <arglist>(Position startInclusive, Position endExclusive)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Range.html</anchorfile>
      <anchor>a3bb99db1d67cf4f369653e3788598b03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range</type>
      <name>degenerateRange</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Range.html</anchorfile>
      <anchor>a893520d923a8957ab4fc61739a4f7e97</anchor>
      <arglist>(Position p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Range.html</anchorfile>
      <anchor>a24a751cbef3fa38d4397d3d9eb23f417</anchor>
      <arglist>(String s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Range</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Range.html</anchorfile>
      <anchor>afbef26224b48971a621ba63b6a5aa271</anchor>
      <arglist>(String s, Position relativeTo)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Pattern</type>
      <name>PATTERN</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Range.html</anchorfile>
      <anchor>a2b25e692d69cd447cbbc4dfab5141987</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::ReactionInstance</name>
    <filename>classorg_1_1lflang_1_1generator_1_1ReactionInstance.html</filename>
    <base>org.lflang.generator.NamedInstance&lt; Reaction &gt;</base>
    <class kind="class">org::lflang::generator::ReactionInstance::Runtime</class>
    <member kind="function">
      <type>void</type>
      <name>clearCaches</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance.html</anchorfile>
      <anchor>a7c27d36c14037734d68f5a61dcd56d32</anchor>
      <arglist>(boolean includingRuntimes)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>dependentReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance.html</anchorfile>
      <anchor>a26bb350ec1249b36db714b45c0ed8b9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>dependsOnReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance.html</anchorfile>
      <anchor>adab53a1fe5652ef473d09be93580aaf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>getContainingEnclaveReactor</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance.html</anchorfile>
      <anchor>a35f54e052383802c4f0fe24b2ab82b99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getDefinition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a0b661e9f7d91c7d9f2c815e968aa10c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a6d6af7cccc27c21f342d765f21ca7712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getFullName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a012826abad45e46018ec7936726aec7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getFullNameWithJoiner</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>af5d13b4be19a550c0027c07ce7614aef</anchor>
      <arglist>(String joiner)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; TimeValue &gt;</type>
      <name>getInferredDeadlines</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance.html</anchorfile>
      <anchor>a58af6aae75cfdfc6127a22d37e160fcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; TimeValue &gt;</type>
      <name>getInferredDeadlinesList</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance.html</anchorfile>
      <anchor>a3ab0e0874f73fd6c3ce1822715828b3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; Integer &gt;</type>
      <name>getLevels</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance.html</anchorfile>
      <anchor>a7e01b98a04ce95a770bba56376224a81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; Integer &gt;</type>
      <name>getLevelsList</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance.html</anchorfile>
      <anchor>a7952199328234af14da9f8401fe7b216</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ModeInstance</type>
      <name>getMode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a2cb04f0ba64b9db0066e5e25beefb853</anchor>
      <arglist>(boolean direct)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance.html</anchorfile>
      <anchor>ac69a3188abf9bf79c4b572d87365e0be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>getParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a55b5c007c12d2316fb3d70a2e6dd8583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; Runtime &gt;</type>
      <name>getRuntimeInstances</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance.html</anchorfile>
      <anchor>a034af26af698e81b6376d17b2b644b5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac3ed25f6147d2eb95e04a9e8d6aecbae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ab29bfc4f3c55758936059ba704ed5271</anchor>
      <arglist>(ReactorInstance container)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; ReactorInstance &gt;</type>
      <name>parents</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a86ea09ffc1ff03d3dec96584f91b7b9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReactionInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance.html</anchorfile>
      <anchor>a6eb5eefee8c9776054856bbe29ac369d</anchor>
      <arglist>(Reaction definition, ReactorInstance parent, int index)</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>root</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a7db346a838dbf9d4cca4be45a56e34d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a373142cf51403bb5f3cadd40208b7bd2</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance.html</anchorfile>
      <anchor>afeeabdf7f01afcaa613d2ca3cc12ba4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>uniqueID</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>af120660533fab9c85cc3359723e97f27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>DeadlineInstance</type>
      <name>declaredDeadline</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance.html</anchorfile>
      <anchor>a75c3add4c1fd696e102fab72fbaa8ebc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Set&lt; TriggerInstance&lt;? extends Variable &gt; &gt;</type>
      <name>effects</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance.html</anchorfile>
      <anchor>afb592b15395730db29404a631f4297ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance.html</anchorfile>
      <anchor>ae25f8898615101702cfea471b357d7c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Set&lt; TriggerInstance&lt;? extends Variable &gt; &gt;</type>
      <name>reads</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance.html</anchorfile>
      <anchor>af31cecf793cb43a8cd2bdab7c26b723f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Set&lt; TriggerInstance&lt;? extends Variable &gt; &gt;</type>
      <name>sources</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance.html</anchorfile>
      <anchor>a70d2d3457a06d396683665df83f7c4a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Set&lt; TriggerInstance&lt;? extends Variable &gt; &gt;</type>
      <name>triggers</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance.html</anchorfile>
      <anchor>a112204e628b262a130d46184f56cdb01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>identifierLengthLimit</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac379d6bf5321bb1fa1cbc1e8db1f4009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>depth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac04ad303921e771e9f09615137b2608f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>T</type>
      <name>definition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a871444834354a0e77b4b7bcef94cb07a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>ReactorInstance</type>
      <name>parent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ad7dd92ad472a49a094dff3360335bfdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>HashMap&lt; String, Integer &gt;</type>
      <name>uniqueIDCount</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a28d661c783189176e86e43d54e4b8f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>int</type>
      <name>width</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a28cb0ab446f4de043e16c9327c198ab0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::ReactionInstance::Runtime</name>
    <filename>classorg_1_1lflang_1_1generator_1_1ReactionInstance_1_1Runtime.html</filename>
    <member kind="function">
      <type>ReactionInstance</type>
      <name>getReaction</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance_1_1Runtime.html</anchorfile>
      <anchor>af7991fb68228ff406e9f4d0da554b26f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Runtime</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance_1_1Runtime.html</anchorfile>
      <anchor>a0b2c9c65831fa3c3e973dbca7bafa2ad</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance_1_1Runtime.html</anchorfile>
      <anchor>a0e6d73cb80f373ea178147976497d51d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>TimeValue</type>
      <name>deadline</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance_1_1Runtime.html</anchorfile>
      <anchor>a289e2735f11458ef81048f2db5733370</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Runtime</type>
      <name>dominating</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance_1_1Runtime.html</anchorfile>
      <anchor>a75fa1ebc64a726d13ded08b354a78624</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final int</type>
      <name>id</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance_1_1Runtime.html</anchorfile>
      <anchor>a292a7f8e206522b658c30754086b62dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>level</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance_1_1Runtime.html</anchorfile>
      <anchor>a7eaf045c653a13f5fce2ea5c01834885</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; ReactionInstanceGraph.MriPortPair &gt;</type>
      <name>sourcePorts</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstance_1_1Runtime.html</anchorfile>
      <anchor>a8f178809b35b65cc69c196fca54a6c1b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::ReactionInstanceGraph</name>
    <filename>classorg_1_1lflang_1_1generator_1_1ReactionInstanceGraph.html</filename>
    <base>org.lflang.graph.PrecedenceGraph&lt; T extends Object &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>addEdge</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a79976fea3b8edfe34d5acd1fe03a657d</anchor>
      <arglist>(T sink, T source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEdges</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a6e02cd9b2b9d7aea518ab6258d54499f</anchor>
      <arglist>(T sink, List&lt; T &gt; sources)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNode</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a1823b6dbd01d14f962977e12f8039a04</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a84014f8e63978cc9d878ae9e6f699ccf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DirectedGraph&lt; T &gt;</type>
      <name>copy</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a831d7cce6b02b9bcb420e806e9dff101</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detectCycles</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>afc8aab8d226beae12e92abe0c5726532</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>edgeCount</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>af936723670ae67027e8ebc5939ee608b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBreadth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstanceGraph.html</anchorfile>
      <anchor>a769edfe038f647b849f49d63c5be8ec1</anchor>
      <arglist>(ReactorInstance enclave)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; Set&lt; T &gt; &gt;</type>
      <name>getCycles</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>aaca6c1909a67c143c43d1fc2eb2a35b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>getDownstreamAdjacentNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>aa2040d57bb667d0873929a28087f5f84</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>Integer[]</type>
      <name>getNumReactionsPerLevel</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstanceGraph.html</anchorfile>
      <anchor>ac6b75eca44b5a600342c69252c294168</anchor>
      <arglist>(ReactorInstance enclave)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>getUpstreamAdjacentNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>abf2060c566c6d70029955b62bf7f0950</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graphChanged</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>a145d91f17c47423dc1fd23c934a969e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasCycles</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>a1a5e625b597178d725973cbfcac659e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasNode</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>ac0c59e8f8ecfc71f3d9d3049eb68bff3</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>leafNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>af29fe843aa5ca59f94600394d98fcc91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>adf02be5b4e0170a644398205a05fd88d</anchor>
      <arglist>(DirectedGraph&lt; T &gt; another)</arglist>
    </member>
    <member kind="function">
      <type>record</type>
      <name>MriPortPair</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstanceGraph.html</anchorfile>
      <anchor>a78062c5c1991010a420ff9af8dbb35c8</anchor>
      <arglist>(MixedRadixInt index, PortInstance port)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nodeCount</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a0873d1c38d0b96b72fbf53922bc66852</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>nodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a6c2707742551e842c6451df76545216d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; T &gt;</type>
      <name>nodesInReverseTopologicalOrder</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>af238111982e049210d6c5f5d351032ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; T &gt;</type>
      <name>nodesInTopologicalOrder</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>afd7c6f8e12f2c9c562efd84f14d4e3e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReactionInstanceGraph</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstanceGraph.html</anchorfile>
      <anchor>a6b57e856617e7607bd8a24d7fe91333e</anchor>
      <arglist>(ReactorInstance main)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebuildAndAssignDeadlines</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstanceGraph.html</anchorfile>
      <anchor>a3866b70a03eaa037efd8d154589774a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEdge</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a754c594897046d2a03f3d3b160d9a55e</anchor>
      <arglist>(T sink, T source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeNode</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a72a5ccacfb9e69eeeb7d38304483885f</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>rootNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a0586417c29ca2eff77a5bb77afae5b87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>strongConnect</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>a229af25600890e00f0538c3933dd71ae</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toDOT</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstanceGraph.html</anchorfile>
      <anchor>abdbb45f5114860930525461649b28be5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>abf3d4686cb6dc873f5129b0d0c014591</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>final ReactorInstance</type>
      <name>main</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstanceGraph.html</anchorfile>
      <anchor>af2e4bd54b323019c5fb965401247e12f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addDownstreamReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstanceGraph.html</anchorfile>
      <anchor>a77e7994f07efd4a954a3e91befc46d89</anchor>
      <arglist>(PortInstance port, ReactionInstance reaction)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addNodesAndEdges</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactionInstanceGraph.html</anchorfile>
      <anchor>a2fb530fbee64df0d3dacc841f7fdbf57</anchor>
      <arglist>(ReactorInstance reactor)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>List&lt; Set&lt; T &gt; &gt;</type>
      <name>cycles</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>acbff95adbeb00195abfd807fe148e2d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::ReactorInstance</name>
    <filename>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</filename>
    <base>org.lflang.generator.NamedInstance&lt; Instantiation &gt;</base>
    <member kind="function">
      <type>ReactionInstanceGraph</type>
      <name>assignLevels</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>abd209fe44930315a747f7bb0237fa6a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCaches</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a5397cd94730f3c00b54e56add6aed1d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCaches</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a86fdf81d1f75eafe9b11d4655040616c</anchor>
      <arglist>(boolean includingRuntimes)</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>getChildReactorInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a52b54222fe1e0edaac332bc90d4b75ab</anchor>
      <arglist>(Instantiation definition)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; NamedInstance&lt;?&gt; &gt;</type>
      <name>getCycles</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a79a3bcb99ae577c226e217e921c1299a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getDefinition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a0b661e9f7d91c7d9f2c815e968aa10c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a6d6af7cccc27c21f342d765f21ca7712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getFullName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a012826abad45e46018ec7936726aec7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getFullNameWithJoiner</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>af5d13b4be19a550c0027c07ce7614aef</anchor>
      <arglist>(String joiner)</arglist>
    </member>
    <member kind="function">
      <type>PortInstance</type>
      <name>getInput</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>afebb5f66d25a1fb3444dc6876993348c</anchor>
      <arglist>(String name)</arglist>
    </member>
    <member kind="function">
      <type>ModeInstance</type>
      <name>getMode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a2cb04f0ba64b9db0066e5e25beefb853</anchor>
      <arglist>(boolean direct)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a2b868f01fe3482d1ae06f92b25e870f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PortInstance</type>
      <name>getOutput</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a34737b7b091a755490934060df53cfd1</anchor>
      <arglist>(String name)</arglist>
    </member>
    <member kind="function">
      <type>ParameterInstance</type>
      <name>getParameter</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a0abc718e8978324f1bdfdf0605703e16</anchor>
      <arglist>(String name)</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>getParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a55b5c007c12d2316fb3d70a2e6dd8583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TriggerInstance&lt; BuiltinTriggerVariable &gt;</type>
      <name>getShutdownTrigger</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a465f59cded0eb604edd6a171e6a9fe0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TriggerInstance&lt; BuiltinTriggerVariable &gt;</type>
      <name>getStartupTrigger</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a6670dcb8cb9c748dfb1c98185440bac6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeValue</type>
      <name>getTimeValue</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a4681abf6c9dfd386e85ac4ffa8637982</anchor>
      <arglist>(Expression expr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a5bb0c4fecafd3071ef46344f3f816294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a513151220302ead353e32c0040b86d92</anchor>
      <arglist>(int atDepth)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; TriggerInstance&lt;? extends Variable &gt; &gt;</type>
      <name>getTriggers</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>af977ea4f95ae97e11961d7116315aaaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; TriggerInstance&lt;? extends Variable &gt; &gt;</type>
      <name>getTriggersAndReads</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>ad7240b59bd4b8b37b820942a073372a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac3ed25f6147d2eb95e04a9e8d6aecbae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasCycles</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>ac0189dd7d5e8e5bb615793f52db1a947</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ab29bfc4f3c55758936059ba704ed5271</anchor>
      <arglist>(ReactorInstance container)</arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>initialIntParameterValue</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a0fc2eed5383ae178e1e355657c13e873</anchor>
      <arglist>(Parameter parameter)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; Instantiation &gt;</type>
      <name>instantiations</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a5ebfd0885bd76a992dc630021fc93b35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isBank</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a391a3aa71ad4adfabbfdc9dd3b6cb117</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isGeneratedDelay</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a24ae1bd292edd01b9e002432f7469357</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isMainOrFederated</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a3abacdf357fddb2a9ba2e0bffc4891c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a8389ba653b9aed9d474123f8209ebe1c</anchor>
      <arglist>(ReactorInstance r)</arglist>
    </member>
    <member kind="function">
      <type>ActionInstance</type>
      <name>lookupActionInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a0336f860a5d231e48bde10cc568f68b8</anchor>
      <arglist>(Action action)</arglist>
    </member>
    <member kind="function">
      <type>ModeInstance</type>
      <name>lookupModeInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>af314f8a07ca875ccee1d272070f60d7e</anchor>
      <arglist>(Mode mode)</arglist>
    </member>
    <member kind="function">
      <type>ParameterInstance</type>
      <name>lookupParameterInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a24dc90997b28b2182c62109ea0d9dd3c</anchor>
      <arglist>(Parameter parameter)</arglist>
    </member>
    <member kind="function">
      <type>PortInstance</type>
      <name>lookupPortInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a17526143d156dea35f50e33cc42bad9f</anchor>
      <arglist>(Port port)</arglist>
    </member>
    <member kind="function">
      <type>PortInstance</type>
      <name>lookupPortInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a9e3c9c44733c15468ebf345c78d4ed8f</anchor>
      <arglist>(VarRef reference)</arglist>
    </member>
    <member kind="function">
      <type>ReactionInstance</type>
      <name>lookupReactionInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a8831752ce435e957476c652699de4d0c</anchor>
      <arglist>(Reaction reaction)</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>lookupReactorInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>af8e0f82d9ab04c1a5c7ea87c21496582</anchor>
      <arglist>(Instantiation instantiation)</arglist>
    </member>
    <member kind="function">
      <type>TimerInstance</type>
      <name>lookupTimerInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>aa9716b24c4ab0bee03171a7631652214</anchor>
      <arglist>(Timer timer)</arglist>
    </member>
    <member kind="function">
      <type>WatchdogInstance</type>
      <name>lookupWatchdogInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a23dd045b2a822cbee02adab4c4fa635f</anchor>
      <arglist>(Watchdog watchdog)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; ReactorInstance &gt;</type>
      <name>parents</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a86ea09ffc1ff03d3dec96584f91b7b9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReactorInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>ace95b40e334618d342fb8514ab8f576e</anchor>
      <arglist>(Instantiation definition, ReactorInstance parent, MessageReporter reporter, int desiredDepth, List&lt; Reactor &gt; reactors)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReactorInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>ac0a16ee504a3e47de8ac3793d3c0a231</anchor>
      <arglist>(Reactor reactor, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReactorInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>aee4517a1ab13a4063e977b7be1df85e0</anchor>
      <arglist>(Reactor reactor, MessageReporter reporter, int desiredDepth)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReactorInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a81711d1450a889152d86c0479d1cba2d</anchor>
      <arglist>(Reactor reactor, MessageReporter reporter, List&lt; Reactor &gt; reactors)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReactorInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a4ff16f3964681469a29c6a54a63d066f</anchor>
      <arglist>(Reactor reactor, ReactorInstance parent, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>Expression</type>
      <name>resolveParameters</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a62494b145715655ec26d1b230ca362c0</anchor>
      <arglist>(Expression e)</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>root</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a7db346a838dbf9d4cca4be45a56e34d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a373142cf51403bb5f3cadd40208b7bd2</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a4212a490fd977e28ba507c70af6b1bd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>uniqueID</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a2c6283426e55cdc9ef127b8663f23a7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>connectPortInstances</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>ab242de8c23e6473a478f535f5db64fab</anchor>
      <arglist>(RuntimeRange&lt; PortInstance &gt; src, RuntimeRange&lt; PortInstance &gt; dst, Connection connection)</arglist>
    </member>
    <member kind="variable">
      <type>final List&lt; ActionInstance &gt;</type>
      <name>actions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a59506b6d9771e4eb5cb8553a8738bef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final List&lt; ReactorInstance &gt;</type>
      <name>children</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>aacc579a735c4d6c9a9bb62b31c5d7f90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CEnclaveInstance</type>
      <name>containingEnclave</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a72c9354219d07c2639917be57ea541fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final ReactorInstance</type>
      <name>containingEnclaveReactor</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>afe542aa37ed76d8dfab26a2c68986bcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final List&lt; PortInstance &gt;</type>
      <name>inputs</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>aceffc584f7a3a98af83ecd28fff33131</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final List&lt; ModeInstance &gt;</type>
      <name>modes</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a270204d9ca3e650371d8848b687fed86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final List&lt; PortInstance &gt;</type>
      <name>outputs</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a39036fd60b57cafa61eb55790c045199</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final List&lt; ParameterInstance &gt;</type>
      <name>parameters</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a599897ab8d044a3c804f25d2915be776</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final List&lt; ReactionInstance &gt;</type>
      <name>reactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a23bd7379aff8b2fb2680ee2f654d0420</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final ReactorDecl</type>
      <name>reactorDeclaration</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a9ff7fabd021553ec62271ad17441e96c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Reactor</type>
      <name>reactorDefinition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>ac73af406209e0ca1471e8197565e58d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final boolean</type>
      <name>recursive</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a4e85096e42a09ad2b3645d26140686d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final List&lt; StateVariableInstance &gt;</type>
      <name>states</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a5fe9cc6e6b054fa6557bda1e9516b20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final List&lt; TimerInstance &gt;</type>
      <name>timers</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a00121a27e9fdaadda2de7751ba6e6dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Integer</type>
      <name>tpoLevel</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a2e7ead816a98643a14e47c6828342430</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TypeParameterizedReactor</type>
      <name>tpr</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>af32d805a39663da59c1cd68b806becee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final List&lt; WatchdogInstance &gt;</type>
      <name>watchdogs</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>ad2da15feb8799c10c0c7004281fcc520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>identifierLengthLimit</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac379d6bf5321bb1fa1cbc1e8db1f4009</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createReactionInstances</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a8ff472058e72d39f77dfa9b3f4a46104</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>createWatchdogInstances</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a90283e5ea5d553311f23f7f7b1eb4224</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>TriggerInstance&lt; BuiltinTriggerVariable &gt;</type>
      <name>getOrCreateBuiltinTrigger</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>ad8453f55217b64ab775d5532cbac23e3</anchor>
      <arglist>(BuiltinTriggerRef trigger)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>List&lt; Instantiation &gt;</type>
      <name>_instantiations</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>ad0b869f9442cdc5e79237b5e1505453d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Map&lt; BuiltinTrigger, TriggerInstance&lt; BuiltinTriggerVariable &gt; &gt;</type>
      <name>builtinTriggers</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>aefc2b24d16ec0a1c00668d64a0b0dfc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>depth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac04ad303921e771e9f09615137b2608f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MessageReporter</type>
      <name>reporter</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ReactorInstance.html</anchorfile>
      <anchor>a0d04bbbd862b5d2b41dacc96963c3309</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>T</type>
      <name>definition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a871444834354a0e77b4b7bcef94cb07a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>ReactorInstance</type>
      <name>parent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ad7dd92ad472a49a094dff3360335bfdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>HashMap&lt; String, Integer &gt;</type>
      <name>uniqueIDCount</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a28d661c783189176e86e43d54e4b8f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>int</type>
      <name>width</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a28cb0ab446f4de043e16c9327c198ab0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::RuntimeRange::Port</name>
    <filename>classorg_1_1lflang_1_1generator_1_1RuntimeRange_1_1Port.html</filename>
    <member kind="function">
      <type></type>
      <name>Port</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1RuntimeRange_1_1Port.html</anchorfile>
      <anchor>aa20db33d0d99d835ca58d0500afdec78</anchor>
      <arglist>(PortInstance instance)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Port</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1RuntimeRange_1_1Port.html</anchorfile>
      <anchor>a49b06685aec49d6b037bb3b1f4ac5ed1</anchor>
      <arglist>(PortInstance instance, int start, int width, Set&lt; ReactorInstance &gt; interleaved)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Port</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1RuntimeRange_1_1Port.html</anchorfile>
      <anchor>ae40e5780b2f8e67c22049f6acb0dd695</anchor>
      <arglist>(PortInstance instance, Set&lt; ReactorInstance &gt; interleaved)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::RuntimeRange&lt; T extends NamedInstance</name>
    <filename>classorg_1_1lflang_1_1generator_1_1RuntimeRange_3_01T_01extends_01NamedInstance.html</filename>
    <templarg>?</templarg>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::rust::CargoDependencySpec</name>
    <filename>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec.html</filename>
    <class kind="class">org::lflang::generator::rust::CargoDependencySpec::CargoDependenciesPropertyType</class>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec.html</anchorfile>
      <anchor>ac74c97a8e1fe6a009f27d0c20d369982</anchor>
      <arglist>(Object o)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; String &gt;</type>
      <name>getFeatures</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec.html</anchorfile>
      <anchor>a10593c5858555005cc21f0e641c995fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getGitRepo</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec.html</anchorfile>
      <anchor>a1ea7d8ae12e432f6e70693eb0538c353</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getLocalPath</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec.html</anchorfile>
      <anchor>ac3436a9f125d00e04aa72c7d609ffc4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getRev</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec.html</anchorfile>
      <anchor>a2c02beeffe723533f2a72b2a305e02e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTag</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec.html</anchorfile>
      <anchor>abb9ace37efda1fc70ebed87c2160a4f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getVersion</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec.html</anchorfile>
      <anchor>ab73e000f4fef623ac4977d7e03fcaaa5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGitRepo</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec.html</anchorfile>
      <anchor>a7e1bd03164ddc1aa20d83e432f50a0b1</anchor>
      <arglist>(String gitRepo)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLocalPath</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec.html</anchorfile>
      <anchor>a048dadb1418b185265b9e09b12f5d9c4</anchor>
      <arglist>(String localPath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRev</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec.html</anchorfile>
      <anchor>aa78e4392cf8ea6732fd37d5014021229</anchor>
      <arglist>(String rev)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Element</type>
      <name>extractSpec</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec.html</anchorfile>
      <anchor>aa52e3d87d024f1ad7d770a9fad323d9b</anchor>
      <arglist>(CargoDependencySpec spec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Map&lt; String, CargoDependencySpec &gt;</type>
      <name>parseAll</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec.html</anchorfile>
      <anchor>aeec3ae3e03fee070569ff198a53422b8</anchor>
      <arglist>(Element element)</arglist>
    </member>
    <member kind="function" protection="package">
      <type></type>
      <name>CargoDependencySpec</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec.html</anchorfile>
      <anchor>a10c743ff5b53b021aafc46a9f25cd1ff</anchor>
      <arglist>(String version, String gitRepo, String rev, String gitTag, String localPath, List&lt; String &gt; features)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::rust::CargoDependencySpec::CargoDependenciesPropertyType</name>
    <filename>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec_1_1CargoDependenciesPropertyType.html</filename>
    <base>org.lflang.target.property.type.TargetPropertyType</base>
    <member kind="function">
      <type></type>
      <name>CargoDependenciesPropertyType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec_1_1CargoDependenciesPropertyType.html</anchorfile>
      <anchor>adfc412183efd188d738500e8156fefb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>check</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec_1_1CargoDependenciesPropertyType.html</anchorfile>
      <anchor>a18f9c92c191ba68d6ad2747f4f908464</anchor>
      <arglist>(Element element, String name, MessageReporter v)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec_1_1CargoDependenciesPropertyType.html</anchorfile>
      <anchor>a9bc51d6ecc30ce153f2466a44529887a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec_1_1CargoDependenciesPropertyType.html</anchorfile>
      <anchor>aa0b402dc01b5bc85ed99fa59e5fce3e6</anchor>
      <arglist>(Element e)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final TargetPropertyType</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1rust_1_1CargoDependencySpec_1_1CargoDependenciesPropertyType.html</anchorfile>
      <anchor>ab2ea119faa513f05967f99cfa1791df5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::SendRange</name>
    <filename>classorg_1_1lflang_1_1generator_1_1SendRange.html</filename>
    <base>org.lflang.generator.RuntimeRange.Port</base>
    <member kind="function">
      <type>void</type>
      <name>addDestination</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SendRange.html</anchorfile>
      <anchor>a79e4511bc64a221baa973e09adab03d4</anchor>
      <arglist>(RuntimeRange&lt; PortInstance &gt; dst)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareTo</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SendRange.html</anchorfile>
      <anchor>a8e4a2e4bfd3b1a04592c75ff9f569047</anchor>
      <arglist>(RuntimeRange&lt;?&gt; o)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfDestinationReactors</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SendRange.html</anchorfile>
      <anchor>a14ff19a3b015cea65d1c52ca289dc2fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SendRange</type>
      <name>head</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SendRange.html</anchorfile>
      <anchor>a29deab741b26bbd2aa22f346e0ec626a</anchor>
      <arglist>(int newWidth)</arglist>
    </member>
    <member kind="function">
      <type>SendRange</type>
      <name>overlap</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SendRange.html</anchorfile>
      <anchor>a55984beda0033b4e42542eeaab7ee17c</anchor>
      <arglist>(RuntimeRange&lt;?&gt; range)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SendRange</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SendRange.html</anchorfile>
      <anchor>aafabc1a032c9c5ec7da998e0cf4ac00e</anchor>
      <arglist>(PortInstance instance, int start, int width, Set&lt; ReactorInstance &gt; interleaved, Connection connection)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SendRange</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SendRange.html</anchorfile>
      <anchor>a2332d16b14f190362a465816dbbdf196</anchor>
      <arglist>(RuntimeRange&lt; PortInstance &gt; src, RuntimeRange&lt; PortInstance &gt; dst, Set&lt; ReactorInstance &gt; interleaved, Connection connection)</arglist>
    </member>
    <member kind="function">
      <type>SendRange</type>
      <name>tail</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SendRange.html</anchorfile>
      <anchor>a95ee1447a4067dd01fe04c8bab24c5bb</anchor>
      <arglist>(int offset)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SendRange.html</anchorfile>
      <anchor>afb030c841ff53bddac23ab0ff455ba85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>final Connection</type>
      <name>connection</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SendRange.html</anchorfile>
      <anchor>a25dd14dee3c5c52294d5090e20f53399</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final List&lt; RuntimeRange&lt; PortInstance &gt; &gt;</type>
      <name>destinations</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SendRange.html</anchorfile>
      <anchor>a9a4a98f73aa8a9305ecb59103711bc3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>SendRange</type>
      <name>newSendRange</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SendRange.html</anchorfile>
      <anchor>aaafd6ad94c71f565ec21b85a1aa17768</anchor>
      <arglist>(SendRange srcRange, int srcRangeOffset)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::StateVariableInstance</name>
    <filename>classorg_1_1lflang_1_1generator_1_1StateVariableInstance.html</filename>
    <base>org.lflang.generator.NamedInstance&lt; StateVar &gt;</base>
    <member kind="function">
      <type>T</type>
      <name>getDefinition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a0b661e9f7d91c7d9f2c815e968aa10c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a6d6af7cccc27c21f342d765f21ca7712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getFullName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a012826abad45e46018ec7936726aec7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getFullNameWithJoiner</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>af5d13b4be19a550c0027c07ce7614aef</anchor>
      <arglist>(String joiner)</arglist>
    </member>
    <member kind="function">
      <type>ModeInstance</type>
      <name>getMode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a2cb04f0ba64b9db0066e5e25beefb853</anchor>
      <arglist>(boolean direct)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1StateVariableInstance.html</anchorfile>
      <anchor>aab1cb320345fc8698a6d203264b4b870</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>getParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a55b5c007c12d2316fb3d70a2e6dd8583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac3ed25f6147d2eb95e04a9e8d6aecbae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ab29bfc4f3c55758936059ba704ed5271</anchor>
      <arglist>(ReactorInstance container)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; ReactorInstance &gt;</type>
      <name>parents</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a86ea09ffc1ff03d3dec96584f91b7b9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>root</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a7db346a838dbf9d4cca4be45a56e34d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a373142cf51403bb5f3cadd40208b7bd2</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StateVariableInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1StateVariableInstance.html</anchorfile>
      <anchor>ab953a71868c51d5f133b311432f32aad</anchor>
      <arglist>(StateVar definition, ReactorInstance parent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StateVariableInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1StateVariableInstance.html</anchorfile>
      <anchor>a229943afcf4bc0d4882fc312c4983b8a</anchor>
      <arglist>(StateVar definition, ReactorInstance parent, MessageReporter errorReporter)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1StateVariableInstance.html</anchorfile>
      <anchor>a3b0d85aeb71ba69e0c4aed68cfb3384b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>uniqueID</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>af120660533fab9c85cc3359723e97f27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>identifierLengthLimit</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac379d6bf5321bb1fa1cbc1e8db1f4009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>depth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac04ad303921e771e9f09615137b2608f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>T</type>
      <name>definition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a871444834354a0e77b4b7bcef94cb07a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>ReactorInstance</type>
      <name>parent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ad7dd92ad472a49a094dff3360335bfdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>HashMap&lt; String, Integer &gt;</type>
      <name>uniqueIDCount</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a28d661c783189176e86e43d54e4b8f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>int</type>
      <name>width</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a28cb0ab446f4de043e16c9327c198ab0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::SubContext</name>
    <filename>classorg_1_1lflang_1_1generator_1_1SubContext.html</filename>
    <base>org.lflang.generator.LFGeneratorContext</base>
    <member kind="function">
      <type>default void</type>
      <name>finish</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</anchorfile>
      <anchor>a68d454ed8e23001da5c772ebe74ac4e1</anchor>
      <arglist>(GeneratorResult.Status status, Map&lt; Path, CodeMap &gt; codeMaps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finish</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SubContext.html</anchorfile>
      <anchor>a9bffc0054496300c6421df3c5ffa1403</anchor>
      <arglist>(GeneratorResult result)</arglist>
    </member>
    <member kind="function">
      <type>GeneratorArguments</type>
      <name>getArgs</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SubContext.html</anchorfile>
      <anchor>ab14973d11b2c151265ec462876fffe1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CancelIndicator</type>
      <name>getCancelIndicator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SubContext.html</anchorfile>
      <anchor>a379c10230fd102e00f5cae667c8b1e36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MessageReporter</type>
      <name>getErrorReporter</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SubContext.html</anchorfile>
      <anchor>afabb6f6571a2c9b2039a6cad6065ed11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FileConfig</type>
      <name>getFileConfig</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SubContext.html</anchorfile>
      <anchor>abbd6ab31b545f727a07b85d5f8ac63b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Mode</type>
      <name>getMode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SubContext.html</anchorfile>
      <anchor>af544dbd23737ef27dd6cd98aa0630717</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>GeneratorResult</type>
      <name>getResult</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SubContext.html</anchorfile>
      <anchor>af918c00a43f7e69d101d51afeb09f08b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TargetConfig</type>
      <name>getTargetConfig</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SubContext.html</anchorfile>
      <anchor>ac24cde4f1018ccfe2f02fec8b8faaaf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isCleanRequested</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SubContext.html</anchorfile>
      <anchor>a114b7017aa898644eb4f3b51d302065b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reportProgress</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SubContext.html</anchorfile>
      <anchor>a5b62f22a32368a36a3dab76f3f9c0aa8</anchor>
      <arglist>(String message, int percentage)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SubContext</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SubContext.html</anchorfile>
      <anchor>aea77c551ff69902ae219587994edc56e</anchor>
      <arglist>(LFGeneratorContext containingContext, int startPercentProgress, int endPercentProgress)</arglist>
    </member>
    <member kind="function">
      <type>default void</type>
      <name>unsuccessfulFinish</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</anchorfile>
      <anchor>a774a1ab8a43fa876ea5b41001e2935b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LFGeneratorContext</type>
      <name>lfGeneratorContextOf</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1LFGeneratorContext.html</anchorfile>
      <anchor>ab2974bb9f44c1dff1aae98dae6dead86</anchor>
      <arglist>(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MessageReporter</type>
      <name>messageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1SubContext.html</anchorfile>
      <anchor>a1f68277fe278ab1b9905ec65891f6083</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::generator::TargetTypes</name>
    <filename>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</filename>
    <member kind="function">
      <type>default String</type>
      <name>escapeIdentifier</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a6fb005ca8e89ff21310eb1f2869a7c18</anchor>
      <arglist>(String ident)</arglist>
    </member>
    <member kind="function">
      <type>default String</type>
      <name>getTargetBracedListExpr</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a2babf7f7832b3075287836b0caceda66</anchor>
      <arglist>(BracedListExpression expr, InferredType typeOrNull)</arglist>
    </member>
    <member kind="function">
      <type>default String</type>
      <name>getTargetBracketListExpr</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a20ebd97caa978757eb73d61fd4912861</anchor>
      <arglist>(BracketListExpression expr, InferredType typeOrNull)</arglist>
    </member>
    <member kind="function">
      <type>default String</type>
      <name>getTargetParamRef</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a64c8136840934d73b1672f1a4730c611</anchor>
      <arglist>(ParameterReference expr, InferredType typeOrNull)</arglist>
    </member>
    <member kind="function">
      <type>default String</type>
      <name>getTargetParenthesistListExpr</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a16a56b5bd119009e85c10b8e9ea771d4</anchor>
      <arglist>(ParenthesisListExpression expr, InferredType typeOrNull)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetTagType</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>aeb59eef9498dc4ed8182da07952cc664</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetTimeExpr</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>aaa9cdead33474bed7f0d1080c940d978</anchor>
      <arglist>(TimeValue timeValue)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetTimeType</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a588ff79f05c4aebf0e26001a365a6be2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetUndefinedType</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a4cffad3862744628da47158b948f8689</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>supportsGenerics</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>ad87210788003885d7fdd502196f0da12</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::TimerInstance</name>
    <filename>classorg_1_1lflang_1_1generator_1_1TimerInstance.html</filename>
    <base>org.lflang.generator.TriggerInstance&lt; Timer &gt;</base>
    <member kind="function">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>getDependentReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>afe6d1d1335550edf242f39f976353787</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>getDependsOnReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a7d499b9439fef9389e065201524094ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a1758955ff9f326f7b3696cab2bd34d48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeValue</type>
      <name>getOffset</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TimerInstance.html</anchorfile>
      <anchor>a0dbe757f529fe33c07189e1acfb1d0d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeValue</type>
      <name>getPeriod</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TimerInstance.html</anchorfile>
      <anchor>a9fa986e42c20e7a608f4074336a003a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isReset</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>ac3f6ecf720f118e6a7fd6eac7d78ceb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isShutdown</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a599b1309beadd8d1df5efca63163c276</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isStartup</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>aaa731aee3ebeeb2549a9660abc413cd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimerInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TimerInstance.html</anchorfile>
      <anchor>ae4d1c33e19f1b4c249244c271de097e6</anchor>
      <arglist>(Timer definition, ReactorInstance parent)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final TimeValue</type>
      <name>DEFAULT_OFFSET</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TimerInstance.html</anchorfile>
      <anchor>a90f0e28187eef7f13604ad81a71a0f8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final TimeValue</type>
      <name>DEFAULT_PERIOD</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TimerInstance.html</anchorfile>
      <anchor>a80f085b2e23a21839e55de54ccf78708</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package" static="yes">
      <type>static TriggerInstance&lt; BuiltinTriggerVariable &gt;</type>
      <name>builtinTrigger</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a70d25467ac1247a588eed4d907f0e806</anchor>
      <arglist>(BuiltinTriggerRef trigger, ReactorInstance parent)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>dependentReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a5707123aa8691ccd7c64b54f87fdd789</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>dependsOnReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a2dd11fae53d58c404f4f4ed48a6dd939</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::TriggerInstance</name>
    <filename>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</filename>
    <templarg>T</templarg>
    <base>org.lflang.generator.NamedInstance&lt; T &gt;</base>
    <class kind="class">org::lflang::generator::TriggerInstance::BuiltinTriggerVariable</class>
    <member kind="function">
      <type>T</type>
      <name>getDefinition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a0b661e9f7d91c7d9f2c815e968aa10c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>getDependentReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>afe6d1d1335550edf242f39f976353787</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>getDependsOnReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a7d499b9439fef9389e065201524094ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a6d6af7cccc27c21f342d765f21ca7712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getFullName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a012826abad45e46018ec7936726aec7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getFullNameWithJoiner</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>af5d13b4be19a550c0027c07ce7614aef</anchor>
      <arglist>(String joiner)</arglist>
    </member>
    <member kind="function">
      <type>ModeInstance</type>
      <name>getMode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a2cb04f0ba64b9db0066e5e25beefb853</anchor>
      <arglist>(boolean direct)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a1758955ff9f326f7b3696cab2bd34d48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>getParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a55b5c007c12d2316fb3d70a2e6dd8583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac3ed25f6147d2eb95e04a9e8d6aecbae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ab29bfc4f3c55758936059ba704ed5271</anchor>
      <arglist>(ReactorInstance container)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isReset</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>ac3f6ecf720f118e6a7fd6eac7d78ceb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isShutdown</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a599b1309beadd8d1df5efca63163c276</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isStartup</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>aaa731aee3ebeeb2549a9660abc413cd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; ReactorInstance &gt;</type>
      <name>parents</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a86ea09ffc1ff03d3dec96584f91b7b9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>root</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a7db346a838dbf9d4cca4be45a56e34d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a373142cf51403bb5f3cadd40208b7bd2</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>uniqueID</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>af120660533fab9c85cc3359723e97f27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>identifierLengthLimit</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac379d6bf5321bb1fa1cbc1e8db1f4009</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TriggerInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a18262337b3082c4b581c3e07074d586c</anchor>
      <arglist>(T definition, ReactorInstance parent)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>depth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac04ad303921e771e9f09615137b2608f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package" static="yes">
      <type>static TriggerInstance&lt; BuiltinTriggerVariable &gt;</type>
      <name>builtinTrigger</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a70d25467ac1247a588eed4d907f0e806</anchor>
      <arglist>(BuiltinTriggerRef trigger, ReactorInstance parent)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>T</type>
      <name>definition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a871444834354a0e77b4b7bcef94cb07a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>dependentReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a5707123aa8691ccd7c64b54f87fdd789</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>dependsOnReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a2dd11fae53d58c404f4f4ed48a6dd939</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>ReactorInstance</type>
      <name>parent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ad7dd92ad472a49a094dff3360335bfdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>HashMap&lt; String, Integer &gt;</type>
      <name>uniqueIDCount</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a28d661c783189176e86e43d54e4b8f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>int</type>
      <name>width</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a28cb0ab446f4de043e16c9327c198ab0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::TriggerInstance::BuiltinTriggerVariable</name>
    <filename>classorg_1_1lflang_1_1generator_1_1TriggerInstance_1_1BuiltinTriggerVariable.html</filename>
    <member kind="function">
      <type></type>
      <name>BuiltinTriggerVariable</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance_1_1BuiltinTriggerVariable.html</anchorfile>
      <anchor>ab653f1dca2ef503dfaca83d8860f4cc6</anchor>
      <arglist>(BuiltinTriggerRef trigger)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance_1_1BuiltinTriggerVariable.html</anchorfile>
      <anchor>aa96b2d62cfc63c7e95b2c6cb67c25c80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance_1_1BuiltinTriggerVariable.html</anchorfile>
      <anchor>abafcafb882e64a518b5768e9cf676c92</anchor>
      <arglist>(String newName)</arglist>
    </member>
    <member kind="variable">
      <type>final TriggerRef</type>
      <name>definition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance_1_1BuiltinTriggerVariable.html</anchorfile>
      <anchor>af6be57bbcbbfeb73324dd841947e2124</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final BuiltinTrigger</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance_1_1BuiltinTriggerVariable.html</anchorfile>
      <anchor>ab7164b163bf0d54fc6cf21be14215676</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::ts::TSTypes</name>
    <filename>classorg_1_1lflang_1_1generator_1_1ts_1_1TSTypes.html</filename>
    <base>org.lflang.generator.TargetTypes</base>
    <member kind="function">
      <type>default String</type>
      <name>escapeIdentifier</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a6fb005ca8e89ff21310eb1f2869a7c18</anchor>
      <arglist>(String ident)</arglist>
    </member>
    <member kind="function">
      <type>default String</type>
      <name>getTargetBracedListExpr</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a2babf7f7832b3075287836b0caceda66</anchor>
      <arglist>(BracedListExpression expr, InferredType typeOrNull)</arglist>
    </member>
    <member kind="function">
      <type>default String</type>
      <name>getTargetBracketListExpr</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a20ebd97caa978757eb73d61fd4912861</anchor>
      <arglist>(BracketListExpression expr, InferredType typeOrNull)</arglist>
    </member>
    <member kind="function">
      <type>default String</type>
      <name>getTargetParamRef</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a64c8136840934d73b1672f1a4730c611</anchor>
      <arglist>(ParameterReference expr, InferredType typeOrNull)</arglist>
    </member>
    <member kind="function">
      <type>default String</type>
      <name>getTargetParenthesistListExpr</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1TargetTypes.html</anchorfile>
      <anchor>a16a56b5bd119009e85c10b8e9ea771d4</anchor>
      <arglist>(ParenthesisListExpression expr, InferredType typeOrNull)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetTagType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ts_1_1TSTypes.html</anchorfile>
      <anchor>ae7e14859ab81fde18518f3cc072a536a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetTimeExpr</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ts_1_1TSTypes.html</anchorfile>
      <anchor>a4fb889641e2a723e4d53545968bab81c</anchor>
      <arglist>(TimeValue value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetTimeType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ts_1_1TSTypes.html</anchorfile>
      <anchor>adafebddb3a10a6be1d61b31da030cb1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ts_1_1TSTypes.html</anchorfile>
      <anchor>ae35e5dfc22425c13aa7a0460c673ec54</anchor>
      <arglist>(StateVar s)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getTargetUndefinedType</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ts_1_1TSTypes.html</anchorfile>
      <anchor>aac360b2955216884bfc491eafc0f3f2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>supportsGenerics</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ts_1_1TSTypes.html</anchorfile>
      <anchor>a5ce3435a6f3c5448b4619d83720849b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TSTypes</type>
      <name>getInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1ts_1_1TSTypes.html</anchorfile>
      <anchor>a5f81d1197d9b0043e3d7a91ea07673e8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::UnsupportedGeneratorFeatureException</name>
    <filename>classorg_1_1lflang_1_1generator_1_1UnsupportedGeneratorFeatureException.html</filename>
    <base>org.lflang.generator.GenerationException</base>
    <member kind="function">
      <type>EObject</type>
      <name>getLocation</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1GenerationException.html</anchorfile>
      <anchor>a4e6523a417c0d0cd7824fcd8200fe8a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnsupportedGeneratorFeatureException</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1UnsupportedGeneratorFeatureException.html</anchorfile>
      <anchor>a15045a80c490208871c416bbf0b28941</anchor>
      <arglist>(EObject location, String feature)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnsupportedGeneratorFeatureException</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1UnsupportedGeneratorFeatureException.html</anchorfile>
      <anchor>ab77cbcb210ea01d689c8a6dbd3b24566</anchor>
      <arglist>(String feature)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::generator::ValidationStrategy</name>
    <filename>interfaceorg_1_1lflang_1_1generator_1_1ValidationStrategy.html</filename>
    <member kind="function">
      <type>LFCommand</type>
      <name>getCommand</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1ValidationStrategy.html</anchorfile>
      <anchor>a3c83b12819403acb4d3f6a84bbce67ad</anchor>
      <arglist>(Path generatedFile)</arglist>
    </member>
    <member kind="function">
      <type>DiagnosticReporting.Strategy</type>
      <name>getErrorReportingStrategy</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1ValidationStrategy.html</anchorfile>
      <anchor>a4eb5f08c89908c171fc8a5c7a558a860</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DiagnosticReporting.Strategy</type>
      <name>getOutputReportingStrategy</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1ValidationStrategy.html</anchorfile>
      <anchor>a1f3cd1ebad4dcc16aa45cb9020638860</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPriority</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1ValidationStrategy.html</anchorfile>
      <anchor>a87c8188d68fa74c886b62e95a2fd8b6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isFullBatch</name>
      <anchorfile>interfaceorg_1_1lflang_1_1generator_1_1ValidationStrategy.html</anchorfile>
      <anchor>a72de3a9019cc3ca52b41a2869c4ee117</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::Validator</name>
    <filename>classorg_1_1lflang_1_1generator_1_1Validator.html</filename>
    <class kind="class">org::lflang::generator::Validator::Pair</class>
    <member kind="function">
      <type>final void</type>
      <name>doValidate</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Validator.html</anchorfile>
      <anchor>a2a2bfcf4a8ca13ac23c8436702c05eb3</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="function">
      <type>final int</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Validator.html</anchorfile>
      <anchor>a7de85c7271a8f9ae9d351cb61a2ea896</anchor>
      <arglist>(LFCommand command, CancelIndicator cancelIndicator)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>abstract Pair&lt; DiagnosticReporting.Strategy, DiagnosticReporting.Strategy &gt;</type>
      <name>getBuildReportingStrategies</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Validator.html</anchorfile>
      <anchor>ac3834fbdc5758d79364173d32bba07ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>abstract Collection&lt; ValidationStrategy &gt;</type>
      <name>getPossibleStrategies</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Validator.html</anchorfile>
      <anchor>acc4f6d2735b36b7affddfe091a09dba2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>validationEnabledByDefault</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Validator.html</anchorfile>
      <anchor>a00c547a33c657025d27550723d4025d2</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Validator</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Validator.html</anchorfile>
      <anchor>a0a67e60c24f687bfbfcf3709319a2e33</anchor>
      <arglist>(MessageReporter messageReporter, Map&lt; Path, CodeMap &gt; codeMaps)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final ImmutableMap&lt; Path, CodeMap &gt;</type>
      <name>codeMaps</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Validator.html</anchorfile>
      <anchor>a1354aab4cf6d544fdc6ac696530ed24b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final MessageReporter</type>
      <name>messageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Validator.html</anchorfile>
      <anchor>abc7055b2980ee5dae32f8e34a5bb1feb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::Validator::Pair</name>
    <filename>classorg_1_1lflang_1_1generator_1_1Validator_1_1Pair.html</filename>
    <templarg>S</templarg>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>Pair</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Validator_1_1Pair.html</anchorfile>
      <anchor>a6151bc5417f9e51ac8b92d7bb22f64e2</anchor>
      <arglist>(S first, T second)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>first</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Validator_1_1Pair.html</anchorfile>
      <anchor>ad861d463f79cc4372fd6034e91f3ac5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final T</type>
      <name>second</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1Validator_1_1Pair.html</anchorfile>
      <anchor>a7694097f9ec712b31e0277c7fb78eb51</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::generator::WatchdogInstance</name>
    <filename>classorg_1_1lflang_1_1generator_1_1WatchdogInstance.html</filename>
    <base>org.lflang.generator.TriggerInstance&lt; Watchdog &gt;</base>
    <member kind="function">
      <type>Watchdog</type>
      <name>getDefinition</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1WatchdogInstance.html</anchorfile>
      <anchor>a1730570f0a4233d65f1730582d59a9b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>getDependentReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>afe6d1d1335550edf242f39f976353787</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>getDependsOnReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a7d499b9439fef9389e065201524094ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a6d6af7cccc27c21f342d765f21ca7712</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getFullName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a012826abad45e46018ec7936726aec7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getFullNameWithJoiner</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>af5d13b4be19a550c0027c07ce7614aef</anchor>
      <arglist>(String joiner)</arglist>
    </member>
    <member kind="function">
      <type>ModeInstance</type>
      <name>getMode</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a2cb04f0ba64b9db0066e5e25beefb853</anchor>
      <arglist>(boolean direct)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getName</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1WatchdogInstance.html</anchorfile>
      <anchor>aadc2e0ca021ad1333731d8773e3b6162</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>getParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a55b5c007c12d2316fb3d70a2e6dd8583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>getReactor</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1WatchdogInstance.html</anchorfile>
      <anchor>aa6d3bf29a5baf92c2b43e665392d2229</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeValue</type>
      <name>getTimeout</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1WatchdogInstance.html</anchorfile>
      <anchor>a197919950b48bd197e05accc3a8f1e14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac3ed25f6147d2eb95e04a9e8d6aecbae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasParent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ab29bfc4f3c55758936059ba704ed5271</anchor>
      <arglist>(ReactorInstance container)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isReset</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>ac3f6ecf720f118e6a7fd6eac7d78ceb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isShutdown</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a599b1309beadd8d1df5efca63163c276</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isStartup</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>aaa731aee3ebeeb2549a9660abc413cd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; ReactorInstance &gt;</type>
      <name>parents</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a86ea09ffc1ff03d3dec96584f91b7b9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReactorInstance</type>
      <name>root</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a7db346a838dbf9d4cca4be45a56e34d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a373142cf51403bb5f3cadd40208b7bd2</anchor>
      <arglist>(int width)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1WatchdogInstance.html</anchorfile>
      <anchor>a243735ebbef62d8650ce884396886e9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>uniqueID</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>af120660533fab9c85cc3359723e97f27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WatchdogInstance</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1WatchdogInstance.html</anchorfile>
      <anchor>a06e34113d0ca2adbb923d4afaa662d64</anchor>
      <arglist>(Watchdog definition, ReactorInstance reactor)</arglist>
    </member>
    <member kind="variable">
      <type>Set&lt; TriggerInstance&lt;? extends Variable &gt; &gt;</type>
      <name>effects</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1WatchdogInstance.html</anchorfile>
      <anchor>a127dc89eba6d0101c55ab5e4ffda0001</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>identifierLengthLimit</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac379d6bf5321bb1fa1cbc1e8db1f4009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>depth</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ac04ad303921e771e9f09615137b2608f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package" static="yes">
      <type>static TriggerInstance&lt; BuiltinTriggerVariable &gt;</type>
      <name>builtinTrigger</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a70d25467ac1247a588eed4d907f0e806</anchor>
      <arglist>(BuiltinTriggerRef trigger, ReactorInstance parent)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>dependentReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a5707123aa8691ccd7c64b54f87fdd789</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Set&lt; ReactionInstance &gt;</type>
      <name>dependsOnReactions</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1TriggerInstance.html</anchorfile>
      <anchor>a2dd11fae53d58c404f4f4ed48a6dd939</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>ReactorInstance</type>
      <name>parent</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>ad7dd92ad472a49a094dff3360335bfdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>HashMap&lt; String, Integer &gt;</type>
      <name>uniqueIDCount</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a28d661c783189176e86e43d54e4b8f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>int</type>
      <name>width</name>
      <anchorfile>classorg_1_1lflang_1_1generator_1_1NamedInstance.html</anchorfile>
      <anchor>a28cb0ab446f4de043e16c9327c198ab0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::graph::ConnectionGraph</name>
    <filename>classorg_1_1lflang_1_1graph_1_1ConnectionGraph.html</filename>
    <templarg>V</templarg>
    <templarg>E</templarg>
    <member kind="function">
      <type>void</type>
      <name>addEdge</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1ConnectionGraph.html</anchorfile>
      <anchor>ab72c8ff1c979e6fd21966eece41fb53d</anchor>
      <arglist>(V source, V destination, E edge)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEdges</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1ConnectionGraph.html</anchorfile>
      <anchor>a47baebd1bb4abe9f131d1866a2711164</anchor>
      <arglist>(V source, V destination, Set&lt; E &gt; edges)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConnectionGraph</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1ConnectionGraph.html</anchorfile>
      <anchor>a78430e483c473d432e768a949660fd20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Map&lt; V, Set&lt; E &gt; &gt;</type>
      <name>getDownstreamOf</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1ConnectionGraph.html</anchorfile>
      <anchor>a3e8afa1dc39a6442452a4771839d50be</anchor>
      <arglist>(V node)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; V &gt;</type>
      <name>getNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1ConnectionGraph.html</anchorfile>
      <anchor>a6d0dc72ed67eb8aeb18fe43ced00274d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Map&lt; V, Set&lt; E &gt; &gt;</type>
      <name>getUpstreamOf</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1ConnectionGraph.html</anchorfile>
      <anchor>aabb830ec51661c2f897c341caa96c0a3</anchor>
      <arglist>(V node)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::graph::DirectedGraph</name>
    <filename>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</filename>
    <templarg>T</templarg>
    <base>org.lflang.graph.Graph&lt; T &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>addEdge</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a79976fea3b8edfe34d5acd1fe03a657d</anchor>
      <arglist>(T sink, T source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEdges</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a6e02cd9b2b9d7aea518ab6258d54499f</anchor>
      <arglist>(T sink, List&lt; T &gt; sources)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNode</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a1823b6dbd01d14f962977e12f8039a04</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a84014f8e63978cc9d878ae9e6f699ccf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DirectedGraph&lt; T &gt;</type>
      <name>copy</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a831d7cce6b02b9bcb420e806e9dff101</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>edgeCount</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>af936723670ae67027e8ebc5939ee608b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>getDownstreamAdjacentNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>aa2040d57bb667d0873929a28087f5f84</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>getUpstreamAdjacentNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>abf2060c566c6d70029955b62bf7f0950</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasNode</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>ac0c59e8f8ecfc71f3d9d3049eb68bff3</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>leafNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>af29fe843aa5ca59f94600394d98fcc91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>adf02be5b4e0170a644398205a05fd88d</anchor>
      <arglist>(DirectedGraph&lt; T &gt; another)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nodeCount</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a0873d1c38d0b96b72fbf53922bc66852</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>nodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a6c2707742551e842c6451df76545216d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEdge</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a754c594897046d2a03f3d3b160d9a55e</anchor>
      <arglist>(T sink, T source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeNode</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a72a5ccacfb9e69eeeb7d38304483885f</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>rootNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a0586417c29ca2eff77a5bb77afae5b87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toDOT</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a64d921937ae05f6c2639fcf066fe250e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>abf3d4686cb6dc873f5129b0d0c014591</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>graphChanged</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a1b9eefb1995eccc2354908a929cbb2ed</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::graph::Graph</name>
    <filename>interfaceorg_1_1lflang_1_1graph_1_1Graph.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type>void</type>
      <name>addEdge</name>
      <anchorfile>interfaceorg_1_1lflang_1_1graph_1_1Graph.html</anchorfile>
      <anchor>a765aec1aa4d6abbbc9fc60de63ec0c17</anchor>
      <arglist>(T to, T from)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEdges</name>
      <anchorfile>interfaceorg_1_1lflang_1_1graph_1_1Graph.html</anchorfile>
      <anchor>a8eec1df56b5b7161a7377d24b03d8163</anchor>
      <arglist>(T to, List&lt; T &gt; from)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1graph_1_1Graph.html</anchorfile>
      <anchor>aea67bf17ea4042571836311dafc5f306</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>edgeCount</name>
      <anchorfile>interfaceorg_1_1lflang_1_1graph_1_1Graph.html</anchorfile>
      <anchor>af83ae620289af00b5624a1170a664cfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1graph_1_1Graph.html</anchorfile>
      <anchor>ace30f88c2724ab474dee9bcc7e979f32</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nodeCount</name>
      <anchorfile>interfaceorg_1_1lflang_1_1graph_1_1Graph.html</anchorfile>
      <anchor>a4fbda7613a5cf401c7d006f9f79c54b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>nodes</name>
      <anchorfile>interfaceorg_1_1lflang_1_1graph_1_1Graph.html</anchorfile>
      <anchor>af1aea54d069cfd3f36403d84ea0170b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEdge</name>
      <anchorfile>interfaceorg_1_1lflang_1_1graph_1_1Graph.html</anchorfile>
      <anchor>abb9c7fbc73267d930d891583c2085b67</anchor>
      <arglist>(T to, T from)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeNode</name>
      <anchorfile>interfaceorg_1_1lflang_1_1graph_1_1Graph.html</anchorfile>
      <anchor>a9e60416278c1f0adc11b9a8c0a6ee963</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toDOT</name>
      <anchorfile>interfaceorg_1_1lflang_1_1graph_1_1Graph.html</anchorfile>
      <anchor>ab7b917f62acbf9491a2fc258fd2d4dc4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::graph::InstantiationGraph</name>
    <filename>classorg_1_1lflang_1_1graph_1_1InstantiationGraph.html</filename>
    <base>org.lflang.graph.PrecedenceGraph&lt; Reactor &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>addEdge</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a79976fea3b8edfe34d5acd1fe03a657d</anchor>
      <arglist>(T sink, T source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEdges</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a6e02cd9b2b9d7aea518ab6258d54499f</anchor>
      <arglist>(T sink, List&lt; T &gt; sources)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNode</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a1823b6dbd01d14f962977e12f8039a04</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a84014f8e63978cc9d878ae9e6f699ccf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DirectedGraph&lt; T &gt;</type>
      <name>copy</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a831d7cce6b02b9bcb420e806e9dff101</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detectCycles</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>afc8aab8d226beae12e92abe0c5726532</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>edgeCount</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>af936723670ae67027e8ebc5939ee608b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; Set&lt; T &gt; &gt;</type>
      <name>getCycles</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>aaca6c1909a67c143c43d1fc2eb2a35b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; ReactorDecl &gt;</type>
      <name>getDeclarations</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1InstantiationGraph.html</anchorfile>
      <anchor>ad5aa5aa79bfce9cea50254af59ffaabc</anchor>
      <arglist>(final Reactor definition)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>getDownstreamAdjacentNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>aa2040d57bb667d0873929a28087f5f84</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; Instantiation &gt;</type>
      <name>getInstantiations</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1InstantiationGraph.html</anchorfile>
      <anchor>a9ffbbd6c1f750fab44eebd135ed45508</anchor>
      <arglist>(final Reactor definition)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; Reactor &gt;</type>
      <name>getReactors</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1InstantiationGraph.html</anchorfile>
      <anchor>a89c1c7cc902d21c8f4ce37351bb7f424</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>getUpstreamAdjacentNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>abf2060c566c6d70029955b62bf7f0950</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graphChanged</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>a145d91f17c47423dc1fd23c934a969e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasCycles</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>a1a5e625b597178d725973cbfcac659e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasNode</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>ac0c59e8f8ecfc71f3d9d3049eb68bff3</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InstantiationGraph</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1InstantiationGraph.html</anchorfile>
      <anchor>a05db41ea8c4bd8a0fa43a7ce0fe662d9</anchor>
      <arglist>(final Model model, final boolean detectCycles)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InstantiationGraph</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1InstantiationGraph.html</anchorfile>
      <anchor>a4ffe3826d3673a979917e256d6e6986b</anchor>
      <arglist>(final Resource resource, final boolean detectCycles)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>leafNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>af29fe843aa5ca59f94600394d98fcc91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>adf02be5b4e0170a644398205a05fd88d</anchor>
      <arglist>(DirectedGraph&lt; T &gt; another)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nodeCount</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a0873d1c38d0b96b72fbf53922bc66852</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>nodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a6c2707742551e842c6451df76545216d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; T &gt;</type>
      <name>nodesInReverseTopologicalOrder</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>af238111982e049210d6c5f5d351032ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; T &gt;</type>
      <name>nodesInTopologicalOrder</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>afd7c6f8e12f2c9c562efd84f14d4e3e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEdge</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a754c594897046d2a03f3d3b160d9a55e</anchor>
      <arglist>(T sink, T source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeNode</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a72a5ccacfb9e69eeeb7d38304483885f</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>rootNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a0586417c29ca2eff77a5bb77afae5b87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>strongConnect</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>a229af25600890e00f0538c3933dd71ae</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toDOT</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a64d921937ae05f6c2639fcf066fe250e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>abf3d4686cb6dc873f5129b0d0c014591</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>List&lt; Set&lt; T &gt; &gt;</type>
      <name>cycles</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>acbff95adbeb00195abfd807fe148e2d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final HashMultimap&lt; Reactor, ReactorDecl &gt;</type>
      <name>reactorToDecl</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1InstantiationGraph.html</anchorfile>
      <anchor>ae73767210b5c8eca10242e37fb231aba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final HashMultimap&lt; Reactor, Instantiation &gt;</type>
      <name>reactorToInstantiation</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1InstantiationGraph.html</anchorfile>
      <anchor>a85ef646d07c71422779f3aa3f974205e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::graph::NodeAnnotation</name>
    <filename>classorg_1_1lflang_1_1graph_1_1NodeAnnotation.html</filename>
    <member kind="variable">
      <type>boolean</type>
      <name>hasPermMark</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1NodeAnnotation.html</anchorfile>
      <anchor>a8474011a86e1b92789e689596be2f494</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>hasTempMark</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1NodeAnnotation.html</anchorfile>
      <anchor>aa8c82bbeee1255bca3521f927baf5e35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1NodeAnnotation.html</anchorfile>
      <anchor>a2ab01aa6497de1bb88755a5377272fd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lowLink</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1NodeAnnotation.html</anchorfile>
      <anchor>a6163f6ab7928c90d94b94648c94a8c9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>onStack</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1NodeAnnotation.html</anchorfile>
      <anchor>afe5f6311fa939e9547bdb54e94a7e1ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>selfLoop</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1NodeAnnotation.html</anchorfile>
      <anchor>a245ca89b9794327002aa8a324bd0249a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::graph::NodeAnnotations</name>
    <filename>classorg_1_1lflang_1_1graph_1_1NodeAnnotations.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type>NodeAnnotation</type>
      <name>get</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1NodeAnnotations.html</anchorfile>
      <anchor>a7952daece9896d4afe68a33652388abd</anchor>
      <arglist>(final T node)</arglist>
    </member>
    <member kind="function">
      <type>NodeAnnotation</type>
      <name>put</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1NodeAnnotations.html</anchorfile>
      <anchor>ae00945621ae41bb622410fc817f377c9</anchor>
      <arglist>(final T node, final NodeAnnotation annotation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::graph::PrecedenceGraph</name>
    <filename>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</filename>
    <templarg>T</templarg>
    <base>org.lflang.graph.DirectedGraph&lt; T &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>addEdge</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a79976fea3b8edfe34d5acd1fe03a657d</anchor>
      <arglist>(T sink, T source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEdges</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a6e02cd9b2b9d7aea518ab6258d54499f</anchor>
      <arglist>(T sink, List&lt; T &gt; sources)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNode</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a1823b6dbd01d14f962977e12f8039a04</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a84014f8e63978cc9d878ae9e6f699ccf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DirectedGraph&lt; T &gt;</type>
      <name>copy</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a831d7cce6b02b9bcb420e806e9dff101</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detectCycles</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>afc8aab8d226beae12e92abe0c5726532</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>edgeCount</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>af936723670ae67027e8ebc5939ee608b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; Set&lt; T &gt; &gt;</type>
      <name>getCycles</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>aaca6c1909a67c143c43d1fc2eb2a35b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>getDownstreamAdjacentNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>aa2040d57bb667d0873929a28087f5f84</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>getUpstreamAdjacentNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>abf2060c566c6d70029955b62bf7f0950</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>graphChanged</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>a145d91f17c47423dc1fd23c934a969e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasCycles</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>a1a5e625b597178d725973cbfcac659e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasNode</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>ac0c59e8f8ecfc71f3d9d3049eb68bff3</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>leafNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>af29fe843aa5ca59f94600394d98fcc91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>adf02be5b4e0170a644398205a05fd88d</anchor>
      <arglist>(DirectedGraph&lt; T &gt; another)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nodeCount</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a0873d1c38d0b96b72fbf53922bc66852</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>nodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a6c2707742551e842c6451df76545216d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; T &gt;</type>
      <name>nodesInReverseTopologicalOrder</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>af238111982e049210d6c5f5d351032ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; T &gt;</type>
      <name>nodesInTopologicalOrder</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>afd7c6f8e12f2c9c562efd84f14d4e3e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrecedenceGraph</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>a8939605052359adaa546c1cf8fe0c0f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEdge</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a754c594897046d2a03f3d3b160d9a55e</anchor>
      <arglist>(T sink, T source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeNode</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a72a5ccacfb9e69eeeb7d38304483885f</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; T &gt;</type>
      <name>rootNodes</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a0586417c29ca2eff77a5bb77afae5b87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>strongConnect</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>a229af25600890e00f0538c3933dd71ae</anchor>
      <arglist>(T node)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toDOT</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>a64d921937ae05f6c2639fcf066fe250e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1DirectedGraph.html</anchorfile>
      <anchor>abf3d4686cb6dc873f5129b0d0c014591</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>List&lt; Set&lt; T &gt; &gt;</type>
      <name>cycles</name>
      <anchorfile>classorg_1_1lflang_1_1graph_1_1PrecedenceGraph.html</anchorfile>
      <anchor>acbff95adbeb00195abfd807fe148e2d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::ide::LFIdeModule</name>
    <filename>classorg_1_1lflang_1_1ide_1_1LFIdeModule.html</filename>
  </compound>
  <compound kind="class">
    <name>org::lflang::ide::LFIdeSetup</name>
    <filename>classorg_1_1lflang_1_1ide_1_1LFIdeSetup.html</filename>
    <base>org.lflang.LFStandaloneSetup</base>
    <member kind="function">
      <type>Injector</type>
      <name>createInjector</name>
      <anchorfile>classorg_1_1lflang_1_1ide_1_1LFIdeSetup.html</anchorfile>
      <anchor>a6b1fe1f3187dead12cf94c43bf29022f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Injector</type>
      <name>createInjectorAndDoEMFRegistration</name>
      <anchorfile>classorg_1_1lflang_1_1ide_1_1LFIdeSetup.html</anchorfile>
      <anchor>a6983dbc78a520b752e84d8ead58d5f69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Injector</type>
      <name>doSetup</name>
      <anchorfile>classorg_1_1lflang_1_1ide_1_1LFIdeSetup.html</anchorfile>
      <anchor>abe73a63dab1be3f41325e1f69e2a6df4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static Injector</type>
      <name>injector</name>
      <anchorfile>classorg_1_1lflang_1_1LFStandaloneSetup.html</anchorfile>
      <anchor>a1bf576eac04b1c611048ccd2ea93d9a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::InferredType</name>
    <filename>classorg_1_1lflang_1_1InferredType.html</filename>
    <member kind="function">
      <type>String</type>
      <name>baseType</name>
      <anchorfile>classorg_1_1lflang_1_1InferredType.html</anchorfile>
      <anchor>afc3289274b7cc6b23dd5d10a657e8bc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isUndefined</name>
      <anchorfile>classorg_1_1lflang_1_1InferredType.html</anchorfile>
      <anchor>a6cce40db7401c440e1f596947d21bb26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toOriginalText</name>
      <anchorfile>classorg_1_1lflang_1_1InferredType.html</anchorfile>
      <anchor>aac68a98a52c02f32a5c2c5962bb55fd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toText</name>
      <anchorfile>classorg_1_1lflang_1_1InferredType.html</anchorfile>
      <anchor>a22ccd655c7479a6c4a8fa9acc777b70a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static InferredType</type>
      <name>fromAST</name>
      <anchorfile>classorg_1_1lflang_1_1InferredType.html</anchorfile>
      <anchor>a0ee9c00e84610e5cd3b872409a23483e</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static InferredType</type>
      <name>time</name>
      <anchorfile>classorg_1_1lflang_1_1InferredType.html</anchorfile>
      <anchor>ace21fbde127d1c7e18222b12ba5d71fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static InferredType</type>
      <name>undefined</name>
      <anchorfile>classorg_1_1lflang_1_1InferredType.html</anchorfile>
      <anchor>a5ce9cfa4c76fef89346f1bd28e2452f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>final Type</type>
      <name>astType</name>
      <anchorfile>classorg_1_1lflang_1_1InferredType.html</anchorfile>
      <anchor>a58bebffcb3e47c8b33e2c37fb78c4e9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final boolean</type>
      <name>isTime</name>
      <anchorfile>classorg_1_1lflang_1_1InferredType.html</anchorfile>
      <anchor>a58e464cd0fe64e2d468756179b51064f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::LFResourceDescriptionStrategy</name>
    <filename>classorg_1_1lflang_1_1LFResourceDescriptionStrategy.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>createEObjectDescriptions</name>
      <anchorfile>classorg_1_1lflang_1_1LFResourceDescriptionStrategy.html</anchorfile>
      <anchor>ae8b4caf66eee64b50f304a2ef6f5c938</anchor>
      <arglist>(EObject eObject, IAcceptor&lt; IEObjectDescription &gt; acceptor)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DELIMITER</name>
      <anchorfile>classorg_1_1lflang_1_1LFResourceDescriptionStrategy.html</anchorfile>
      <anchor>a70a78987871c150ac6c876f5863d7701</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>INCLUDES</name>
      <anchorfile>classorg_1_1lflang_1_1LFResourceDescriptionStrategy.html</anchorfile>
      <anchor>a565388ce130ba7edecca115fc171898c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::LFResourceProvider</name>
    <filename>classorg_1_1lflang_1_1LFResourceProvider.html</filename>
    <member kind="function">
      <type>ResourceSet</type>
      <name>getResourceSet</name>
      <anchorfile>classorg_1_1lflang_1_1LFResourceProvider.html</anchorfile>
      <anchor>ac867a353156d99c2ee11b82b5d136dec</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::LFRuntimeModule</name>
    <filename>classorg_1_1lflang_1_1LFRuntimeModule.html</filename>
    <member kind="function">
      <type>Class&lt;? extends MessageReporter &gt;</type>
      <name>bindErrorReporter</name>
      <anchorfile>classorg_1_1lflang_1_1LFRuntimeModule.html</anchorfile>
      <anchor>acf0e2e3b31c3ff56f05491117a7b9f59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Class&lt;? extends IDefaultResourceDescriptionStrategy &gt;</type>
      <name>bindIDefaultResourceDescriptionStrategy</name>
      <anchorfile>classorg_1_1lflang_1_1LFRuntimeModule.html</anchorfile>
      <anchor>ac3779c57711e49baabd1e77daccec424</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Class&lt;? extends IFormatter2 &gt;</type>
      <name>bindIFormatter2</name>
      <anchorfile>classorg_1_1lflang_1_1LFRuntimeModule.html</anchorfile>
      <anchor>af2ce1e0f9ce910a007416a2820450f94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Class&lt;? extends IGlobalScopeProvider &gt;</type>
      <name>bindIGlobalScopeProvider</name>
      <anchorfile>classorg_1_1lflang_1_1LFRuntimeModule.html</anchorfile>
      <anchor>a8da8803fff215fe4db0c84998583f7d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Class&lt;? extends ISyntaxErrorMessageProvider &gt;</type>
      <name>bindISyntaxErrorMessageProvider</name>
      <anchorfile>classorg_1_1lflang_1_1LFRuntimeModule.html</anchorfile>
      <anchor>ae3a8c117559b046be848c94466cc9d65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Class&lt;? extends INamesAreUniqueValidationHelper &gt;</type>
      <name>bindNamesAreUniqueValidationHelper</name>
      <anchorfile>classorg_1_1lflang_1_1LFRuntimeModule.html</anchorfile>
      <anchor>ad75f8188b74001788da78154636e0250</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::LFStandaloneSetup</name>
    <filename>classorg_1_1lflang_1_1LFStandaloneSetup.html</filename>
    <member kind="function">
      <type>Injector</type>
      <name>createInjector</name>
      <anchorfile>classorg_1_1lflang_1_1LFStandaloneSetup.html</anchorfile>
      <anchor>aa6b2907b2791ec5bf1e830f9611cf4f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Injector</type>
      <name>doSetup</name>
      <anchorfile>classorg_1_1lflang_1_1LFStandaloneSetup.html</anchorfile>
      <anchor>a9ea6d9229ed07721393eb08b44a8f695</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static Injector</type>
      <name>injector</name>
      <anchorfile>classorg_1_1lflang_1_1LFStandaloneSetup.html</anchorfile>
      <anchor>a1bf576eac04b1c611048ccd2ea93d9a6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::LFSyntaxErrorMessageProvider</name>
    <filename>classorg_1_1lflang_1_1LFSyntaxErrorMessageProvider.html</filename>
    <member kind="function">
      <type>SyntaxErrorMessage</type>
      <name>getSyntaxErrorMessage</name>
      <anchorfile>classorg_1_1lflang_1_1LFSyntaxErrorMessageProvider.html</anchorfile>
      <anchor>a63fba64265f505796190b09f8be172df</anchor>
      <arglist>(IParserErrorContext context)</arglist>
    </member>
    <member kind="variable">
      <type>Set&lt; String &gt;</type>
      <name>keywords</name>
      <anchorfile>classorg_1_1lflang_1_1LFSyntaxErrorMessageProvider.html</anchorfile>
      <anchor>adba4b2b42d504a90fd3c54189da4dc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static String</type>
      <name>SINGLY_QUOTED_STRING</name>
      <anchorfile>classorg_1_1lflang_1_1LFSyntaxErrorMessageProvider.html</anchorfile>
      <anchor>a3a288624017df6fa4cc38feecc4ce30b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static String</type>
      <name>USED_RESERVED_KEYWORD</name>
      <anchorfile>classorg_1_1lflang_1_1LFSyntaxErrorMessageProvider.html</anchorfile>
      <anchor>ac7fe1a72f4c2fd7e258ed2973247a2cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>IGrammarAccess</type>
      <name>grammarAccess</name>
      <anchorfile>classorg_1_1lflang_1_1LFSyntaxErrorMessageProvider.html</anchorfile>
      <anchor>ab20bb73de034fb1c117e86f064788868</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::LocalStrings</name>
    <filename>classorg_1_1lflang_1_1LocalStrings.html</filename>
    <member kind="variable" static="yes">
      <type>static final ResourceBundle</type>
      <name>res</name>
      <anchorfile>classorg_1_1lflang_1_1LocalStrings.html</anchorfile>
      <anchor>aa3bd121ce70c324bd6c520f0dc0cd9d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>VERSION</name>
      <anchorfile>classorg_1_1lflang_1_1LocalStrings.html</anchorfile>
      <anchor>ae434fe8acbcc69688f2c6f4b2eb6a497</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::MainConflictChecker</name>
    <filename>classorg_1_1lflang_1_1MainConflictChecker.html</filename>
    <class kind="class">org::lflang::MainConflictChecker::PackageVisitor</class>
    <member kind="function">
      <type></type>
      <name>MainConflictChecker</name>
      <anchorfile>classorg_1_1lflang_1_1MainConflictChecker.html</anchorfile>
      <anchor>a133182d2c2256d6b6acec6172c411ea4</anchor>
      <arglist>(FileConfig fileConfig)</arglist>
    </member>
    <member kind="variable">
      <type>final List&lt; String &gt;</type>
      <name>conflicts</name>
      <anchorfile>classorg_1_1lflang_1_1MainConflictChecker.html</anchorfile>
      <anchor>ac8771a021492c59b509fce063febcc16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FileConfig</type>
      <name>fileConfig</name>
      <anchorfile>classorg_1_1lflang_1_1MainConflictChecker.html</anchorfile>
      <anchor>a78090b702fe6eafb6048cf61e24e7c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static final ResourceSet</type>
      <name>rs</name>
      <anchorfile>classorg_1_1lflang_1_1MainConflictChecker.html</anchorfile>
      <anchor>a90008309074d4807ce308fb1216b9671</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::MainConflictChecker::PackageVisitor</name>
    <filename>classorg_1_1lflang_1_1MainConflictChecker_1_1PackageVisitor.html</filename>
    <member kind="function">
      <type>FileVisitResult</type>
      <name>visitFile</name>
      <anchorfile>classorg_1_1lflang_1_1MainConflictChecker_1_1PackageVisitor.html</anchorfile>
      <anchor>af8c0a2a5a827cdca7d924eb78d5e50f3</anchor>
      <arglist>(Path path, BasicFileAttributes attr)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::MessageReporter</name>
    <filename>interfaceorg_1_1lflang_1_1MessageReporter.html</filename>
    <class kind="interface">org::lflang::MessageReporter::Stage2</class>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a57d77c79f0b81daf6984dd8316d97b98</anchor>
      <arglist>(EObject node)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>aedf0fe884f8fe74dac8b006c82da142c</anchor>
      <arglist>(EObject node, EStructuralFeature feature)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a3d5b75f44f1985a4e1024a8b43d61fec</anchor>
      <arglist>(Path file)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>aec08239e4e187b9fab9447f4d29b0479</anchor>
      <arglist>(Path file, int line)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a22bc622a160433fe40df98e229626760</anchor>
      <arglist>(Path file, Position pos)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>acdf8f1185473f0f703bc08dfd2d0ee3d</anchor>
      <arglist>(Path file, Range range)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>atNullableLine</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a398b2acbf471940ad542db86c34bd7dd</anchor>
      <arglist>(Path file, Integer line)</arglist>
    </member>
    <member kind="function">
      <type>default void</type>
      <name>clearHistory</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a1ed16fafcb62a47032aac34b21235d70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>getErrorsOccurred</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a893775fe31f7c6bc87e3040b6cdb21e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>nowhere</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a7afdb16413e8fdddbc7d4c53fdd81f0f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::MessageReporter::Stage2</name>
    <filename>interfaceorg_1_1lflang_1_1MessageReporter_1_1Stage2.html</filename>
    <member kind="function">
      <type>default void</type>
      <name>error</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter_1_1Stage2.html</anchorfile>
      <anchor>abe0a66d5ebd358ccfd8510a252ec77f5</anchor>
      <arglist>(String message)</arglist>
    </member>
    <member kind="function">
      <type>default void</type>
      <name>info</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter_1_1Stage2.html</anchorfile>
      <anchor>a9df39264884f5fb3eb4129af9e16cce2</anchor>
      <arglist>(String message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>report</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter_1_1Stage2.html</anchorfile>
      <anchor>ad34647f0220f80d320fcf34c91f52e9f</anchor>
      <arglist>(DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function">
      <type>default void</type>
      <name>warning</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter_1_1Stage2.html</anchorfile>
      <anchor>a9943c01bdc2cb0ee795ad8acd1ba4163</anchor>
      <arglist>(String message)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::MessageReporterBase</name>
    <filename>classorg_1_1lflang_1_1MessageReporterBase.html</filename>
    <base>org.lflang.MessageReporter</base>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a3d5b75f44f1985a4e1024a8b43d61fec</anchor>
      <arglist>(Path file)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>aec08239e4e187b9fab9447f4d29b0479</anchor>
      <arglist>(Path file, int line)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a22bc622a160433fe40df98e229626760</anchor>
      <arglist>(Path file, Position pos)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a00cdd7120113ce25c9830e183e14c66f</anchor>
      <arglist>(EObject node)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a77356f4ec9535154ed819b9b32a1ceee</anchor>
      <arglist>(EObject node, EStructuralFeature feature)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>aee12d3be7c0c2f5e32079dfddd54c7da</anchor>
      <arglist>(Path file, Range range)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>atNullableLine</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a398b2acbf471940ad542db86c34bd7dd</anchor>
      <arglist>(Path file, Integer line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearHistory</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a40dba989b4d7ea727cf7b4a6bea7431f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>getErrorsOccurred</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a7f189b3c1a3d8f9e1661756cc1d59f3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>nowhere</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a6d8e986624a920121b5c6a165f3073a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MessageReporterBase</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a5c365dca3727fd6728c2ac1ddd9f6af6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>abstract void</type>
      <name>report</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a064ce0489556a88f56a47059c1bb146b</anchor>
      <arglist>(Path path, Range range, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reportOnNode</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a084f678d4f71661620ed91058e4694c1</anchor>
      <arglist>(EObject node, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>abstract void</type>
      <name>reportOnNode</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a15182aae01e7854ffc6b62d571221108</anchor>
      <arglist>(EObject node, EStructuralFeature feature, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>abstract void</type>
      <name>reportWithoutPosition</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a22366308e9b986fea36ab340999cca98</anchor>
      <arglist>(DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Stage2</type>
      <name>wrap</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a365b78fc2a5d81158e450ea7aea5821b</anchor>
      <arglist>(Stage2 e)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::ModelInfo</name>
    <filename>classorg_1_1lflang_1_1ModelInfo.html</filename>
    <member kind="function">
      <type>void</type>
      <name>checkCaseInsensitiveNameCollisions</name>
      <anchorfile>classorg_1_1lflang_1_1ModelInfo.html</anchorfile>
      <anchor>abd96e57b5a760e9be328fcbeca30492a</anchor>
      <arglist>(Model model, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; NamedInstance&lt;?&gt; &gt;</type>
      <name>topologyCycles</name>
      <anchorfile>classorg_1_1lflang_1_1ModelInfo.html</anchorfile>
      <anchor>afceb92dbabb7f9461089f7680a350e92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1ModelInfo.html</anchorfile>
      <anchor>a228a0b131419bd61700c30c2faf3c941</anchor>
      <arglist>(Model model, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>InstantiationGraph</type>
      <name>instantiationGraph</name>
      <anchorfile>classorg_1_1lflang_1_1ModelInfo.html</anchorfile>
      <anchor>aab23f6ceda66d020828dc0a14d52c9dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Model</type>
      <name>model</name>
      <anchorfile>classorg_1_1lflang_1_1ModelInfo.html</anchorfile>
      <anchor>a7d222265331082dcbafc740d1f3c0c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Set&lt; Assignment &gt;</type>
      <name>overflowingAssignments</name>
      <anchorfile>classorg_1_1lflang_1_1ModelInfo.html</anchorfile>
      <anchor>a809b47c853a12e222d8e94570f8e77d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Set&lt; Deadline &gt;</type>
      <name>overflowingDeadlines</name>
      <anchorfile>classorg_1_1lflang_1_1ModelInfo.html</anchorfile>
      <anchor>a56b9656b0865184729a8b9852e45b38e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Set&lt; Parameter &gt;</type>
      <name>overflowingParameters</name>
      <anchorfile>classorg_1_1lflang_1_1ModelInfo.html</anchorfile>
      <anchor>a202da90360177127472a41a89115799c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>updated</name>
      <anchorfile>classorg_1_1lflang_1_1ModelInfo.html</anchorfile>
      <anchor>af2aa08a6381927360aa65a6ab1150f1c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::scoping::LFGlobalScopeProvider</name>
    <filename>classorg_1_1lflang_1_1scoping_1_1LFGlobalScopeProvider.html</filename>
    <member kind="function">
      <type>Set&lt; Resource &gt;</type>
      <name>getImportedResources</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFGlobalScopeProvider.html</anchorfile>
      <anchor>a304713e60957d080bf02d85f05319926</anchor>
      <arglist>(Resource resource)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Set&lt; Resource &gt;</type>
      <name>getImportedResources</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFGlobalScopeProvider.html</anchorfile>
      <anchor>a73465a1f9184890006f16bb0ded2c066</anchor>
      <arglist>(Resource resource, LinkedHashSet&lt; URI &gt; uniqueImportURIs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>LinkedHashSet&lt; URI &gt;</type>
      <name>getImportedUris</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFGlobalScopeProvider.html</anchorfile>
      <anchor>a166506a00e09865766aca9cd379f5de7</anchor>
      <arglist>(Resource resource)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>URI</type>
      <name>resolve</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFGlobalScopeProvider.html</anchorfile>
      <anchor>a8743488ef5a97f07952c6cf1dcd13640</anchor>
      <arglist>(String uriStr, Resource resource)</arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static final String</type>
      <name>IMPORTED_RESOURCES</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFGlobalScopeProvider.html</anchorfile>
      <anchor>a86cf8cbea315ca7c2439f34ded647745</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static final String</type>
      <name>IMPORTED_URIS</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFGlobalScopeProvider.html</anchorfile>
      <anchor>aeff53f82b42b4998ff324a667328dc99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package" static="yes">
      <type>static final Splitter</type>
      <name>SPLITTER</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFGlobalScopeProvider.html</anchorfile>
      <anchor>a970471167c0898e739b4e808e79eb18a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::scoping::LFScopeProvider</name>
    <filename>classorg_1_1lflang_1_1scoping_1_1LFScopeProvider.html</filename>
    <base>org.lflang.scoping.LFScopeProviderImpl</base>
    <member kind="function">
      <type>IScope</type>
      <name>getScope</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl.html</anchorfile>
      <anchor>aec43057263506b71ae15b1ed00e84d6f</anchor>
      <arglist>(EObject context, EReference reference)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IScope</type>
      <name>getScopeForAssignment</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl.html</anchorfile>
      <anchor>afb41aea05be89597a16fc4d40ac752fe</anchor>
      <arglist>(Assignment assignment, EReference reference)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IScope</type>
      <name>getScopeForImportedReactor</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl.html</anchorfile>
      <anchor>a869f3822e54c5461bacbbb3db70da7d7</anchor>
      <arglist>(ImportedReactor context, EReference reference)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IScope</type>
      <name>getScopeForParameterReference</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl.html</anchorfile>
      <anchor>af05bee7c878f7dd366321018ff8805c4</anchor>
      <arglist>(ParameterReference term, EReference reference)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IScope</type>
      <name>getScopeForReactorDecl</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl.html</anchorfile>
      <anchor>a1ca9d9f3b2d220818aae54dc62b960a8</anchor>
      <arglist>(EObject obj, EReference reference)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IScope</type>
      <name>getScopeForVarRef</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl.html</anchorfile>
      <anchor>ad2e88a3f81b7005f5be5ca54f4c44e04</anchor>
      <arglist>(VarRef variable, EReference reference)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IScope</type>
      <name>getScopeForWidthTerm</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl.html</anchorfile>
      <anchor>a19253d6a2f5de4473e7986cfd62aeaff</anchor>
      <arglist>(WidthTerm term, EReference reference)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::scoping::LFScopeProviderImpl</name>
    <filename>classorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl.html</filename>
    <class kind="enum">org::lflang::scoping::LFScopeProviderImpl::RefType</class>
    <member kind="function">
      <type>IScope</type>
      <name>getScope</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl.html</anchorfile>
      <anchor>aec43057263506b71ae15b1ed00e84d6f</anchor>
      <arglist>(EObject context, EReference reference)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IScope</type>
      <name>getScopeForAssignment</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl.html</anchorfile>
      <anchor>afb41aea05be89597a16fc4d40ac752fe</anchor>
      <arglist>(Assignment assignment, EReference reference)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IScope</type>
      <name>getScopeForImportedReactor</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl.html</anchorfile>
      <anchor>a869f3822e54c5461bacbbb3db70da7d7</anchor>
      <arglist>(ImportedReactor context, EReference reference)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IScope</type>
      <name>getScopeForParameterReference</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl.html</anchorfile>
      <anchor>af05bee7c878f7dd366321018ff8805c4</anchor>
      <arglist>(ParameterReference term, EReference reference)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IScope</type>
      <name>getScopeForReactorDecl</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl.html</anchorfile>
      <anchor>a1ca9d9f3b2d220818aae54dc62b960a8</anchor>
      <arglist>(EObject obj, EReference reference)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IScope</type>
      <name>getScopeForVarRef</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl.html</anchorfile>
      <anchor>ad2e88a3f81b7005f5be5ca54f4c44e04</anchor>
      <arglist>(VarRef variable, EReference reference)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IScope</type>
      <name>getScopeForWidthTerm</name>
      <anchorfile>classorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl.html</anchorfile>
      <anchor>a19253d6a2f5de4473e7986cfd62aeaff</anchor>
      <arglist>(WidthTerm term, EReference reference)</arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::scoping::LFScopeProviderImpl::RefType</name>
    <filename>enumorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl_1_1RefType.html</filename>
    <member kind="variable">
      <type></type>
      <name>CLEFT</name>
      <anchorfile>enumorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl_1_1RefType.html</anchorfile>
      <anchor>a744ed220c3dc1f39ede657859607f01c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CRIGHT</name>
      <anchorfile>enumorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl_1_1RefType.html</anchorfile>
      <anchor>afb7dbd72613ef6fa824ce0a1e9989410</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DEADLINE</name>
      <anchorfile>enumorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl_1_1RefType.html</anchorfile>
      <anchor>a8127ff3d4403f5e7cd422b6f5597ab16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>EFFECT</name>
      <anchorfile>enumorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl_1_1RefType.html</anchorfile>
      <anchor>a456dd9a3aa3505e0721957bb83e3f9be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NULL</name>
      <anchorfile>enumorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl_1_1RefType.html</anchorfile>
      <anchor>a7b3010e8928607e43feee8ff2041335a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SOURCE</name>
      <anchorfile>enumorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl_1_1RefType.html</anchorfile>
      <anchor>a88194434fb7d853a38588c20e352fa9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRIGGER</name>
      <anchorfile>enumorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl_1_1RefType.html</anchorfile>
      <anchor>ab4cb206f1eb907356ae07c08070d5644</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>WATCHDOG</name>
      <anchorfile>enumorg_1_1lflang_1_1scoping_1_1LFScopeProviderImpl_1_1RefType.html</anchorfile>
      <anchor>a9475a45f85534dee4b13bc44fe655f6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::AuthProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1AuthProperty.html</filename>
    <base>org.lflang.target.property.BooleanProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a75af8b7795ac64547d78a89d9e692f41</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ab121b5771b3f4f1e527438912b64d649</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1AuthProperty.html</anchorfile>
      <anchor>a45797e7e6cb88f3dbc1898f058f72f89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ac8b6df55bfdc3fb93ae39c19cd868e6c</anchor>
      <arglist>(Boolean value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final AuthProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1AuthProperty.html</anchorfile>
      <anchor>a6f55dbdbb997652c95a3f89a45bcf4a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Boolean</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a76bc4d02a13fde3c3157dbac120b254c</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::BooleanProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; Boolean, PrimitiveType &gt;</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a75af8b7795ac64547d78a89d9e692f41</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ab121b5771b3f4f1e527438912b64d649</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>abstract String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a377e5e754300aea66587e195a3f3fc39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ac8b6df55bfdc3fb93ae39c19cd868e6c</anchor>
      <arglist>(Boolean value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>BooleanProperty</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ac37f12c87fa21098807a5e1dee252757</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Boolean</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a76bc4d02a13fde3c3157dbac120b254c</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::BuildCommandsProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1BuildCommandsProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; List&lt; String &gt;, UnionType &gt;</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; String &gt;</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BuildCommandsProperty.html</anchorfile>
      <anchor>aac1ad89d69deb9b86ff8869896bf89a2</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; String &gt;</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BuildCommandsProperty.html</anchorfile>
      <anchor>a2f9cb48ab71a0cbc513d65916773e986</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BuildCommandsProperty.html</anchorfile>
      <anchor>a038284fd42dd14781e9df482fe2fa1d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BuildCommandsProperty.html</anchorfile>
      <anchor>a7aa6bc805e4d4e3ad11d600c3e875529</anchor>
      <arglist>(List&lt; String &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final BuildCommandsProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BuildCommandsProperty.html</anchorfile>
      <anchor>ac5e9235a51844d675ee1eb071e1e94d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BuildCommandsProperty.html</anchorfile>
      <anchor>ae9983571770a41917233b22d48f08481</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::BuildTypeProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1BuildTypeProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; BuildType, BuildTypeType &gt;</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>BuildType</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BuildTypeProperty.html</anchorfile>
      <anchor>a13fd15ec94ba12285afad72e7151e54e</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BuildType</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BuildTypeProperty.html</anchorfile>
      <anchor>a7febc86e8d1bae25aa3750cba6a1a379</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BuildTypeProperty.html</anchorfile>
      <anchor>a05340b3c24646dec6aded0c740f11c00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BuildTypeProperty.html</anchorfile>
      <anchor>a55d6f74c89da256f9a674c237302b3c1</anchor>
      <arglist>(BuildType value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final BuildTypeProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BuildTypeProperty.html</anchorfile>
      <anchor>a3290adf121f6b42f56db73fb23a923c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>BuildType</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BuildTypeProperty.html</anchorfile>
      <anchor>a8ebd70374c435beeab9855d5737155ee</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::CargoDependenciesProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1CargoDependenciesProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; Map&lt; String, CargoDependencySpec &gt;, CargoDependenciesPropertyType &gt;</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Map&lt; String, CargoDependencySpec &gt;</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CargoDependenciesProperty.html</anchorfile>
      <anchor>ad0b4e48b37599d9714d69e2cd7e872d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CargoDependenciesProperty.html</anchorfile>
      <anchor>a7274211d00ab37b2d9a1e1e35977ade9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CargoDependenciesProperty.html</anchorfile>
      <anchor>aed224bd0989480a5250bd5942916d069</anchor>
      <arglist>(Map&lt; String, CargoDependencySpec &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final CargoDependenciesProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CargoDependenciesProperty.html</anchorfile>
      <anchor>ad7513c8f8dfec7b35678fdd01f143173</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Map&lt; String, CargoDependencySpec &gt;</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CargoDependenciesProperty.html</anchorfile>
      <anchor>a2e3f8edce54331b52d612e87ab601c07</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Map&lt; String, CargoDependencySpec &gt;</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CargoDependenciesProperty.html</anchorfile>
      <anchor>ac97eb7bd1a76467cad77047a95711e53</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::CargoFeaturesProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1CargoFeaturesProperty.html</filename>
    <base>org.lflang.target.property.StringListProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; String &gt;</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringListProperty.html</anchorfile>
      <anchor>af234cf49d12e5a3c07062b6347360b70</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; String &gt;</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringListProperty.html</anchorfile>
      <anchor>a38239a25ba541b5ee3778d70484f8a13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CargoFeaturesProperty.html</anchorfile>
      <anchor>a55bce2cab0b86f6dbd23f91f92fcf830</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringListProperty.html</anchorfile>
      <anchor>a7961f8e2d0be6ea9a688caab014ca650</anchor>
      <arglist>(List&lt; String &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringListProperty.html</anchorfile>
      <anchor>ab241a54330a5bc4072716e92558737a7</anchor>
      <arglist>(TargetConfig config, List&lt; String &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final CargoFeaturesProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CargoFeaturesProperty.html</anchorfile>
      <anchor>a8b488d8b5e1c7923ffbbb58172951aaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringListProperty.html</anchorfile>
      <anchor>a5967d5d3b98228c0c68936535e9ad870</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::ClockSyncModeProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncModeProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; ClockSyncMode, ClockSyncModeType &gt;</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>ClockSyncMode</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncModeProperty.html</anchorfile>
      <anchor>a3b863cd389c2b8b643b374859b3a9270</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClockSyncMode</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncModeProperty.html</anchorfile>
      <anchor>a92719216e2724f51c621c3fdcff81f69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncModeProperty.html</anchorfile>
      <anchor>a9f586125381982ea009838951e9b4dd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncModeProperty.html</anchorfile>
      <anchor>acc871366cd01172602b05434f398856e</anchor>
      <arglist>(ClockSyncMode value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final ClockSyncModeProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncModeProperty.html</anchorfile>
      <anchor>ac9f7127c77105fa388251d3bc428001d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ClockSyncMode</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncModeProperty.html</anchorfile>
      <anchor>a05d08ce4617725f9eaed55adf3c38f40</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::ClockSyncOptionsProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; ClockSyncOptions, DictionaryType &gt;</base>
    <class kind="enum">org::lflang::target::property::ClockSyncOptionsProperty::ClockSyncOption</class>
    <class kind="class">org::lflang::target::property::ClockSyncOptionsProperty::ClockSyncOptions</class>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>ClockSyncOptions</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty.html</anchorfile>
      <anchor>a5275ba66cd4f242ab8d622c2c19e8665</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClockSyncOptions</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty.html</anchorfile>
      <anchor>a6399c03d5ea5fac850522e1fa73647a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty.html</anchorfile>
      <anchor>adc0f1c5fbb79fe8bd2f580e7a8d83d6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty.html</anchorfile>
      <anchor>a830aab02059984bfaf74db6aab19d6d9</anchor>
      <arglist>(ClockSyncOptions value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final ClockSyncOptionsProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty.html</anchorfile>
      <anchor>a1e646706869178f9a7239c098fb2602e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ClockSyncOptions</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty.html</anchorfile>
      <anchor>ad9f2a30232ebf98d2d08cb14a6fb0771</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::target::property::ClockSyncOptionsProperty::ClockSyncOption</name>
    <filename>enumorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty_1_1ClockSyncOption.html</filename>
    <base>org.lflang.target.property.type.DictionaryType.DictionaryElement</base>
    <member kind="function">
      <type></type>
      <name>ClockSyncOption</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty_1_1ClockSyncOption.html</anchorfile>
      <anchor>aa4f54e85a744b91be1f7da2a31baf33a</anchor>
      <arglist>(String alias, PrimitiveType type)</arglist>
    </member>
    <member kind="function">
      <type>TargetPropertyType</type>
      <name>getType</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty_1_1ClockSyncOption.html</anchorfile>
      <anchor>a5982f638a1532b400f7f2ced694ecc80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty_1_1ClockSyncOption.html</anchorfile>
      <anchor>a31ccdb37aa785ed2107e5c9e9d19467e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ATTENUATION</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty_1_1ClockSyncOption.html</anchorfile>
      <anchor>a6b2994762c72cb5e064ef8d35aa6219c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>COLLECT_STATS</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty_1_1ClockSyncOption.html</anchorfile>
      <anchor>af187e58d37a1456f6620b8f6fd16963b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>LOCAL_FEDERATES_ON</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty_1_1ClockSyncOption.html</anchorfile>
      <anchor>ad5c676eb237420b8fd026bd9ad46c2ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PERIOD</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty_1_1ClockSyncOption.html</anchorfile>
      <anchor>a73daed0191cc7c1de96efac5bee1f4d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TEST_OFFSET</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty_1_1ClockSyncOption.html</anchorfile>
      <anchor>a44cf5bc94812ff401072500f91f71406</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRIALS</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty_1_1ClockSyncOption.html</anchorfile>
      <anchor>ada93d6470ff8f949ae4404625b4e291f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final PrimitiveType</type>
      <name>type</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty_1_1ClockSyncOption.html</anchorfile>
      <anchor>a2cbfa423d44dd0a682a748e03ea05bd5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::ClockSyncOptionsProperty::ClockSyncOptions</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty_1_1ClockSyncOptions.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>attenuation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty_1_1ClockSyncOptions.html</anchorfile>
      <anchor>aecbf0bc120d58b64f70dfac8a1286e04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>collectStats</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty_1_1ClockSyncOptions.html</anchorfile>
      <anchor>a6cf972a8cd1241db05078bb9bb867548</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>boolean</type>
      <name>localFederatesOn</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty_1_1ClockSyncOptions.html</anchorfile>
      <anchor>a76f9eab44006fc58ee38246bf6a4286b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeValue</type>
      <name>period</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty_1_1ClockSyncOptions.html</anchorfile>
      <anchor>afcf3654854e4dbd61696d07e0abfcfba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimeValue</type>
      <name>testOffset</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty_1_1ClockSyncOptions.html</anchorfile>
      <anchor>a2b5d5ec4f3ecc22cacc4ef2a3f28b455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>trials</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ClockSyncOptionsProperty_1_1ClockSyncOptions.html</anchorfile>
      <anchor>a803cb51a6d100530236be8ef911158da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::CmakeIncludeProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1CmakeIncludeProperty.html</filename>
    <base>org.lflang.target.property.FileListProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; String &gt;</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>ad0c729fee77558083245c6334f5302a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CmakeIncludeProperty.html</anchorfile>
      <anchor>abbc8302a5054faec3007d5aa44281064</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>a702ad99627e6e75758f0af67a15a094e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CmakeIncludeProperty.html</anchorfile>
      <anchor>a90a351be250aad4b2be5ede25aa15054</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CmakeIncludeProperty.html</anchorfile>
      <anchor>add874de927593829f997641d6607a68c</anchor>
      <arglist>(List&lt; String &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>a4da817da6c76a7f813a56e0d8b3f9625</anchor>
      <arglist>(TargetConfig config, List&lt; String &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final CmakeIncludeProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CmakeIncludeProperty.html</anchorfile>
      <anchor>a61a4047a8bf5941c6cb9a60900dd6e1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CmakeIncludeProperty.html</anchorfile>
      <anchor>ac0c0ece2d1b36d585b0abb11aa094769</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CmakeIncludeProperty.html</anchorfile>
      <anchor>a900aa1c33288dd74f591e81c652d9a41</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::CmakeInitIncludeProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1CmakeInitIncludeProperty.html</filename>
    <base>org.lflang.target.property.FileListProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; String &gt;</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>ad0c729fee77558083245c6334f5302a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CmakeInitIncludeProperty.html</anchorfile>
      <anchor>a283e5e9f0782ed8bae1b3e53581c9585</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>a702ad99627e6e75758f0af67a15a094e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CmakeInitIncludeProperty.html</anchorfile>
      <anchor>acc76ac5f7aaf2e32504021cfb9a9e778</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CmakeInitIncludeProperty.html</anchorfile>
      <anchor>ad801072846cba46cf429e38a89d8922a</anchor>
      <arglist>(List&lt; String &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>a4da817da6c76a7f813a56e0d8b3f9625</anchor>
      <arglist>(TargetConfig config, List&lt; String &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final CmakeInitIncludeProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CmakeInitIncludeProperty.html</anchorfile>
      <anchor>a7f4278efefa96740b19f5f415daf19e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CmakeInitIncludeProperty.html</anchorfile>
      <anchor>a30c7c5873c94f6a20f9b88599a2b89b3</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CmakeInitIncludeProperty.html</anchorfile>
      <anchor>a86235b707ea489b933976e07ec0057e3</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::CompileDefinitionsProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1CompileDefinitionsProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; Map&lt; String, String &gt;, StringDictionaryType &gt;</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Map&lt; String, String &gt;</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CompileDefinitionsProperty.html</anchorfile>
      <anchor>ac9aaa320c4ab8d719dd0fe6bc0adef62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CompileDefinitionsProperty.html</anchorfile>
      <anchor>a57767eaf3e52e4b3935bf690400bd59d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CompileDefinitionsProperty.html</anchorfile>
      <anchor>ab4a1a7fcd5a173da80b3733c62bca6ac</anchor>
      <arglist>(Map&lt; String, String &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CompileDefinitionsProperty.html</anchorfile>
      <anchor>a6bffcf74be1c4d6de72e13a1c67b46f3</anchor>
      <arglist>(TargetConfig config, Map&lt; String, String &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final CompileDefinitionsProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CompileDefinitionsProperty.html</anchorfile>
      <anchor>a80ffe1edca0601eead9a46eb37b61928</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Map&lt; String, String &gt;</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CompileDefinitionsProperty.html</anchorfile>
      <anchor>af821bd0b1254bbf4ace60964128ed3bb</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Map&lt; String, String &gt;</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CompileDefinitionsProperty.html</anchorfile>
      <anchor>ac1a77b865de5e245f204d6f083a43fba</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::CompilerProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1CompilerProperty.html</filename>
    <base>org.lflang.target.property.StringProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>a1399e7174c14f2293e7dbc8e9e7886cc</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>a30a818f243a7242000bac28eb3995686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CompilerProperty.html</anchorfile>
      <anchor>a263547bfafe3519d893838d5836213eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>aa1872cfeb3dcc048cce280b8476ad978</anchor>
      <arglist>(String value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final CompilerProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CompilerProperty.html</anchorfile>
      <anchor>a1fc2a5d65316ca6975107d1047dccaf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>a3abf3f3328d85906dd4e3d4e7ee8336e</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::CoordinationOptionsProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1CoordinationOptionsProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; CoordinationOptions, DictionaryType &gt;</base>
    <class kind="enum">org::lflang::target::property::CoordinationOptionsProperty::CoordinationOption</class>
    <class kind="class">org::lflang::target::property::CoordinationOptionsProperty::CoordinationOptions</class>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>CoordinationOptions</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CoordinationOptionsProperty.html</anchorfile>
      <anchor>a715bcd7d94e5d658316b3da4b7cfb6ec</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CoordinationOptions</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CoordinationOptionsProperty.html</anchorfile>
      <anchor>acc99f1efe34c299387c0bd42bf8c260d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CoordinationOptionsProperty.html</anchorfile>
      <anchor>a1d45d09f7e187bb93ee4734060896f3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CoordinationOptionsProperty.html</anchorfile>
      <anchor>ab00ba5cf3cc7da93364e6c2494bba888</anchor>
      <arglist>(CoordinationOptions value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final CoordinationOptionsProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CoordinationOptionsProperty.html</anchorfile>
      <anchor>a3fd2078ad716fbe321d40643a3acd871</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>CoordinationOptions</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CoordinationOptionsProperty.html</anchorfile>
      <anchor>a87406f29d37abdfec64266d6a0861bbc</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::target::property::CoordinationOptionsProperty::CoordinationOption</name>
    <filename>enumorg_1_1lflang_1_1target_1_1property_1_1CoordinationOptionsProperty_1_1CoordinationOption.html</filename>
    <base>org.lflang.target.property.type.DictionaryType.DictionaryElement</base>
    <member kind="function">
      <type></type>
      <name>CoordinationOption</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1CoordinationOptionsProperty_1_1CoordinationOption.html</anchorfile>
      <anchor>a73b3c62042f05510f823783c77d8b6ad</anchor>
      <arglist>(String alias, PrimitiveType type)</arglist>
    </member>
    <member kind="function">
      <type>TargetPropertyType</type>
      <name>getType</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1CoordinationOptionsProperty_1_1CoordinationOption.html</anchorfile>
      <anchor>a26547e0d9bbc2926141a0708195aecfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1CoordinationOptionsProperty_1_1CoordinationOption.html</anchorfile>
      <anchor>aaeec958156176652b2ef4c881146c661</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ADVANCE_MESSAGE_INTERVAL</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1CoordinationOptionsProperty_1_1CoordinationOption.html</anchorfile>
      <anchor>a7462503bb3c27c9a32eb1894dbe80d26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final PrimitiveType</type>
      <name>type</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1CoordinationOptionsProperty_1_1CoordinationOption.html</anchorfile>
      <anchor>a2103fa029d2d423a81428c1c601141ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::CoordinationOptionsProperty::CoordinationOptions</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1CoordinationOptionsProperty_1_1CoordinationOptions.html</filename>
    <member kind="variable">
      <type>TimeValue</type>
      <name>advanceMessageInterval</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CoordinationOptionsProperty_1_1CoordinationOptions.html</anchorfile>
      <anchor>a922931dc2402f07e9f27af9fd60a3050</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::CoordinationProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1CoordinationProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; CoordinationMode, CoordinationModeType &gt;</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>CoordinationMode</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CoordinationProperty.html</anchorfile>
      <anchor>a62814ddc98382ddaa789da0c75e19887</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CoordinationMode</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CoordinationProperty.html</anchorfile>
      <anchor>aa2ef2849b1187257d1842b4cd0948a7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CoordinationProperty.html</anchorfile>
      <anchor>af90cf20bcccd9a58b5e54bc522fc48b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CoordinationProperty.html</anchorfile>
      <anchor>ab9c97be7814efa3d9b94be863aafbdb1</anchor>
      <arglist>(CoordinationMode value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final CoordinationProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CoordinationProperty.html</anchorfile>
      <anchor>aa7513cc2a3428d4a30b71a19c06866c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>CoordinationMode</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1CoordinationProperty.html</anchorfile>
      <anchor>ac1a9371eda16d5220c2e0839df582078</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::DNETProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1DNETProperty.html</filename>
    <base>org.lflang.target.property.BooleanProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a75af8b7795ac64547d78a89d9e692f41</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1DNETProperty.html</anchorfile>
      <anchor>aed7d587cafe041323a851e3d5ddc09be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1DNETProperty.html</anchorfile>
      <anchor>a23c4e9095671a15175061fddcf93551e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ac8b6df55bfdc3fb93ae39c19cd868e6c</anchor>
      <arglist>(Boolean value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final DNETProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1DNETProperty.html</anchorfile>
      <anchor>ab1397448081e3ffa97db59115ab210db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Boolean</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a76bc4d02a13fde3c3157dbac120b254c</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::DockerProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1DockerProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; DockerOptions, UnionType &gt;</base>
    <class kind="enum">org::lflang::target::property::DockerProperty::DockerOption</class>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>record</type>
      <name>DockerOptions</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1DockerProperty.html</anchorfile>
      <anchor>a5588627059efada16df75a2294d404d8</anchor>
      <arglist>(boolean enabled, boolean noBuild, String builderBase, String runnerBase, String rti, String shell, String preBuildScript, String postBuildScript, String preRunScript, String envFile, String dockerConfigFile)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>DockerOptions</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1DockerProperty.html</anchorfile>
      <anchor>a3a8aaa1f0e32a16bee1707aad2b43ac9</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DockerOptions</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1DockerProperty.html</anchorfile>
      <anchor>a95ecfcd1811e1f6625cca3eb3f396490</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1DockerProperty.html</anchorfile>
      <anchor>a074a4d8fbaabb278c86d764f02ddf4c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1DockerProperty.html</anchorfile>
      <anchor>a3d24f846db527858690eaf3ccec04031</anchor>
      <arglist>(DockerOptions value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final DockerProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1DockerProperty.html</anchorfile>
      <anchor>a6fbabd7c6287a9d6f7d1c3ae64a5b8b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>DockerOptions</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1DockerProperty.html</anchorfile>
      <anchor>a80dc5e5ca1755d893f1eb4ed5366b2df</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::target::property::DockerProperty::DockerOption</name>
    <filename>enumorg_1_1lflang_1_1target_1_1property_1_1DockerProperty_1_1DockerOption.html</filename>
    <base>org.lflang.target.property.type.DictionaryType.DictionaryElement</base>
    <member kind="function">
      <type></type>
      <name>DockerOption</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1DockerProperty_1_1DockerOption.html</anchorfile>
      <anchor>ae7c58889a9156541028de5a73fd62af4</anchor>
      <arglist>(String option, PrimitiveType type)</arglist>
    </member>
    <member kind="function">
      <type>TargetPropertyType</type>
      <name>getType</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1DockerProperty_1_1DockerOption.html</anchorfile>
      <anchor>afca0b4972a9b66803e44effa06a5874e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1DockerProperty_1_1DockerOption.html</anchorfile>
      <anchor>a29b8c7d708455711f8b37f8f811ce218</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BUILDER_BASE</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1DockerProperty_1_1DockerOption.html</anchorfile>
      <anchor>adb8da3d0b904e0c7ee1bc724a0eba8b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DOCKER_CONFIG_FILE</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1DockerProperty_1_1DockerOption.html</anchorfile>
      <anchor>abdeda3e6df2d49532d48e4ae7d0105db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ENV_FILE</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1DockerProperty_1_1DockerOption.html</anchorfile>
      <anchor>a53f6318794dedf2454d968603fe5a079</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NO_BUILD</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1DockerProperty_1_1DockerOption.html</anchorfile>
      <anchor>a9cbc38b7d344307448e2684c445e4790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final String</type>
      <name>option</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1DockerProperty_1_1DockerOption.html</anchorfile>
      <anchor>abd175d93355c27919fbf1ae81cdb4c07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>POST_BUILD_SCRIPT</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1DockerProperty_1_1DockerOption.html</anchorfile>
      <anchor>a6c876f1d39e3e65f64f5ba63c5cd2c3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PRE_BUILD_SCRIPT</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1DockerProperty_1_1DockerOption.html</anchorfile>
      <anchor>add2a65726810522cf5922dd80df3c4cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PRE_RUN_SCRIPT</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1DockerProperty_1_1DockerOption.html</anchorfile>
      <anchor>aedc5fe8ed98bacb17c36b31eb684d364</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RTI_IMAGE</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1DockerProperty_1_1DockerOption.html</anchorfile>
      <anchor>aa129ce1bb2afd0dfbc1de77edeb82d9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RUNNER_BASE</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1DockerProperty_1_1DockerOption.html</anchorfile>
      <anchor>ad5a75231a2776640229ba0a11e068368</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final PrimitiveType</type>
      <name>type</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1DockerProperty_1_1DockerOption.html</anchorfile>
      <anchor>adfa54448ef2323a8e78be86c8b9e554f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::ExportDependencyGraphProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1ExportDependencyGraphProperty.html</filename>
    <base>org.lflang.target.property.BooleanProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a75af8b7795ac64547d78a89d9e692f41</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ab121b5771b3f4f1e527438912b64d649</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ExportDependencyGraphProperty.html</anchorfile>
      <anchor>af16b8360adab174178d51b46b27f41ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ac8b6df55bfdc3fb93ae39c19cd868e6c</anchor>
      <arglist>(Boolean value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final ExportDependencyGraphProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ExportDependencyGraphProperty.html</anchorfile>
      <anchor>a2acd92b4e34cc6218d3fedc16d9706e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Boolean</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a76bc4d02a13fde3c3157dbac120b254c</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::ExternalRuntimePathProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1ExternalRuntimePathProperty.html</filename>
    <base>org.lflang.target.property.StringProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>a1399e7174c14f2293e7dbc8e9e7886cc</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>a30a818f243a7242000bac28eb3995686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ExternalRuntimePathProperty.html</anchorfile>
      <anchor>ada4c064007db2611b53e7f96bd8ad2f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>aa1872cfeb3dcc048cce280b8476ad978</anchor>
      <arglist>(String value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final ExternalRuntimePathProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ExternalRuntimePathProperty.html</anchorfile>
      <anchor>a7afe9456a23b0f359a695d5e858be0cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>a3abf3f3328d85906dd4e3d4e7ee8336e</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::FastProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1FastProperty.html</filename>
    <base>org.lflang.target.property.BooleanProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a75af8b7795ac64547d78a89d9e692f41</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ab121b5771b3f4f1e527438912b64d649</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FastProperty.html</anchorfile>
      <anchor>a65cf89d3049a95158b248f9fe057823d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ac8b6df55bfdc3fb93ae39c19cd868e6c</anchor>
      <arglist>(Boolean value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FastProperty.html</anchorfile>
      <anchor>a08ad3519bacbc85aaf5aa8d206b1c51c</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final FastProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FastProperty.html</anchorfile>
      <anchor>a7f06cead915a9e3d062be46124f34271</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Boolean</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a76bc4d02a13fde3c3157dbac120b254c</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::FedSetupProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1FedSetupProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; String, PrimitiveType &gt;</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FedSetupProperty.html</anchorfile>
      <anchor>a75fcc86520a58ba861aa2697e515ee9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FedSetupProperty.html</anchorfile>
      <anchor>acd3b3897990d5d4da6e69a3b8f5bfd29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FedSetupProperty.html</anchorfile>
      <anchor>ac23ca70c1df3e97a81043e6f5835586f</anchor>
      <arglist>(String value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final FedSetupProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FedSetupProperty.html</anchorfile>
      <anchor>a38d29415b0598c57dfd098bae7d208d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FedSetupProperty.html</anchorfile>
      <anchor>ae25abe63f85db9f5d9ffb6791f89717a</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FedSetupProperty.html</anchorfile>
      <anchor>a43d49c7577afa5cfaa958426e6e287c5</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::FileListProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; List&lt; String &gt;, UnionType &gt;</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileListProperty</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>ad18958318c068602a151ae67afa1584d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; String &gt;</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>ad0c729fee77558083245c6334f5302a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>a702ad99627e6e75758f0af67a15a094e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>abstract String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a377e5e754300aea66587e195a3f3fc39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>abd0ef7d9b28eaf813689e1457142b6c9</anchor>
      <arglist>(List&lt; String &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>a4da817da6c76a7f813a56e0d8b3f9625</anchor>
      <arglist>(TargetConfig config, List&lt; String &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>aea50dba315365ce5a7492150ee0d5070</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>ace64ae9fa353b00c5f5ffe889a6acf19</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::FilesProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1FilesProperty.html</filename>
    <base>org.lflang.target.property.FileListProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; String &gt;</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>ad0c729fee77558083245c6334f5302a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>a702ad99627e6e75758f0af67a15a094e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FilesProperty.html</anchorfile>
      <anchor>ad47faf90a25d78fe1ac47873a80d4da0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>abd0ef7d9b28eaf813689e1457142b6c9</anchor>
      <arglist>(List&lt; String &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>a4da817da6c76a7f813a56e0d8b3f9625</anchor>
      <arglist>(TargetConfig config, List&lt; String &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final FilesProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FilesProperty.html</anchorfile>
      <anchor>af76855c203c4595bc9d2a6b675dbd09e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>aea50dba315365ce5a7492150ee0d5070</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>ace64ae9fa353b00c5f5ffe889a6acf19</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::KeepaliveProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1KeepaliveProperty.html</filename>
    <base>org.lflang.target.property.BooleanProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a75af8b7795ac64547d78a89d9e692f41</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ab121b5771b3f4f1e527438912b64d649</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1KeepaliveProperty.html</anchorfile>
      <anchor>a77f7d7605ba1f853c7152f7dc208b100</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ac8b6df55bfdc3fb93ae39c19cd868e6c</anchor>
      <arglist>(Boolean value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final KeepaliveProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1KeepaliveProperty.html</anchorfile>
      <anchor>a65339c162185926f10ba2486ffdaa7db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Boolean</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a76bc4d02a13fde3c3157dbac120b254c</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::LoggingProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1LoggingProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; LogLevel, LoggingType &gt;</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LogLevel</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1LoggingProperty.html</anchorfile>
      <anchor>aab9bca2e47fb843905d8efe2b3c0f008</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1LoggingProperty.html</anchorfile>
      <anchor>a80ff33530dca3c7ac655b1880ce7948d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1LoggingProperty.html</anchorfile>
      <anchor>a4c5a2d203a05b327ed0590eadf97c884</anchor>
      <arglist>(LogLevel value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final LoggingProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1LoggingProperty.html</anchorfile>
      <anchor>a45a7a93bc444ac4aa8d751435a049139</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>LogLevel</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1LoggingProperty.html</anchorfile>
      <anchor>a74247e05765efdeb343e9254f6b28fe0</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>LogLevel</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1LoggingProperty.html</anchorfile>
      <anchor>a7711568b25da62f2b8695f40ee2cf143</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::NoCompileProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1NoCompileProperty.html</filename>
    <base>org.lflang.target.property.BooleanProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a75af8b7795ac64547d78a89d9e692f41</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ab121b5771b3f4f1e527438912b64d649</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1NoCompileProperty.html</anchorfile>
      <anchor>aa91bcc1de646ea12868ea55692f8f4d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ac8b6df55bfdc3fb93ae39c19cd868e6c</anchor>
      <arglist>(Boolean value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final NoCompileProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1NoCompileProperty.html</anchorfile>
      <anchor>a8cba045d7993e0815cbffc8d84edeb4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Boolean</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a76bc4d02a13fde3c3157dbac120b254c</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::NoRuntimeValidationProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1NoRuntimeValidationProperty.html</filename>
    <base>org.lflang.target.property.BooleanProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a75af8b7795ac64547d78a89d9e692f41</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ab121b5771b3f4f1e527438912b64d649</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1NoRuntimeValidationProperty.html</anchorfile>
      <anchor>ac1fd117e9d13839eb993f9e7ecc018ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ac8b6df55bfdc3fb93ae39c19cd868e6c</anchor>
      <arglist>(Boolean value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final NoRuntimeValidationProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1NoRuntimeValidationProperty.html</anchorfile>
      <anchor>a56995472b810ea833780b54228978f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Boolean</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a76bc4d02a13fde3c3157dbac120b254c</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::NoSourceMappingProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1NoSourceMappingProperty.html</filename>
    <base>org.lflang.target.property.BooleanProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a75af8b7795ac64547d78a89d9e692f41</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ab121b5771b3f4f1e527438912b64d649</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1NoSourceMappingProperty.html</anchorfile>
      <anchor>a46437022ef559508e8fe5426e3c25d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ac8b6df55bfdc3fb93ae39c19cd868e6c</anchor>
      <arglist>(Boolean value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final NoSourceMappingProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1NoSourceMappingProperty.html</anchorfile>
      <anchor>a32a2123a09d18938aa528808b3a4ff2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Boolean</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a76bc4d02a13fde3c3157dbac120b254c</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::PlatformProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; PlatformOptions, UnionType &gt;</base>
    <class kind="enum">org::lflang::target::property::PlatformProperty::PlatformOption</class>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>PlatformOptions</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty.html</anchorfile>
      <anchor>a67c1c711862ed200d0b10abd5ec513c3</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PlatformOptions</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty.html</anchorfile>
      <anchor>a7e583bb14e89f51410b37069dadddb09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty.html</anchorfile>
      <anchor>acf9bb7ec8d6e040c9069417e265ea661</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>record</type>
      <name>Option&lt; T &gt;</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty.html</anchorfile>
      <anchor>a18348798cb127ddf231e0ae4d5b7b396</anchor>
      <arglist>(boolean setByUser, T value)</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>record</type>
      <name>PlatformOptions</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty.html</anchorfile>
      <anchor>a8f79c8f87f4cdc3d40237d3e0ad7639a</anchor>
      <arglist>(Platform platform, Option&lt; String &gt; board, Option&lt; String &gt; port, Option&lt; Integer &gt; baudRate, Option&lt; Boolean &gt; flash, Option&lt; Integer &gt; userThreads)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty.html</anchorfile>
      <anchor>a90ba8001460884ad1fde62d55bbdd2ab</anchor>
      <arglist>(PlatformOptions value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty.html</anchorfile>
      <anchor>abf549f201151471dbeb11d66c2252a49</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final PlatformProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty.html</anchorfile>
      <anchor>ad2c3643a396c961363535c3fcf99ea48</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>PlatformOptions</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty.html</anchorfile>
      <anchor>addc1a52eecb1ac0332ef06227433cb4b</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::target::property::PlatformProperty::PlatformOption</name>
    <filename>enumorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty_1_1PlatformOption.html</filename>
    <base>org.lflang.target.property.type.DictionaryType.DictionaryElement</base>
    <member kind="function">
      <type>TargetPropertyType</type>
      <name>getType</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty_1_1PlatformOption.html</anchorfile>
      <anchor>a7d3c73eb1c65231fe45def73f23cd9d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PlatformOption</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty_1_1PlatformOption.html</anchorfile>
      <anchor>a6017b92ede3db393f439f87a0628903b</anchor>
      <arglist>(String alias, TargetPropertyType type)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty_1_1PlatformOption.html</anchorfile>
      <anchor>a68b70bc5d398c2e0b0f3cba9d2850296</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BAUDRATE</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty_1_1PlatformOption.html</anchorfile>
      <anchor>a478f425114741512e04b9ccc4aaa9d30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BOARD</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty_1_1PlatformOption.html</anchorfile>
      <anchor>a7c59a89f1e959aaaeaad3e02c1d65cd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FLASH</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty_1_1PlatformOption.html</anchorfile>
      <anchor>a591851bb3b8c6bec550af56a3b79dd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NAME</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty_1_1PlatformOption.html</anchorfile>
      <anchor>abd7a991b542cc598dd2870e90e4e9429</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PORT</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty_1_1PlatformOption.html</anchorfile>
      <anchor>aa160927e84102d7ab3719d3fb904754c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final TargetPropertyType</type>
      <name>type</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty_1_1PlatformOption.html</anchorfile>
      <anchor>ae5b31d0a9d86b1e77689749fe0869109</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>USER_THREADS</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1PlatformProperty_1_1PlatformOption.html</anchorfile>
      <anchor>a0027df4f7d6bb5a171f513a97e3506ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::PrintStatisticsProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1PrintStatisticsProperty.html</filename>
    <base>org.lflang.target.property.BooleanProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a75af8b7795ac64547d78a89d9e692f41</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ab121b5771b3f4f1e527438912b64d649</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1PrintStatisticsProperty.html</anchorfile>
      <anchor>a4dfd498911e05a24904cd7149a700c57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ac8b6df55bfdc3fb93ae39c19cd868e6c</anchor>
      <arglist>(Boolean value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final PrintStatisticsProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1PrintStatisticsProperty.html</anchorfile>
      <anchor>afd1463a9880932abe61cc29bf9e86c2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Boolean</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a76bc4d02a13fde3c3157dbac120b254c</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::ProtobufsProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1ProtobufsProperty.html</filename>
    <base>org.lflang.target.property.FileListProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; String &gt;</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>ad0c729fee77558083245c6334f5302a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>a702ad99627e6e75758f0af67a15a094e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ProtobufsProperty.html</anchorfile>
      <anchor>ade0e8bd38b3ee8d10436a8c1d726af1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>abd0ef7d9b28eaf813689e1457142b6c9</anchor>
      <arglist>(List&lt; String &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>a4da817da6c76a7f813a56e0d8b3f9625</anchor>
      <arglist>(TargetConfig config, List&lt; String &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final ProtobufsProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1ProtobufsProperty.html</anchorfile>
      <anchor>ada7101ee14a3d6f67695cfae98b8ebd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>aea50dba315365ce5a7492150ee0d5070</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1FileListProperty.html</anchorfile>
      <anchor>ace64ae9fa353b00c5f5ffe889a6acf19</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::PythonVersionProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1PythonVersionProperty.html</filename>
    <base>org.lflang.target.property.StringProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>a1399e7174c14f2293e7dbc8e9e7886cc</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>a30a818f243a7242000bac28eb3995686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1PythonVersionProperty.html</anchorfile>
      <anchor>a5e6510cfffc5b0c8087b0899bb3bcb8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>aa1872cfeb3dcc048cce280b8476ad978</anchor>
      <arglist>(String value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final PythonVersionProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1PythonVersionProperty.html</anchorfile>
      <anchor>a4fb99f906cdca524456b31bbfad77e8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>a3abf3f3328d85906dd4e3d4e7ee8336e</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::Ros2DependenciesProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1Ros2DependenciesProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; List&lt; String &gt;, ArrayType &gt;</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; String &gt;</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1Ros2DependenciesProperty.html</anchorfile>
      <anchor>a78a6a9b8bc92ebe71bb6efbaa1066018</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; String &gt;</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1Ros2DependenciesProperty.html</anchorfile>
      <anchor>aca48fd0bbfefb5aaecc92f375186cd3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1Ros2DependenciesProperty.html</anchorfile>
      <anchor>a303d482193a1ed4961f074f4e1702b80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1Ros2DependenciesProperty.html</anchorfile>
      <anchor>a4e75ac45dde1e43a7b573063550d8310</anchor>
      <arglist>(List&lt; String &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1Ros2DependenciesProperty.html</anchorfile>
      <anchor>ad5ed2f66467b1a4f6fe784b3207d8fbc</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Ros2DependenciesProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1Ros2DependenciesProperty.html</anchorfile>
      <anchor>aaa92e86462987bdcb131b208aafa77a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1Ros2DependenciesProperty.html</anchorfile>
      <anchor>ae475654fd36c1ba34f9a93faa347d56b</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::Ros2Property</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1Ros2Property.html</filename>
    <base>org.lflang.target.property.BooleanProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a75af8b7795ac64547d78a89d9e692f41</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ab121b5771b3f4f1e527438912b64d649</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1Ros2Property.html</anchorfile>
      <anchor>a0c72e69c7032905e36184ea5f09b4835</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ac8b6df55bfdc3fb93ae39c19cd868e6c</anchor>
      <arglist>(Boolean value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Ros2Property</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1Ros2Property.html</anchorfile>
      <anchor>ad4c5d6a6edb3934d0d39b12db3dc0735</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Boolean</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a76bc4d02a13fde3c3157dbac120b254c</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::RuntimeVersionProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1RuntimeVersionProperty.html</filename>
    <base>org.lflang.target.property.StringProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>a1399e7174c14f2293e7dbc8e9e7886cc</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>a30a818f243a7242000bac28eb3995686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1RuntimeVersionProperty.html</anchorfile>
      <anchor>a8bce88bceaac38bb83ea0d3f97454814</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>aa1872cfeb3dcc048cce280b8476ad978</anchor>
      <arglist>(String value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final RuntimeVersionProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1RuntimeVersionProperty.html</anchorfile>
      <anchor>a6765a8c47f854cc83c1346ad07c8bf81</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>a3abf3f3328d85906dd4e3d4e7ee8336e</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::RustIncludeProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1RustIncludeProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; List&lt; Path &gt;, UnionType &gt;</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; Path &gt;</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1RustIncludeProperty.html</anchorfile>
      <anchor>ad0e0d0a08bbbb07ce5ace5d3209ff375</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; Path &gt;</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1RustIncludeProperty.html</anchorfile>
      <anchor>abf83ece1205d3315b55931352752a80b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1RustIncludeProperty.html</anchorfile>
      <anchor>a80b76c953dc4c12f888f923a6e2797c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1RustIncludeProperty.html</anchorfile>
      <anchor>a28b15c87479fb772d9526b2df5caea54</anchor>
      <arglist>(List&lt; Path &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final RustIncludeProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1RustIncludeProperty.html</anchorfile>
      <anchor>aa7bba6d0147c5681f97a126ebef199b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; Path &gt;</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1RustIncludeProperty.html</anchorfile>
      <anchor>a9db1fd60c4b84b132af369bf7bcc3c49</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::SchedulerProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1SchedulerProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; Scheduler, SchedulerType &gt;</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>Scheduler</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1SchedulerProperty.html</anchorfile>
      <anchor>ad4f1cf7590fa33e3da2e94218d874234</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Scheduler</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1SchedulerProperty.html</anchorfile>
      <anchor>a36457ee98b11f389a0cb5df2c7beb632</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1SchedulerProperty.html</anchorfile>
      <anchor>a397aadeb42a78c8f7eec6586f8506a0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1SchedulerProperty.html</anchorfile>
      <anchor>a624c7abb9a74855f58072d95a99e4306</anchor>
      <arglist>(Scheduler value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1SchedulerProperty.html</anchorfile>
      <anchor>a1c7b240471825ab7dd46b5cfc90fe816</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SchedulerProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1SchedulerProperty.html</anchorfile>
      <anchor>a84e4bb65ffcdecddfc083a3eec7fefc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Scheduler</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1SchedulerProperty.html</anchorfile>
      <anchor>a9c5794c08c18faaef9fe1a1f4516095a</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::SingleFileProjectProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1SingleFileProjectProperty.html</filename>
    <base>org.lflang.target.property.BooleanProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a75af8b7795ac64547d78a89d9e692f41</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ab121b5771b3f4f1e527438912b64d649</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1SingleFileProjectProperty.html</anchorfile>
      <anchor>a368702d36ba846163f768c3a574e6868</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ac8b6df55bfdc3fb93ae39c19cd868e6c</anchor>
      <arglist>(Boolean value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SingleFileProjectProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1SingleFileProjectProperty.html</anchorfile>
      <anchor>ad9ae3dd29709855b2a9d05af530f03f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Boolean</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a76bc4d02a13fde3c3157dbac120b254c</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::SingleThreadedProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1SingleThreadedProperty.html</filename>
    <base>org.lflang.target.property.BooleanProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a75af8b7795ac64547d78a89d9e692f41</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ab121b5771b3f4f1e527438912b64d649</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1SingleThreadedProperty.html</anchorfile>
      <anchor>ab20e7736fd3e8865a99742421ad20941</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ac8b6df55bfdc3fb93ae39c19cd868e6c</anchor>
      <arglist>(Boolean value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1SingleThreadedProperty.html</anchorfile>
      <anchor>aae2b34698ca8f2aba5f5fe5f87681e5a</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final SingleThreadedProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1SingleThreadedProperty.html</anchorfile>
      <anchor>a8236da04869f222466afbfb61dddf2cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Boolean</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a76bc4d02a13fde3c3157dbac120b254c</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::StringListProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1StringListProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; List&lt; String &gt;, UnionType &gt;</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; String &gt;</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringListProperty.html</anchorfile>
      <anchor>af234cf49d12e5a3c07062b6347360b70</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; String &gt;</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringListProperty.html</anchorfile>
      <anchor>a38239a25ba541b5ee3778d70484f8a13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>abstract String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a377e5e754300aea66587e195a3f3fc39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringListProperty</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringListProperty.html</anchorfile>
      <anchor>aac734d054c07a12358e39527dd8c661d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringListProperty.html</anchorfile>
      <anchor>a7961f8e2d0be6ea9a688caab014ca650</anchor>
      <arglist>(List&lt; String &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringListProperty.html</anchorfile>
      <anchor>ab241a54330a5bc4072716e92558737a7</anchor>
      <arglist>(TargetConfig config, List&lt; String &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>List&lt; String &gt;</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringListProperty.html</anchorfile>
      <anchor>a5967d5d3b98228c0c68936535e9ad870</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::StringProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; String, PrimitiveType &gt;</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>a1399e7174c14f2293e7dbc8e9e7886cc</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>a30a818f243a7242000bac28eb3995686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>abstract String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a377e5e754300aea66587e195a3f3fc39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringProperty</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>acab55d30c4029e972414e9e5c969341d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>aa1872cfeb3dcc048cce280b8476ad978</anchor>
      <arglist>(String value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>a3abf3f3328d85906dd4e3d4e7ee8336e</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::TargetProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</filename>
    <templarg>T</templarg>
    <templarg>S</templarg>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>abstract T</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2c7f85f75eb09fc6c90f25daadc180e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>abstract String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a377e5e754300aea66587e195a3f3fc39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a3dcb1b2cc3764da9d26552e37f348215</anchor>
      <arglist>(TargetConfig config, JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>acf8150595f0f2b1099bc6500f72bacf1</anchor>
      <arglist>(TargetConfig config, KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>abstract T</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a933963905148cf092a184ae81ef47311</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>abstract T</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a24adaa91451dc8f91a17a08242c56f81</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TargetProperty</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>abfdae3bad81323c6cc18146a7be72380</anchor>
      <arglist>(S type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::TimeOutProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1TimeOutProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; TimeValue, PrimitiveType &gt;</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>TimeValue</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TimeOutProperty.html</anchorfile>
      <anchor>a1d8c1e90f08d03b7062ae2f8e2e46adf</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeValue</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TimeOutProperty.html</anchorfile>
      <anchor>ac60c2dcff9ce0ac131ccb2854a39fa70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TimeOutProperty.html</anchorfile>
      <anchor>ad2e70614fd95ba83a1c32185c3b63fcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TimeOutProperty.html</anchorfile>
      <anchor>a6488efd99affb974a48b31ec46194943</anchor>
      <arglist>(TimeValue value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final TimeOutProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TimeOutProperty.html</anchorfile>
      <anchor>aa450e83424e54d9d212d639d96afb56d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>TimeValue</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TimeOutProperty.html</anchorfile>
      <anchor>aa07ca6923c602c19b2019b6fc95b9eb1</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::TracePluginProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1TracePluginProperty.html</filename>
    <base>org.lflang.target.property.StringProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>a1399e7174c14f2293e7dbc8e9e7886cc</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>a30a818f243a7242000bac28eb3995686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TracePluginProperty.html</anchorfile>
      <anchor>a4ce44a006abe6f42eb3c9be762a486ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>aa1872cfeb3dcc048cce280b8476ad978</anchor>
      <arglist>(String value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final TracePluginProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TracePluginProperty.html</anchorfile>
      <anchor>af8328dae80eba8ebeae27d2e52897293</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>String</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1StringProperty.html</anchorfile>
      <anchor>a3abf3f3328d85906dd4e3d4e7ee8336e</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::TracingProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1TracingProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; TracingOptions, UnionType &gt;</base>
    <class kind="enum">org::lflang::target::property::TracingProperty::TracingOption</class>
    <class kind="class">org::lflang::target::property::TracingProperty::TracingOptions</class>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>TracingOptions</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TracingProperty.html</anchorfile>
      <anchor>ab86ffff6c4bb7b6d148ff36532cdec6f</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TracingOptions</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TracingProperty.html</anchorfile>
      <anchor>a8b23f213ea33708d81ea35ff5f0435de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TracingProperty.html</anchorfile>
      <anchor>a1e22fbf2b0735fb67ed0ef43a40fc382</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TracingProperty.html</anchorfile>
      <anchor>a2c17b1e1afe0af330fe8e08c21871bfe</anchor>
      <arglist>(TracingOptions value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TracingProperty.html</anchorfile>
      <anchor>ae3ed411eb6335da63c4bd88392910c95</anchor>
      <arglist>(TargetConfig config, TracingOptions value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TracingProperty.html</anchorfile>
      <anchor>a4a6e7ba5469241843cc299565d244c75</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final TracingProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TracingProperty.html</anchorfile>
      <anchor>a4965609875db3a12069ad66e46d43e02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>TracingOptions</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TracingProperty.html</anchorfile>
      <anchor>a1072d385f6622363525eea7d54a0d6c6</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::target::property::TracingProperty::TracingOption</name>
    <filename>enumorg_1_1lflang_1_1target_1_1property_1_1TracingProperty_1_1TracingOption.html</filename>
    <base>org.lflang.target.property.type.DictionaryType.DictionaryElement</base>
    <member kind="function">
      <type>TargetPropertyType</type>
      <name>getType</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1TracingProperty_1_1TracingOption.html</anchorfile>
      <anchor>a582c7cf3efe7586eefff6777863c1ab9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1TracingProperty_1_1TracingOption.html</anchorfile>
      <anchor>a0121f376a86c1bf51829a25661ae2f05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TracingOption</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1TracingProperty_1_1TracingOption.html</anchorfile>
      <anchor>ad2fbae6f3fc624acb3835e0718787320</anchor>
      <arglist>(String alias, PrimitiveType type)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRACE_FILE_NAME</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1TracingProperty_1_1TracingOption.html</anchorfile>
      <anchor>a95fc56c7170828ee99e13d4b0d60a3c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final PrimitiveType</type>
      <name>type</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1TracingProperty_1_1TracingOption.html</anchorfile>
      <anchor>ae0fc8e66251e4e45471930d4b5a7c959</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::TracingProperty::TracingOptions</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1TracingProperty_1_1TracingOptions.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TracingProperty_1_1TracingOptions.html</anchorfile>
      <anchor>ae3b721ca1b94c1d36967728cd4a8e14b</anchor>
      <arglist>(Object o)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isEnabled</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TracingProperty_1_1TracingOptions.html</anchorfile>
      <anchor>a42d1d1dc13397ccea395ddc0573896fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TracingProperty_1_1TracingOptions.html</anchorfile>
      <anchor>a670d95e348cf153ac9632d80bae771ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TracingOptions</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TracingProperty_1_1TracingOptions.html</anchorfile>
      <anchor>a424e8051234faa69690c46746bdbc52e</anchor>
      <arglist>(boolean enabled)</arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>traceFileName</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TracingProperty_1_1TracingOptions.html</anchorfile>
      <anchor>a4741f191da8818968330ec88c051cd34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boolean</type>
      <name>enabled</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TracingProperty_1_1TracingOptions.html</anchorfile>
      <anchor>a05d764a5b65a1ccd8e69a56417c8da1a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::target::property::type::ArrayType</name>
    <filename>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1ArrayType.html</filename>
    <base>org.lflang.target.property.type.TargetPropertyType</base>
    <member kind="function">
      <type></type>
      <name>ArrayType</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1ArrayType.html</anchorfile>
      <anchor>a9132dbe52a94cc29741beae7a852709e</anchor>
      <arglist>(TargetPropertyType type)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>check</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1ArrayType.html</anchorfile>
      <anchor>a302a8f4a90474b09d0f55a59269dd0bf</anchor>
      <arglist>(Element e, String name, MessageReporter r)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1ArrayType.html</anchorfile>
      <anchor>a58f2a30c5c6b66e768f873fdbf09e4e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>validate</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1ArrayType.html</anchorfile>
      <anchor>a69b52c6cc4acb157df00f181db9e000b</anchor>
      <arglist>(Element e)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_ARRAY</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1ArrayType.html</anchorfile>
      <anchor>a545c4739129b34d788214c036ef3b81b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>STRING_ARRAY</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1ArrayType.html</anchorfile>
      <anchor>a29ad604f67a0ed792fb76ffe7e8ad13d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final TargetPropertyType</type>
      <name>type</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1ArrayType.html</anchorfile>
      <anchor>ab7805dd267dc45686a275a41d0857182</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::type::BuildTypeType</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1type_1_1BuildTypeType.html</filename>
    <class kind="enum">org::lflang::target::property::type::BuildTypeType::BuildType</class>
    <member kind="function" protection="protected">
      <type>Class&lt; BuildType &gt;</type>
      <name>enumClass</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1type_1_1BuildTypeType.html</anchorfile>
      <anchor>aa136476d079dc2963188a1524b6dbedf</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::target::property::type::BuildTypeType::BuildType</name>
    <filename>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1BuildTypeType_1_1BuildType.html</filename>
    <member kind="function">
      <type></type>
      <name>BuildType</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1BuildTypeType_1_1BuildType.html</anchorfile>
      <anchor>a426fbfb23574eee6e88c01bd3ed896e5</anchor>
      <arglist>(String alias)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1BuildTypeType_1_1BuildType.html</anchorfile>
      <anchor>afffa8ed6020fea0143aa45921fbbb454</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static BuildType</type>
      <name>getDefault</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1BuildTypeType_1_1BuildType.html</anchorfile>
      <anchor>a62b8a2793957ddbeb70ef0b7be56bae6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; BuildType &gt;</type>
      <name>optionsList</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1BuildTypeType_1_1BuildType.html</anchorfile>
      <anchor>a76cf2c9520e69efee12be55ed1b4695c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DEBUG</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1BuildTypeType_1_1BuildType.html</anchorfile>
      <anchor>aaaff8ca08aed10e52456528ede23b1d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MIN_SIZE_REL</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1BuildTypeType_1_1BuildType.html</anchorfile>
      <anchor>a0a78ff40ac7d40ad40ef903559db2bc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>REL_WITH_DEB_INFO</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1BuildTypeType_1_1BuildType.html</anchorfile>
      <anchor>a4eb5595e34b1dbbe672869ec03d99361</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RELEASE</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1BuildTypeType_1_1BuildType.html</anchorfile>
      <anchor>adc7f842dafbffdd46503956a4e0917fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TEST</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1BuildTypeType_1_1BuildType.html</anchorfile>
      <anchor>ad9dc48d63cd3b5193f76e8daef756856</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::type::ClockSyncModeType</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1type_1_1ClockSyncModeType.html</filename>
    <class kind="enum">org::lflang::target::property::type::ClockSyncModeType::ClockSyncMode</class>
    <member kind="function" protection="protected">
      <type>Class&lt; ClockSyncMode &gt;</type>
      <name>enumClass</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1type_1_1ClockSyncModeType.html</anchorfile>
      <anchor>a6b6b36fb4f5e0ea8fb3b529464f6e86a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::target::property::type::ClockSyncModeType::ClockSyncMode</name>
    <filename>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1ClockSyncModeType_1_1ClockSyncMode.html</filename>
    <member kind="function">
      <type>int</type>
      <name>toInt</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1ClockSyncModeType_1_1ClockSyncMode.html</anchorfile>
      <anchor>a32f39704ca853cb0ba3e898f0019ca9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1ClockSyncModeType_1_1ClockSyncMode.html</anchorfile>
      <anchor>a4026f9e553c291bd7601a9532552c2bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>INIT</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1ClockSyncModeType_1_1ClockSyncMode.html</anchorfile>
      <anchor>a751c971ef5e2bdd422505cb90bc7b5f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>OFF</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1ClockSyncModeType_1_1ClockSyncMode.html</anchorfile>
      <anchor>abb31df931d7ba7b37bfad929a49364d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ON</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1ClockSyncModeType_1_1ClockSyncMode.html</anchorfile>
      <anchor>a3144096f073363d3fbd7756fcf0a95f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::type::CoordinationModeType</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1type_1_1CoordinationModeType.html</filename>
    <class kind="enum">org::lflang::target::property::type::CoordinationModeType::CoordinationMode</class>
    <member kind="function" protection="protected">
      <type>Class&lt; CoordinationMode &gt;</type>
      <name>enumClass</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1type_1_1CoordinationModeType.html</anchorfile>
      <anchor>a6430d7c39605ad1704e916df8e052676</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::target::property::type::CoordinationModeType::CoordinationMode</name>
    <filename>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1CoordinationModeType_1_1CoordinationMode.html</filename>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1CoordinationModeType_1_1CoordinationMode.html</anchorfile>
      <anchor>ac62718f14d026c3e2f74740518ee8bce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CoordinationMode</type>
      <name>getDefault</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1CoordinationModeType_1_1CoordinationMode.html</anchorfile>
      <anchor>ad7c2bc5b113bee127ba5b352eef9a345</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CENTRALIZED</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1CoordinationModeType_1_1CoordinationMode.html</anchorfile>
      <anchor>a3b2b6e04ddb88a14aeb27fd12a141531</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DECENTRALIZED</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1CoordinationModeType_1_1CoordinationMode.html</anchorfile>
      <anchor>a198b4fcb67d2d3a9d3528db3227d8cb4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::target::property::type::DictionaryType</name>
    <filename>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1DictionaryType.html</filename>
    <base>org.lflang.target.property.type.TargetPropertyType</base>
    <class kind="interface">org::lflang::target::property::type::DictionaryType::DictionaryElement</class>
    <member kind="function">
      <type>boolean</type>
      <name>check</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1DictionaryType.html</anchorfile>
      <anchor>a29fb4f9612c5598585fa5a6cb7558266</anchor>
      <arglist>(Element e, String name, MessageReporter v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DictionaryType</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1DictionaryType.html</anchorfile>
      <anchor>a5681bef70dcff0c708af739e6f191c58</anchor>
      <arglist>(List&lt; DictionaryElement &gt; options)</arglist>
    </member>
    <member kind="function">
      <type>DictionaryElement</type>
      <name>forName</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1DictionaryType.html</anchorfile>
      <anchor>ae4d4434b2c091b393256926dd11927e5</anchor>
      <arglist>(String name)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>keysList</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1DictionaryType.html</anchorfile>
      <anchor>a5c483e249de7e7f31582002b901a2022</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1DictionaryType.html</anchorfile>
      <anchor>ac2c145c04740da341f4528327d3e35c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>validate</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1DictionaryType.html</anchorfile>
      <anchor>a8a5c2ce60bcf7c589837d256875a36b0</anchor>
      <arglist>(Element e)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CLOCK_SYNC_OPTION_DICT</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1DictionaryType.html</anchorfile>
      <anchor>a160fba82c1426b3f51c1d3805b9b089a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>COORDINATION_OPTION_DICT</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1DictionaryType.html</anchorfile>
      <anchor>ad8de0281ff988899f7f5e5e66c1dca8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DOCKER_DICT</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1DictionaryType.html</anchorfile>
      <anchor>a812fead51f1a38424d1c939445030e84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List&lt; DictionaryElement &gt;</type>
      <name>options</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1DictionaryType.html</anchorfile>
      <anchor>a13d5fdff325568789296970f9b58d29a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PLATFORM_DICT</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1DictionaryType.html</anchorfile>
      <anchor>ada29ca1e43a3c46fd558172b0d98549f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRACING_DICT</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1DictionaryType.html</anchorfile>
      <anchor>a6b86c017c40e8f0e44d1599c18d8c3bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::target::property::type::DictionaryType::DictionaryElement</name>
    <filename>interfaceorg_1_1lflang_1_1target_1_1property_1_1type_1_1DictionaryType_1_1DictionaryElement.html</filename>
    <member kind="function">
      <type>TargetPropertyType</type>
      <name>getType</name>
      <anchorfile>interfaceorg_1_1lflang_1_1target_1_1property_1_1type_1_1DictionaryType_1_1DictionaryElement.html</anchorfile>
      <anchor>a593004002108cdba7c5b928800f7c393</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::type::LoggingType</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1type_1_1LoggingType.html</filename>
    <class kind="enum">org::lflang::target::property::type::LoggingType::LogLevel</class>
    <member kind="function" protection="protected">
      <type>Class&lt; LogLevel &gt;</type>
      <name>enumClass</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1type_1_1LoggingType.html</anchorfile>
      <anchor>ac68fa7e71ea102563843f09208f793f4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::target::property::type::LoggingType::LogLevel</name>
    <filename>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1LoggingType_1_1LogLevel.html</filename>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1LoggingType_1_1LogLevel.html</anchorfile>
      <anchor>a62f2a018ac91a42fff0abbf3242d628f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LogLevel</type>
      <name>getDefault</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1LoggingType_1_1LogLevel.html</anchorfile>
      <anchor>a242be879165151387092001c3bb3e7b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DEBUG</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1LoggingType_1_1LogLevel.html</anchorfile>
      <anchor>acac4c33daa6db104a3b65f6eb1d690e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ERROR</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1LoggingType_1_1LogLevel.html</anchorfile>
      <anchor>a8596660bfec3051a975452eef74884c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>INFO</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1LoggingType_1_1LogLevel.html</anchorfile>
      <anchor>a25c19fd970594984b878c125dbae629c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>LOG</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1LoggingType_1_1LogLevel.html</anchorfile>
      <anchor>a10c77fa2a644c4f93e40acfc01f052fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>WARN</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1LoggingType_1_1LogLevel.html</anchorfile>
      <anchor>ac7ca46e3b2c720dc31473509a15a3ec0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::type::OptionsType&lt; T extends Enum</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1type_1_1OptionsType_3_01T_01extends_01Enum.html</filename>
    <templarg>?</templarg>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::type::PlatformType</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType.html</filename>
    <class kind="enum">org::lflang::target::property::type::PlatformType::Platform</class>
    <member kind="function" protection="protected">
      <type>Class&lt; Platform &gt;</type>
      <name>enumClass</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType.html</anchorfile>
      <anchor>a2fc35af4f101c4fc4c4cb4e0f719fa2c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::target::property::type::PlatformType::Platform</name>
    <filename>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType_1_1Platform.html</filename>
    <member kind="function">
      <type>String</type>
      <name>getcMakeName</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType_1_1Platform.html</anchorfile>
      <anchor>a8b83c585de2c91a5dca127f3a21b2d76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Platform</type>
      <name>getDefault</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType_1_1Platform.html</anchorfile>
      <anchor>a82ca075968c91fc4004d7917cbe3536d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Platform</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType_1_1Platform.html</anchorfile>
      <anchor>a937e709bc2b322ec98dfe0198e9cf05c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Platform</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType_1_1Platform.html</anchorfile>
      <anchor>a7fc4822909f19e3e2071b1738f739161</anchor>
      <arglist>(String cMakeName)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType_1_1Platform.html</anchorfile>
      <anchor>a704aca986390ca2b784b4500911bad9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>supportsFederated</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType_1_1Platform.html</anchorfile>
      <anchor>a9a62cc3ad97d9312357bb03260c39121</anchor>
      <arglist>(Platform platform)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ARDUINO</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType_1_1Platform.html</anchorfile>
      <anchor>a54af8619f8ee8efc22ad51389f501d39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>AUTO</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType_1_1Platform.html</anchorfile>
      <anchor>a032b0139a6e75709ec81a0c15d57792c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final String</type>
      <name>cMakeName</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType_1_1Platform.html</anchorfile>
      <anchor>afe07ae9997b960300ac50e68f38256f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FLEXPRET</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType_1_1Platform.html</anchorfile>
      <anchor>ab4f243d45a247038842683f691ff7895</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>LINUX</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType_1_1Platform.html</anchorfile>
      <anchor>a96d4728fe5abbcbce972a8f97f668617</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MAC</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType_1_1Platform.html</anchorfile>
      <anchor>aa785930f3eecca4dd1ffbd09ce0a8b4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NRF52</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType_1_1Platform.html</anchorfile>
      <anchor>a109f4817b0dc1923bbc2407f5bd48ec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PATMOS</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType_1_1Platform.html</anchorfile>
      <anchor>a4cd8ad3a623b796226c988659ddf2386</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>RP2040</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType_1_1Platform.html</anchorfile>
      <anchor>a3817b15560f899dd241f20283d5a98ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>WINDOWS</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType_1_1Platform.html</anchorfile>
      <anchor>a3ed3cdb22ebf6bf19d6989c27c7b6e71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ZEPHYR</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PlatformType_1_1Platform.html</anchorfile>
      <anchor>a7b2d9eb384c6c4fedbfea52af8bfccc5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::target::property::type::PrimitiveType</name>
    <filename>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PrimitiveType.html</filename>
    <base>org.lflang.target.property.type.TargetPropertyType</base>
    <member kind="function">
      <type>boolean</type>
      <name>check</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PrimitiveType.html</anchorfile>
      <anchor>a11f3c41f7189d2e38ea0059a6367bfdf</anchor>
      <arglist>(Element e, String name, MessageReporter v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrimitiveType</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PrimitiveType.html</anchorfile>
      <anchor>a10ac60109467b915a83040ab9640566b</anchor>
      <arglist>(String description, Predicate&lt; Element &gt; validator)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PrimitiveType.html</anchorfile>
      <anchor>a04e7d27cc628c614b9b69d4a42600986</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>validate</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PrimitiveType.html</anchorfile>
      <anchor>a638d276991a03d3ce67a94cfbbe9727d</anchor>
      <arglist>(Element e)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BOOLEAN</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PrimitiveType.html</anchorfile>
      <anchor>a7b5aaa8056c2361cc2a083bfdcc4a9b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PrimitiveType.html</anchorfile>
      <anchor>a85ee008176e3406553b7c6d83d134d0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>INTEGER</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PrimitiveType.html</anchorfile>
      <anchor>ac34fc5b6a861d497d26a40cb1756cd68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NON_NEGATIVE_INTEGER</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PrimitiveType.html</anchorfile>
      <anchor>a5513d5cb1e2284de1728815b4a854416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>STRING</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PrimitiveType.html</anchorfile>
      <anchor>a984fd1882b4dfaf078bb01342b6e0d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TIME_VALUE</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PrimitiveType.html</anchorfile>
      <anchor>aa48f6b0a2cb9fba192df454e386b9b27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Predicate&lt; Element &gt;</type>
      <name>validator</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1PrimitiveType.html</anchorfile>
      <anchor>a66d17dd407b9fd0d916f851f79f998a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::type::SchedulerType</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1type_1_1SchedulerType.html</filename>
    <class kind="enum">org::lflang::target::property::type::SchedulerType::Scheduler</class>
    <member kind="function" protection="protected">
      <type>Class&lt; Scheduler &gt;</type>
      <name>enumClass</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1type_1_1SchedulerType.html</anchorfile>
      <anchor>a34df9dd269b5a439e7d56d1f3f7f3cc2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::target::property::type::SchedulerType::Scheduler</name>
    <filename>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1SchedulerType_1_1Scheduler.html</filename>
    <member kind="function">
      <type>List&lt; Path &gt;</type>
      <name>getRelativePaths</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1SchedulerType_1_1Scheduler.html</anchorfile>
      <anchor>ab3635557eeebedce79bbf5d7f53e17f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getSchedulerCompileDef</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1SchedulerType_1_1Scheduler.html</anchorfile>
      <anchor>a711978aed4f964150f57846d5a44ead1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>prioritizesDeadline</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1SchedulerType_1_1Scheduler.html</anchorfile>
      <anchor>a23768ab5fb02ef2abf2d4beabd643da8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scheduler</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1SchedulerType_1_1Scheduler.html</anchorfile>
      <anchor>a236b1f804fb4078116ac9de10f19a954</anchor>
      <arglist>(boolean prioritizesDeadline)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scheduler</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1SchedulerType_1_1Scheduler.html</anchorfile>
      <anchor>a9e00071d413267a5d133403cb4b26720</anchor>
      <arglist>(boolean prioritizesDeadline, List&lt; Path &gt; relativePaths)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Scheduler</type>
      <name>getDefault</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1SchedulerType_1_1Scheduler.html</anchorfile>
      <anchor>ae178fe0c6565725baa9911defd7d59dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ADAPTIVE</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1SchedulerType_1_1Scheduler.html</anchorfile>
      <anchor>aba2626884d9ac3006b71efc7d487060e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>GEDF_NP</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1SchedulerType_1_1Scheduler.html</anchorfile>
      <anchor>a597fd32215833e1c386f2babe127785d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>GEDF_NP_CI</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1SchedulerType_1_1Scheduler.html</anchorfile>
      <anchor>abf77dad5792fe42c7c153353b5a38232</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NP</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1SchedulerType_1_1Scheduler.html</anchorfile>
      <anchor>a24a3efbc4ce98671a57967f0be31a0c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::target::property::type::StringDictionaryType</name>
    <filename>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1StringDictionaryType.html</filename>
    <base>org.lflang.target.property.type.TargetPropertyType</base>
    <member kind="function">
      <type>boolean</type>
      <name>check</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1StringDictionaryType.html</anchorfile>
      <anchor>a26ab0bcadc6e90eb46f55fb59419471b</anchor>
      <arglist>(Element e, String name, MessageReporter v)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1StringDictionaryType.html</anchorfile>
      <anchor>a5a32f12f16dc58ba9ba44b5669fecfdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>validate</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1StringDictionaryType.html</anchorfile>
      <anchor>a57e03b21e427a3e2659245d6ac8b5a42</anchor>
      <arglist>(Element e)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>COMPILE_DEFINITION</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1StringDictionaryType.html</anchorfile>
      <anchor>aa24538024f63bb18c593cef5526e1363</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::target::property::type::TargetPropertyType</name>
    <filename>interfaceorg_1_1lflang_1_1target_1_1property_1_1type_1_1TargetPropertyType.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>check</name>
      <anchorfile>interfaceorg_1_1lflang_1_1target_1_1property_1_1type_1_1TargetPropertyType.html</anchorfile>
      <anchor>acd39c53568f7898c0b5e334baff1838a</anchor>
      <arglist>(Element e, String name, MessageReporter r)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>validate</name>
      <anchorfile>interfaceorg_1_1lflang_1_1target_1_1property_1_1type_1_1TargetPropertyType.html</anchorfile>
      <anchor>a4458e05ec05ad55cb1ee18dc0e2ca712</anchor>
      <arglist>(Element e)</arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::target::property::type::UnionType</name>
    <filename>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1UnionType.html</filename>
    <base>org.lflang.target.property.type.TargetPropertyType</base>
    <member kind="function">
      <type>boolean</type>
      <name>check</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1UnionType.html</anchorfile>
      <anchor>ae3ae2ed8cd11560c38de7f73979857cd</anchor>
      <arglist>(Element e, String name, MessageReporter r)</arglist>
    </member>
    <member kind="function">
      <type>TargetPropertyType</type>
      <name>forName</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1UnionType.html</anchorfile>
      <anchor>aa2b2966fa92283005ddad15219f73621</anchor>
      <arglist>(String name)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1UnionType.html</anchorfile>
      <anchor>a15d3f66e305ef94d0ada1263e3e35e80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UnionType</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1UnionType.html</anchorfile>
      <anchor>ac7643ae35ba812f3e55ed1fa8e759e71</anchor>
      <arglist>(List&lt; TargetPropertyType &gt; options)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>validate</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1UnionType.html</anchorfile>
      <anchor>a117f8b728c59d4f9a70f12b70abb7793</anchor>
      <arglist>(Element e)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DOCKER_UNION</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1UnionType.html</anchorfile>
      <anchor>a1f76f2c7dc03b161799f9d1f2dae9490</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FILE_OR_FILE_ARRAY</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1UnionType.html</anchorfile>
      <anchor>a030a3738d20b398250b0268080b4af2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final List&lt; TargetPropertyType &gt;</type>
      <name>options</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1UnionType.html</anchorfile>
      <anchor>afdc426c7ee4df1829e418e96001713ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PLATFORM_STRING_OR_DICTIONARY</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1UnionType.html</anchorfile>
      <anchor>aae1a2ec88dfd3d5f8d437ae74c5c8618</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>STRING_OR_STRING_ARRAY</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1UnionType.html</anchorfile>
      <anchor>ab3ab5e75c164d0e527c1c90f73d5d170</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRACING_UNION</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1property_1_1type_1_1UnionType.html</anchorfile>
      <anchor>a712c9b127771be5a2547ed582ca6ae55</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::VerifyProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1VerifyProperty.html</filename>
    <base>org.lflang.target.property.BooleanProperty</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a75af8b7795ac64547d78a89d9e692f41</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Boolean</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ab121b5771b3f4f1e527438912b64d649</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1VerifyProperty.html</anchorfile>
      <anchor>a4b8aa69f0b0a800349758de8bc112ce4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>ac8b6df55bfdc3fb93ae39c19cd868e6c</anchor>
      <arglist>(Boolean value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a05712b0e4f6256710f969dfd27a097f3</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final VerifyProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1VerifyProperty.html</anchorfile>
      <anchor>a29b70479e522d9fb1de8aaa7023b129a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Boolean</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1BooleanProperty.html</anchorfile>
      <anchor>a76bc4d02a13fde3c3157dbac120b254c</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::property::WorkersProperty</name>
    <filename>classorg_1_1lflang_1_1target_1_1property_1_1WorkersProperty.html</filename>
    <base>org.lflang.target.property.TargetProperty&lt; Integer, PrimitiveType &gt;</base>
    <member kind="function">
      <type>Optional&lt; Element &gt;</type>
      <name>astElementFromConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a6a5c01889646675b2403aba03a9561b1</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ad2943097a2b239aecb9c0bf4eb2968f6</anchor>
      <arglist>(KeyValuePair pair, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a204b717061ca87ddd71cbc866440af5c</anchor>
      <arglist>(Object obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a29acc44b1e353f4638f22bb3289d7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Integer</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1WorkersProperty.html</anchorfile>
      <anchor>a57562b12baccb1ca73b3108c5cb7513b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a887afc08ede48190976f784b8769b7ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromFederation</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a033370849eef3120afd46c4845863e2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>loadFromImport</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ab53684f78f96af96841c92187f131488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>name</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1WorkersProperty.html</anchorfile>
      <anchor>a4cb780eb71c517ff8222675be3e4b78a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>final void</type>
      <name>override</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a2a3ae8487cf2df37b7e3c98a9d594685</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>abstract Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a7f6fdee8910285230340bcd7a52f3ade</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>Element</type>
      <name>toAstElement</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1WorkersProperty.html</anchorfile>
      <anchor>a5037dda5160124d5e64404cd773ee863</anchor>
      <arglist>(Integer value)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a80cded89b1d2808e307cd4b9991f887b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>a74548a3778514c9c3757ee031dae825c</anchor>
      <arglist>(TargetConfig config, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1WorkersProperty.html</anchorfile>
      <anchor>acec678c8f1602a9b71d1beb9dc19c1da</anchor>
      <arglist>(TargetConfig config, MessageReporter reporter)</arglist>
    </member>
    <member kind="variable">
      <type>final S</type>
      <name>type</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ae91c05dae9df2fc924ba84e4072e2087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final WorkersProperty</type>
      <name>INSTANCE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1WorkersProperty.html</anchorfile>
      <anchor>a1038ab9d15aad6ba0b12b0e5c8eca791</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Integer</type>
      <name>fromAst</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1WorkersProperty.html</anchorfile>
      <anchor>abef0e1eb1f3f423bf102ed9f761db223</anchor>
      <arglist>(Element node, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>fromJSON</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1TargetProperty.html</anchorfile>
      <anchor>ac340310011200e10f311d2fe985be828</anchor>
      <arglist>(JsonElement element, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Integer</type>
      <name>fromString</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1property_1_1WorkersProperty.html</anchorfile>
      <anchor>a607f49f73a7ef83c316ea7a0df98c640</anchor>
      <arglist>(String string, MessageReporter reporter)</arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::target::Target</name>
    <filename>enumorg_1_1lflang_1_1target_1_1Target.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>allowsBracedListExpressions</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>af004103080778774db08baeae67d2d85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>allowsBracketListExpressions</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>ab336a744ca9f5babd9ff425c0689f880</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>allowsParenthesisListExpressions</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>a58946ea327fcaf4df908d36dffbeaf54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getDirectoryName</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>ae660316d3a4f66997fde3ac22b664c6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getDisplayName</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>a72a958e9bace6e09071428ecb0151405</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getSingleLineCommentPrefix</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>a823919561287644b7dc385c3c0fd4344</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>afe9af881317ad440fba5b6c5a123f7d8</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isReservedIdent</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>a8ca8f593cf5e733a00ddcbd810015bc6</anchor>
      <arglist>(String ident)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>mandatesEqualsInitializers</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>a4fc94844d14d7671accc0041e50a7395</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>setsKeepAliveOptionAutomatically</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>af0ce8a2f8d67ee5e5aacc0208cfc3802</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>supportsEnclaves</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>ae7fc130c9d940beb842392e828e073d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>supportsFederated</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>ab1d0115dec1e46478fb9800b8fc0fa08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>supportsInheritance</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>ad4a7cbe4fc47986bb93dbda7fb712276</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>supportsMultiports</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>a97f4de62d2da6d2c3e9b908a70c79ab8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>supportsParameterizedWidths</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>a8b234b56ad5230eacd53c788ee385457</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>supportsReactionDeclarations</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>a8668c0197468daf6998d6ab895dab0f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Target</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>a809f8a79f4c092d53efefaf44a9ce39c</anchor>
      <arglist>(String displayName, boolean requiresTypes, Collection&lt; String &gt; keywords)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>ab3c0fe0b76961f6f696055b996be3fce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Optional&lt; Target &gt;</type>
      <name>forName</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>a4b8ec72a759070fb12cb1f6d5a561745</anchor>
      <arglist>(String name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Target</type>
      <name>fromDecl</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>ae308f1a327006d3a2bcdc8d456003511</anchor>
      <arglist>(TargetDecl targetDecl)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static&lt; T &gt; T</type>
      <name>match</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>ab150b01b88f3b8775fe8d039d323a780</anchor>
      <arglist>(final String string, final Iterable&lt; T &gt; candidates)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static&lt; T &gt; T</type>
      <name>match</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>a4f7a74641145d6830a2da337df32bf33</anchor>
      <arglist>(final String string, final T[] candidates)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>C</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>ab0752bfa65983dbaef56bde9b037d9be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CCPP</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>af67769ff82aad1868ac2f1dfce27558c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CPP</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>a4aeea177497099be0b6795577488642a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>Python</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>a82a66f8f4b5c432cac502108e46bf6e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final boolean</type>
      <name>requiresTypes</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>a894b6fea99e1802169c3c4571d11c9ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>Rust</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>a9c71884938b080113f1b513fa937f13f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TS</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>a3e977a13ce65a6e7c74667c6f611e514</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UC</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>a943516a43384d8fd7be4abf87c66c017</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final List&lt; Target &gt;</type>
      <name>ALL</name>
      <anchorfile>enumorg_1_1lflang_1_1target_1_1Target.html</anchorfile>
      <anchor>a21ca728af85a52046029a4c3a015ac89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::target::TargetConfig</name>
    <filename>classorg_1_1lflang_1_1target_1_1TargetConfig.html</filename>
    <member kind="function">
      <type>TargetDecl</type>
      <name>extractTargetDecl</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>aaf8134830c5a082ad1c623473befa9ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Optional&lt; TargetProperty&lt;?, ?&gt; &gt;</type>
      <name>forName</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a7226771f2feddfad60c6c28705b4d4f7</anchor>
      <arglist>(String name)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; TargetProperty&lt;?, ?&gt; &gt;</type>
      <name>getAssignedProperties</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>afe71fa9ae573c8f999eee32f336ac60a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Resource</type>
      <name>getMainResource</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a2f77cc5c7f8b4c1b8abc5633b163ca07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; TargetProperty&lt;?, ?&gt; &gt;</type>
      <name>getRegisteredProperties</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a575ccd78d3f9a46c695308bac1214ec1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isFederated</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a962722434c505af37dadb2ae988b4719</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isSet</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>aaa9a648048c94298581efb6309f09b40</anchor>
      <arglist>(TargetProperty&lt;?, ?&gt; property)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isSupported</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a890efbc7d1331aac4ea77a3e2beb8537</anchor>
      <arglist>(TargetProperty p)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>listOfRegisteredProperties</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>afcd659ea7847e906655a8ac296537b45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>aa6decdd4f29871ef8f4396f7208b4502</anchor>
      <arglist>(GeneratorArguments args, MessageReporter err)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; TargetProperty&lt;?, ?&gt; &gt;</type>
      <name>loaded</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a9f224e642abed89f246ad421e12f0d8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeImportedConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>addfe17d8b13f497a5d1049730a9575de</anchor>
      <arglist>(Resource importedResource, Resource mainResource, Predicate&lt; TargetProperty &gt; loadOrNot, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>register</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a69331e91d8c9229a75f7065d26f8dde4</anchor>
      <arglist>(TargetProperty&lt;?, ?&gt;... properties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reportUnsupportedTargetProperty</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a640cf2b9d6f21d7ac71722aae80fb8cd</anchor>
      <arglist>(String name, MessageReporter.Stage2 stage2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>aba9105566b09eed3ac26a497d90d7323</anchor>
      <arglist>(TargetProperty&lt;?, ?&gt; property)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>settings</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a7c356e6204897b9e6c164848c4c892e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TargetConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a3c25425b77db03c77dee2dfcb295af0c</anchor>
      <arglist>(Resource resource, GeneratorArguments args, MessageReporter reporter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a2204772212c782d80c26fc65a7b268f3</anchor>
      <arglist>(TargetConfig config, List&lt; KeyValuePair &gt; pairs, Path relativePath, Predicate&lt; TargetProperty &gt; loadOrNot, MessageReporter err)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a2ab8294cd6af1795f09f31dc6a59e16c</anchor>
      <arglist>(MessageReporter reporter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; KeyValuePair &gt;</type>
      <name>extractProperties</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a532170c040b7a446fdc1a8b969457784</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TargetConfig</type>
      <name>getMockInstance</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>add1e66e960ee4c867e8def30ce05fe6e</anchor>
      <arglist>(Target target)</arglist>
    </member>
    <member kind="variable">
      <type>final List&lt; String &gt;</type>
      <name>compileAdditionalSources</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a566f1e3bd78e52896883f40166d90337</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final Target</type>
      <name>target</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a50b773073c0fb80795def245b15daf87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>NOT_IN_LF_SYNTAX_MESSAGE</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a5e2ea57f5c44024c38ae01a6f8376b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>load</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>afbf0bb149c8c24b5427f12e1a439de24</anchor>
      <arglist>(JsonObject jsonObject, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>load</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a94d5fb78c9342fab63877631a9a0993d</anchor>
      <arglist>(Resource resource, MessageReporter reporter)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TargetConfig</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>afe0d7d098a81a847591c082b93be788e</anchor>
      <arglist>(Target target)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final Map&lt; TargetProperty&lt;?, ?&gt;, KeyValuePair &gt;</type>
      <name>keyValuePairs</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a0c0466e4eca2dd9b9f4f600f41b1ddf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Resource</type>
      <name>mainResource</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>af7e01e3f2aa4b51b6f33d8ddd6a34ccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final Map&lt; TargetProperty&lt;?, ?&gt;, Object &gt;</type>
      <name>properties</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>aba01d9037d76fbfe4e0170224986de47</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T, S extends TargetPropertyType &gt; T</type>
      <name>get</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>abc1bea0c132e3bd62e63161988489bb8</anchor>
      <arglist>(TargetProperty&lt; T, S &gt; property)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T, S extends TargetPropertyType &gt; T</type>
      <name>getOrDefault</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>ab487cec784903f3d2c201ece04be802e</anchor>
      <arglist>(TargetProperty&lt; T, S &gt; property)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T, S extends TargetPropertyType &gt; KeyValuePair</type>
      <name>lookup</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>a955be16170aeb68effcae4632ec61361</anchor>
      <arglist>(TargetProperty&lt; T, S &gt; targetProperty)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>public&lt; T, S extends TargetPropertyType &gt; void</type>
      <name>set</name>
      <anchorfile>classorg_1_1lflang_1_1target_1_1TargetConfig.html</anchorfile>
      <anchor>ac8f31797447b46d4983677ba2220908e</anchor>
      <arglist>(TargetProperty&lt; T, S &gt; property, T value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::compiler::EquivalenceUnitTests</name>
    <filename>classorg_1_1lflang_1_1tests_1_1compiler_1_1EquivalenceUnitTests.html</filename>
    <member kind="function">
      <type>void</type>
      <name>testCodeExprEqItselfModuloIndent</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1EquivalenceUnitTests.html</anchorfile>
      <anchor>a73e2cecd39d3382a38854185b6be4a41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testSimple</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1EquivalenceUnitTests.html</anchorfile>
      <anchor>ac005a24b0969f566ba6b800bd2220775</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::compiler::FormattingUnitTests</name>
    <filename>classorg_1_1lflang_1_1tests_1_1compiler_1_1FormattingUnitTests.html</filename>
    <member kind="function">
      <type>void</type>
      <name>testAssignments</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1FormattingUnitTests.html</anchorfile>
      <anchor>a15d51a4a39eab447aa4a3eafbcdd2d1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testCppInits</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1FormattingUnitTests.html</anchorfile>
      <anchor>a0b25f95282d67a296a9e7b1184b14461</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testSimple</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1FormattingUnitTests.html</anchorfile>
      <anchor>a675b0a067a105c082315b464601d800c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testState</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1FormattingUnitTests.html</anchorfile>
      <anchor>a05c10f19d5c374415a28762ecbb83f52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LfParsingTestHelper</type>
      <name>parser</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1FormattingUnitTests.html</anchorfile>
      <anchor>ae204e72bce5acac0f339f56a4744d030</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::compiler::LinguaFrancaASTUtilsTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaASTUtilsTest.html</filename>
    <member kind="function">
      <type>void</type>
      <name>initializedState</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaASTUtilsTest.html</anchorfile>
      <anchor>a8a9897c2ff4add0439e00ca8d701f30b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialValue</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaASTUtilsTest.html</anchorfile>
      <anchor>a2d459e650364d71717c1b9bf6aa2cc36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uninitializedState</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaASTUtilsTest.html</anchorfile>
      <anchor>a56bb56444a2e92e236ed70a26da36645</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>ParseHelper&lt; Model &gt;</type>
      <name>parser</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaASTUtilsTest.html</anchorfile>
      <anchor>a02bafc935a1e526604b9d00a3d474be3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::compiler::LinguaFrancaDependencyAnalysisTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaDependencyAnalysisTest.html</filename>
    <member kind="function">
      <type>void</type>
      <name>circularInstantiation</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaDependencyAnalysisTest.html</anchorfile>
      <anchor>ab8b3c64a6be965331e4adcceba93187b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cyclicDependency</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaDependencyAnalysisTest.html</anchorfile>
      <anchor>a3d4160f46bce4b100382b7ac72868c0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>ParseHelper&lt; Model &gt;</type>
      <name>parser</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaDependencyAnalysisTest.html</anchorfile>
      <anchor>a3f535a3f2fbea2b4d0c2ad251d3776bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::compiler::LinguaFrancaParsingTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaParsingTest.html</filename>
    <member kind="function">
      <type>void</type>
      <name>checkForTarget</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaParsingTest.html</anchorfile>
      <anchor>a1e93c9ad0331f95ef34f0322f4ab3577</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testAttributeContexts</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaParsingTest.html</anchorfile>
      <anchor>a0e467a5c9087709d9b5718b22920a469</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testAttributes</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaParsingTest.html</anchorfile>
      <anchor>a128db4c1d5b0c83ad9126e85f40318fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testTokenizeEmptyWidth</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaParsingTest.html</anchorfile>
      <anchor>a3c872b96691e7f3c6b5d65403e5fff69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>ParseHelper&lt; Model &gt;</type>
      <name>parser</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaParsingTest.html</anchorfile>
      <anchor>a088ed9f9516fca89349b47e10873d0a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::compiler::LinguaFrancaScopingTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaScopingTest.html</filename>
    <member kind="function">
      <type>void</type>
      <name>unresolvedHierarchicalPortReference</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaScopingTest.html</anchorfile>
      <anchor>a3a3a41988aa7c646b3d7f8411afe3dd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unresolvedReactorReference</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaScopingTest.html</anchorfile>
      <anchor>ac78950397cb1925fb89a955b4690fcc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unresolvedReferenceInEffectsClause</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaScopingTest.html</anchorfile>
      <anchor>a224a3eea870e64747063d28058d4d12b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unresolvedReferenceInTriggerClause</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaScopingTest.html</anchorfile>
      <anchor>a67b7f9048548aa61b720c03595049e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unresolvedReferenceInUseClause</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaScopingTest.html</anchorfile>
      <anchor>a74f6ef13cef262b4a69ae7eeea1daa47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>JavaIoFileSystemAccess</type>
      <name>fileAccess</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaScopingTest.html</anchorfile>
      <anchor>adef9a115dd3ecef449015b69a2381a47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LFGenerator</type>
      <name>generator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaScopingTest.html</anchorfile>
      <anchor>ae9f6dd6900e3de220a87f893a7d19c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>ParseHelper&lt; Model &gt;</type>
      <name>parser</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaScopingTest.html</anchorfile>
      <anchor>ac74c9e0b00ddb9cd50ea92fc3daae6f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Provider&lt; ResourceSet &gt;</type>
      <name>resourceSetProvider</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaScopingTest.html</anchorfile>
      <anchor>af52b4e4c68e0d67f0a14f27834899d77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>ValidationTestHelper</type>
      <name>validator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaScopingTest.html</anchorfile>
      <anchor>a51c4149c456ebc87e883b221a088bb9d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::compiler::LinguaFrancaValidationTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</filename>
    <member kind="function">
      <type>void</type>
      <name>afterBreaksCycle</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a2477c328d1435b4a7721f40b635f5fef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>afterBreaksCycle2</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a63a4a6df01654d5d7b692d2bfb2834f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>afterBreaksCycle3</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a4db84bd553f89889a075609d413f79b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkCargoDependencyProperty</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a6c63cb06a585b710b83d55204ebcbee4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkPlatformProperty</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>aea90d910b9f3a12ce30d4b9246a58a8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Collection&lt; DynamicTest &gt;</type>
      <name>checkTargetProperties</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a5eb32e7589e8b4ab58b2f238957841db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connectionToEffectPort</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>ac1e340401f1771765111fb2600f87cdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connectionToEffectPort2</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>ae00bad78692b0d2ced52d8fcfa40b067</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connectionToEffectPort3</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a374c82a3304ecdb2fb1c8998f125ecb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connectionToEffectPort3_5</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>aff9e32ac408b7c72d98bd01a27ad310b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connectionToEffectPort4</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a41c5a671600aa02e36046145b50fa19d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detectCausalityLoop</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>aafeabd414515f8c8e54a7b900d109476</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detectInstantiationCycle</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a0701acbf46d2e47194625400104d318f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>detectInstantiationCycle2</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>ad28898e11e192518af5a0072dfa18859</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disallowBraceInitialization</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>ad34decbcffba304037ef8b895f3822ab</anchor>
      <arglist>(String target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disallowMainWithDifferentNameThanFile</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>add5b999b231cc0cb535151c9f6f73070</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disallowParenthesisInitialization</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>af98ba9e434f31576efc83e8df30bdc17</anchor>
      <arglist>(String target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disallowReactorCalledPreamble</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a67c6b76e95bda3aa6bfa27553ad9f938</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disallowUnderscoreActions</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>ae861bcfa2233d3547d4e9f35f41e2a63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disallowUnderscoreInputs</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>aa73d032f5a8c0b8fd4fa2b203af4876a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disallowUnderscoreOutputs</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>aa7e3c4d9c83ca4be995eb75950c0708e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disallowUnderscoreParameters</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>afdbbd6dec701f502da658b60e6cf1287</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disallowUnderscoreReactorDef</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a82fcf925e235939bf5f7fab2b53111e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disallowUnderscoreReactorInstantiation</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>af3d493f632446241c9dac8ca106228e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disallowUnderscoreStates</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a241a4a6adc01dc46d56c32230bf17ec0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disallowUnderscoreTimers</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a1497f54b6904fccebdc30b3953423c06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>duplicateVariable</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>ade68c9ea94b89eb092a51e964681e310</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>missingTrigger</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>aa3dcf4eccb10cd1de67f274698574c76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multipleConnectionsToInputTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a511c70ab657ac63eaed530191f637208</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multipleLabels</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a4e3692d63617367aea4cc702c6ac1c48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nonzeroAfterMustHaveUnits</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>aa2b2a1a698435604bad27ffa05518044</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nonZeroTimeValueWithoutUnits</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>aea7c64572d05887b7ce9f86dd17dd1fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>noSemicolonIfNotAmbiguous</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a29150edc1515470b583cf8a17948ef67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>overflowingAssignmentC</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>adb88f60968233bb2223a6ade6d6b7aae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>overflowingDeadlineC</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a82cd45627742a951799016042959c3e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>overflowingParameterC</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>af75fd1773759798021f686c15c51581f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parameterTypeMismatch</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a09c0b5c68c4dc61be5e436cdab9f827a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recognizeHostNames</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a70f05bee5b7daccaba83e0ea6bedd333</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recognizeIPV4</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>aca2fbe089353ac10bc3454c09e03ac30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recognizeIPV6</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>aa1ee16ef15ccf5acbf3a73ea5da4edbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>requireSemicolonIfAmbiguous</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>acf9223699953010cc7c7eaf6752bf6a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stateAndParameterDeclarationsInC</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>aea8a8c65c2e1cc842ad174a321d525c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>targetCodeInTimeArgument</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a57d8f5a40fbdf263002da18054a15aed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testCppMutableInput</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>ac9c06daa20c4d740a8540dd60cd0d7b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testFederatedHasInput</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a2ae3614d1f951f3867c77028de8d211a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testFederatedHasOutput</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a5c926b9edeb78acbfc3b13c715a64d3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testFederationSupport</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a7e684d515295a510d20a9f1f26530912</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testImportedCyclicReactor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a015673ba78cefd41f2d2c52e57661ea0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testInheritanceSupport</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a03bb6b9063585b56b83e6c403c645bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testInitialMode</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>af4cff7fc0fa16affb1991bf6ccb0ef76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testInitialModes</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>afd68ff7d122f4cf3069288518d762d61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testInvalidTargetParam</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a37d9b900d622315337cdede3e78f8fa4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testMainHasInput</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a37216b62e0df798580be6a3be29f90f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testMainHasOutput</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>ac0b63b34f0fe4f3062c92029b5cd13dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testMainReactorHasHost</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>aca9c2cf7c39d021b1b2eeb85329ee2f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testMissingInputType</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a8b779b9d8c38cd3afbe57448425a1dda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testMissingModeStateReset</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a2b1f88581a7477628cea8002480269d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testMissingModeStateResetInstance</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a5548ecd853e0015a9a157aec0a4a8d39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testMissingName</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>ad84d0b2d482ec0343278623e542b3fda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testMissingOutputType</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>aba8096603f1f7e5e1b5555a6c2c134d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testMissingStateType</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>aa89f4863eb380088741e5c85d2b65050</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testModeActionNamespace</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a90762c2c3fe4d9c7de388bdd59e71981</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testModeInstanceNamespace</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a3fae64618a619e468caffa8d2ed8b240</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testModeStateNamespace</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a1c4db600f96864faf1c13eee97ad4a91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testModeStateResetWithoutInitialValue</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>ab6b430c7f7f7e0ae152f2b59911486a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testModeTimerNamespace</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a4141cd5a997f7c89c4216149692f890c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testMultipleFederatedReactor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a8c0a20d27295dd7f008830f45e76d23e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testMultipleMainOrFederatedReactor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>af4691225764f19d359420389fc1137f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testMultipleMainReactor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a8da0f0f2903057da5e0b985bfabd2ec8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testMultipleMainReactorUnnamed</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>aa93b6f3c3bd0187c4f759394d9ee9d49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testMutuallyExclusiveThreadingParams</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>af16a3bb6b016c804d35066c90fc3ec3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testOverflowingDeadline</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a57b63627d5ef43a26651bf0c40d3d9b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testPreambleVisibility</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a95a6158816147cb539509d075a7d7833</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testTargetParamNotSupportedForTarget</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>adb12790fe3bdfdc47d4c094cd4ecd22a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testUnnamedReactor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>ab9ba81f21a3efe59a9c5c82f50f46e67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testUnrecognizedTarget</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>adc802bf78e3365472d2f38ffc290f84e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testUnspecifiedTransitionType</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>ac31be7525769951713659bf672139458</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testUnusedImport</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a8adea64b2c1e5059f901f4c9e7a795d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testWrongParamType</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a690beeaafa8b070cab1d8052d33046d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testWrongStructureForLabelAttribute</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>aa064c2399382a62c09157fd41c23d6de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tracingOptionsCpp</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a13f50f86f9597cf0f1d3d43920320135</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>warnAgainstMultipleTypes</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a6ab57017438369e0187e749d721f1706</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Map&lt; TargetPropertyType, List&lt; List&lt; Object &gt; &gt; &gt;</type>
      <name>compositeTypeToKnownBad</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>a0abf84b35439f21f78f92d841e7eb110</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>ParseHelper&lt; Model &gt;</type>
      <name>parser</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>aab1f280cc27f866858fa1783476257a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Map&lt; PrimitiveType, List&lt; String &gt; &gt;</type>
      <name>primitiveTypeToKnownBad</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>ad0fe31be71e631bccf3352d33e7a1b6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Map&lt; PrimitiveType, List&lt; String &gt; &gt;</type>
      <name>primitiveTypeToKnownGood</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>ac0cd985a2873c40043247e4b808f3658</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>ValidationTestHelper</type>
      <name>validator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1LinguaFrancaValidationTest.html</anchorfile>
      <anchor>ae3a5fc1183974f937f78feca437afc3e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::compiler::MixedRadixIntTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1compiler_1_1MixedRadixIntTest.html</filename>
    <member kind="function">
      <type>void</type>
      <name>create</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1MixedRadixIntTest.html</anchorfile>
      <anchor>a1b215d7e865b88e169cbf7d00941e6c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createWithError</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1MixedRadixIntTest.html</anchorfile>
      <anchor>a7c73f68ed921abfcdcb6395d5c81dd37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createWithInfinity</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1MixedRadixIntTest.html</anchorfile>
      <anchor>ae4a5877409447ce5a642f6d4b976dd4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createWithNullAndSet</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1MixedRadixIntTest.html</anchorfile>
      <anchor>a432ae4f1972644d977c0cd869b390a55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testIncrement</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1MixedRadixIntTest.html</anchorfile>
      <anchor>ae991f408c5b83df5736b80083435802d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testPermutation</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1MixedRadixIntTest.html</anchorfile>
      <anchor>aa1f3f0e9250f1273a8d9dbf58290bb11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>List&lt; Integer &gt;</type>
      <name>digits</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1MixedRadixIntTest.html</anchorfile>
      <anchor>a8137107c09876c7bee956b81da098c48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>List&lt; Integer &gt;</type>
      <name>radixes</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1MixedRadixIntTest.html</anchorfile>
      <anchor>a342ecc9fac90bf3259ab7865d1240786</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::compiler::PortInstanceTests</name>
    <filename>classorg_1_1lflang_1_1tests_1_1compiler_1_1PortInstanceTests.html</filename>
    <member kind="function">
      <type>void</type>
      <name>createRange</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1PortInstanceTests.html</anchorfile>
      <anchor>ae4bd1346febd7cacc0f557b365fc5a29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiportDestination</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1PortInstanceTests.html</anchorfile>
      <anchor>a2c61c07f7bebfdba7bf01dfa1117c8bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearConnections</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1PortInstanceTests.html</anchorfile>
      <anchor>aa8386f7acb86a81751aab946cb1298d7</anchor>
      <arglist>(ReactorInstance r)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1PortInstanceTests.html</anchorfile>
      <anchor>a7b176663dc2be7ec1499032f6ac92ce4</anchor>
      <arglist>(PortInstance src, int srcStart, int srcWidth, PortInstance dst, int dstStart, int dstWidth)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>connect</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1PortInstanceTests.html</anchorfile>
      <anchor>abde5771248fd6f702759845344620009</anchor>
      <arglist>(PortInstance src, PortInstance dst)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>PortInstance</type>
      <name>newInputPort</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1PortInstanceTests.html</anchorfile>
      <anchor>a4dbd92e1817e2d8cdb8a94c48b5d21e5</anchor>
      <arglist>(String name, ReactorInstance container)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>PortInstance</type>
      <name>newOutputPort</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1PortInstanceTests.html</anchorfile>
      <anchor>a69fed2a69b96ced75d1ab5bd825379f5</anchor>
      <arglist>(String name, ReactorInstance container)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>PortInstance</type>
      <name>newPort</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1PortInstanceTests.html</anchorfile>
      <anchor>a7d72d06a322e8144e41c28ebd49ede0e</anchor>
      <arglist>(String name, ReactorInstance container)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ReactionInstance</type>
      <name>newReaction</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1PortInstanceTests.html</anchorfile>
      <anchor>a239af18ede07d253416c4cb571f85b7b</anchor>
      <arglist>(PortInstance trigger)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ReactorInstance</type>
      <name>newReactor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1PortInstanceTests.html</anchorfile>
      <anchor>a64c3151bdff5e14b3d2fced4ee90d837</anchor>
      <arglist>(String name, ReactorInstance container)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::compiler::RangeTests</name>
    <filename>classorg_1_1lflang_1_1tests_1_1compiler_1_1RangeTests.html</filename>
    <member kind="function">
      <type>void</type>
      <name>createRange</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1RangeTests.html</anchorfile>
      <anchor>ad03d211999f0df6a2006de9096b76bc8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::compiler::RoundTripTests</name>
    <filename>classorg_1_1lflang_1_1tests_1_1compiler_1_1RoundTripTests.html</filename>
    <member kind="function">
      <type>Collection&lt; DynamicTest &gt;</type>
      <name>roundTripTestFactory</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1RoundTripTests.html</anchorfile>
      <anchor>aaa59305bebbd232ae3338572eca0e62c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::compiler::TargetConfigTests</name>
    <filename>classorg_1_1lflang_1_1tests_1_1compiler_1_1TargetConfigTests.html</filename>
    <member kind="function">
      <type>void</type>
      <name>testFederation</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1TargetConfigTests.html</anchorfile>
      <anchor>a3b0799acb635a50b86098e70b6f8367c</anchor>
      <arglist>(@TempDir Path tempDir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testParsing</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1TargetConfigTests.html</anchorfile>
      <anchor>a9a96ed213179e9e0d5036275987600fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>JavaIoFileSystemAccess</type>
      <name>fileAccess</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1TargetConfigTests.html</anchorfile>
      <anchor>ae80d594c3b1a4aed75a118f5f9190280</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LFGenerator</type>
      <name>generator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1TargetConfigTests.html</anchorfile>
      <anchor>adea983ec33fb4d4ce75da9a68ef35d79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>ParseHelper&lt; Model &gt;</type>
      <name>parser</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1TargetConfigTests.html</anchorfile>
      <anchor>a1d57051507f2963cb23ca99c2df73d3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Provider&lt; ResourceSet &gt;</type>
      <name>resourceSetProvider</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1compiler_1_1TargetConfigTests.html</anchorfile>
      <anchor>a27de86218e9d54c5013a1f26e26af0c1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::Configurators</name>
    <filename>classorg_1_1lflang_1_1tests_1_1Configurators.html</filename>
    <class kind="interface">org::lflang::tests::Configurators::Configurator</class>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>disableThreading</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1Configurators.html</anchorfile>
      <anchor>aa450c0cb80649a5154122329ff365dff</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>makeFlexPRETCompatible</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1Configurators.html</anchorfile>
      <anchor>a2eb39c842c07156827705e67389dde5c</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>makeFlexPRETCompatibleUnthreaded</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1Configurators.html</anchorfile>
      <anchor>a82ea3681835393f5962ffd19e0b3cf8a</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>makePatmosCompatible</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1Configurators.html</anchorfile>
      <anchor>a4dd6fa8819e6caab6399fc172e5a9bd5</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>makePatmosCompatibleUnthreaded</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1Configurators.html</anchorfile>
      <anchor>a3e795b6b04bebe85d7dc660771f7ac63</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>makeZephyrCompatible</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1Configurators.html</anchorfile>
      <anchor>a712bac7a54ddf7a7df11d7ad6693a88b</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>makeZephyrCompatibleUnthreaded</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1Configurators.html</anchorfile>
      <anchor>a25afbc82e7bccbb83702cd5a4a30d7ee</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>noChanges</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1Configurators.html</anchorfile>
      <anchor>a8945933cbfba335675cc68af645fa90d</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::tests::Configurators::Configurator</name>
    <filename>interfaceorg_1_1lflang_1_1tests_1_1Configurators_1_1Configurator.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>configure</name>
      <anchorfile>interfaceorg_1_1lflang_1_1tests_1_1Configurators_1_1Configurator.html</anchorfile>
      <anchor>a68134085556e5360a88d7fa17de0e8c5</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::LfInjectedTestBase</name>
    <filename>classorg_1_1lflang_1_1tests_1_1LfInjectedTestBase.html</filename>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::LFInjectorProvider</name>
    <filename>classorg_1_1lflang_1_1tests_1_1LFInjectorProvider.html</filename>
    <member kind="function">
      <type>Injector</type>
      <name>getInjector</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFInjectorProvider.html</anchorfile>
      <anchor>aa2c1403a6477b68bf0b8b2b4ccbeca02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>LFRuntimeModule</type>
      <name>createRuntimeModule</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFInjectorProvider.html</anchorfile>
      <anchor>a13cc904e4476bae46574e044776d8bb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Injector</type>
      <name>internalCreateInjector</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFInjectorProvider.html</anchorfile>
      <anchor>adfc74fce988a3d6f18513df13996993a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>volatile Injector</type>
      <name>injector</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFInjectorProvider.html</anchorfile>
      <anchor>a3f491f39ff875048b5c52933032b8fb0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::LFParsingTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1LFParsingTest.html</filename>
    <member kind="function">
      <type>void</type>
      <name>testLexingCharLiteral</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFParsingTest.html</anchorfile>
      <anchor>abe7e9469f63dfe448ffa4ffb9ee1add1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testLexingDquotedString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFParsingTest.html</anchorfile>
      <anchor>ab522da476caac11ae06a220f43cde016</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testLexingDquotedStringWithEscape</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFParsingTest.html</anchorfile>
      <anchor>a338f5d386818514eb509a0f9a6aa9d49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testLexingEmptyTargetProperties</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFParsingTest.html</anchorfile>
      <anchor>abe83844cf38825441df667898e9e4c63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testLexingEscapedCharLiteral</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFParsingTest.html</anchorfile>
      <anchor>a2c4c37fa09e4bf804006ab8c4ea80ea6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testLexingLifetimeAnnots</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFParsingTest.html</anchorfile>
      <anchor>adc95571b9f3204384e1258888dda26c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testLexingMultilineString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFParsingTest.html</anchorfile>
      <anchor>afffd16be32d61ecdfafe51ac1e252e5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testLexingNewlineCont</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFParsingTest.html</anchorfile>
      <anchor>a375f06ca820f41341d6b98e41471ccea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testLexingSingleLifetimeAnnot</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFParsingTest.html</anchorfile>
      <anchor>aabda6bdffd75d7a0d75211f4b66fb09f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testLexingSquotedString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFParsingTest.html</anchorfile>
      <anchor>aa261f2ccd3ffacb114e9a3b12a0e776e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testParsingTargetPropertyAsString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFParsingTest.html</anchorfile>
      <anchor>a677d17c3671565dbd66cd91e125be33f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::LfParsingTestHelper</name>
    <filename>classorg_1_1lflang_1_1tests_1_1LfParsingTestHelper.html</filename>
    <member kind="function">
      <type>Model</type>
      <name>parseValidModel</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LfParsingTestHelper.html</anchorfile>
      <anchor>a1c07172bdeea22435c640005b73d0c95</anchor>
      <arglist>(String fileName, String reformattedTestCase)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>checkValid</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LfParsingTestHelper.html</anchorfile>
      <anchor>a03b248f519389b641b06a96328a83e81</anchor>
      <arglist>(String fileName, Model resultingModel)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::LFTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1LFTest.html</filename>
    <class kind="class">org::lflang::tests::LFTest::ExecutionLogger</class>
    <class kind="enum">org::lflang::tests::LFTest::Result</class>
    <member kind="function">
      <type>int</type>
      <name>compareTo</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>a2a4d6f84d8bff3d14f2d285a0f76eff8</anchor>
      <arglist>(LFTest t)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>a9117f8cbcdfa27cca54c14303373de12</anchor>
      <arglist>(Object o)</arglist>
    </member>
    <member kind="function">
      <type>LFGeneratorContext</type>
      <name>getContext</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>a43ef7a64d61d15b19f3b94313f82c7a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getExecutionTimeNanoseconds</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>a0fe46465c32de95e34411e0128747b34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>FileConfig</type>
      <name>getFileConfig</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>aec35d0764b6de80dcf3f916a430a1a91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getSrcPath</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>acfaaead1d3119e5d24ca42a924ab33c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleTestError</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>ac1db30291e1213a10f8472f6adf00ff7</anchor>
      <arglist>(TestError e)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasFailed</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>a48b1faf19455bc587d10b95f06d0b086</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>a5d67ee8574969668fbc3f93bcbc30e44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasPassed</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>ac2948e234126ce0460b50e1d2cb80e82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LFTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>a119c5b62641d126540615584fcd1bbe9</anchor>
      <arglist>(Path srcFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>markPassed</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>a95a581640d49380fba3cb9dbce437762</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Thread</type>
      <name>recordStdErr</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>ac0542870885f24f677b99fcade212fc8</anchor>
      <arglist>(Process process)</arglist>
    </member>
    <member kind="function">
      <type>Thread</type>
      <name>recordStdOut</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>a9a43c91de08e83f9f9b19c5aa9fd5948</anchor>
      <arglist>(Process process)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>redirectOutputs</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>a6c2a1f8932a220146dcbc6e398f54d34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reportErrors</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>ac64bfc11f289d77c05e5c973eb5e19ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExecutionTimeNanoseconds</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>a5d37e4bd736e161ebffecd602d4d9c37</anchor>
      <arglist>(long time)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>a1d8d96791662ea5a9fc50f014cdc93a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>restoreOutputs</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>a225dea3faa33b604ec398af732e0d803</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="package">
      <type>void</type>
      <name>loadContext</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest.html</anchorfile>
      <anchor>a7bf338fad1356f08ba6d7db16225c396</anchor>
      <arglist>(LFGeneratorContext context)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::LFTest::ExecutionLogger</name>
    <filename>classorg_1_1lflang_1_1tests_1_1LFTest_1_1ExecutionLogger.html</filename>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest_1_1ExecutionLogger.html</anchorfile>
      <anchor>a84e5e13e71af7ef4138adc20db0ab05b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Thread</type>
      <name>recordStdErr</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest_1_1ExecutionLogger.html</anchorfile>
      <anchor>ab3a0b933adb6fe3bddfaa6a75fe026b7</anchor>
      <arglist>(Process process)</arglist>
    </member>
    <member kind="function">
      <type>Thread</type>
      <name>recordStdOut</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest_1_1ExecutionLogger.html</anchorfile>
      <anchor>ad49ec590d5923bbbd1ea7eec89c6d941</anchor>
      <arglist>(Process process)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest_1_1ExecutionLogger.html</anchorfile>
      <anchor>ab7189e0cb3d707b3065fadc043f3e637</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>StringBuffer</type>
      <name>buffer</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1LFTest_1_1ExecutionLogger.html</anchorfile>
      <anchor>aafb216881a7e73460dc35168f25d37ac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::tests::LFTest::Result</name>
    <filename>enumorg_1_1lflang_1_1tests_1_1LFTest_1_1Result.html</filename>
    <member kind="function">
      <type></type>
      <name>Result</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1LFTest_1_1Result.html</anchorfile>
      <anchor>afdf7a04f90611a4ddae9f102652d5908</anchor>
      <arglist>(String message)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CODE_GEN_FAIL</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1LFTest_1_1Result.html</anchorfile>
      <anchor>a3940f550eeb42ba39c54c1cfd93f32f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CONFIG_FAIL</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1LFTest_1_1Result.html</anchorfile>
      <anchor>a642c7ddfec5d4ae687e9fdb7ad1607b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final String</type>
      <name>message</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1LFTest_1_1Result.html</anchorfile>
      <anchor>a7c4a788e817acbe3827b480ad83642d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NO_EXEC_FAIL</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1LFTest_1_1Result.html</anchorfile>
      <anchor>ab822fe1777e7ca004e4194591a15e8c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PARSE_FAIL</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1LFTest_1_1Result.html</anchorfile>
      <anchor>a61cfd467064d2be8b8c5bfcdeda36a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TEST_EXCEPTION</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1LFTest_1_1Result.html</anchorfile>
      <anchor>a0905340bf42ed93ad9eb85e05bc86741</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TEST_FAIL</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1LFTest_1_1Result.html</anchorfile>
      <anchor>a6d3190c362763cde8d825fce8dd3601e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TEST_PASS</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1LFTest_1_1Result.html</anchorfile>
      <anchor>a71ff2b1e819fc45236f24504f3b6843f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TEST_TIMEOUT</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1LFTest_1_1Result.html</anchorfile>
      <anchor>a5139b842355f6b9e8550359819deff8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TRANSFORM_FAIL</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1LFTest_1_1Result.html</anchorfile>
      <anchor>aaa5ea40def2fba966dd759d59d0e976e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>UNKNOWN</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1LFTest_1_1Result.html</anchorfile>
      <anchor>aace9fcbc24ce69e2a5c887608ce68d91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>VALIDATE_FAIL</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1LFTest_1_1Result.html</anchorfile>
      <anchor>a42d7ee49ecd623de2b188840eb6457ba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::lsp::ErrorInserter</name>
    <filename>classorg_1_1lflang_1_1tests_1_1lsp_1_1ErrorInserter.html</filename>
    <class kind="class">org::lflang::tests::lsp::ErrorInserter::AlteredTest</class>
    <class kind="class">org::lflang::tests::lsp::ErrorInserter::Builder</class>
    <member kind="variable" static="yes">
      <type>static final Builder</type>
      <name>C</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1ErrorInserter.html</anchorfile>
      <anchor>a1e8155313a0d0810fb80073f371b095d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Builder</type>
      <name>CPP</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1ErrorInserter.html</anchorfile>
      <anchor>a3b36ade629a6c67c3cdae24ce089e74d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Builder</type>
      <name>PYTHON</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1ErrorInserter.html</anchorfile>
      <anchor>abc6a86754777b932a937b581294ffb67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Builder</type>
      <name>PYTHON_SYNTAX_ONLY</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1ErrorInserter.html</anchorfile>
      <anchor>a657b9a244f4ba26268126eebf1cc0874</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Builder</type>
      <name>RUST</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1ErrorInserter.html</anchorfile>
      <anchor>a32d950acf34b5d50da235c7f3710f389</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Builder</type>
      <name>TYPESCRIPT</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1ErrorInserter.html</anchorfile>
      <anchor>a2cd9536f6e6b4bddd95f75b03c5dac73</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::lsp::ErrorInserter::AlteredTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1lsp_1_1ErrorInserter_1_1AlteredTest.html</filename>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1ErrorInserter_1_1AlteredTest.html</anchorfile>
      <anchor>a43a921b4b4831a83678c6f67ef6ac3a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ImmutableList&lt; Integer &gt;</type>
      <name>getBadLines</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1ErrorInserter_1_1AlteredTest.html</anchorfile>
      <anchor>adfd8605a2f9b9452b6b86ad4ef5d7ec9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Path</type>
      <name>getSrcFile</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1ErrorInserter_1_1AlteredTest.html</anchorfile>
      <anchor>a1d5a0f9dd0a3cf3d08052c74e2d085e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1ErrorInserter_1_1AlteredTest.html</anchorfile>
      <anchor>a2ccfd5611dd81c93282056dbcbc96e21</anchor>
      <arglist>(String line, Random random)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replace</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1ErrorInserter_1_1AlteredTest.html</anchorfile>
      <anchor>ac12d3060bcdce8ad7d84c9e718afa0df</anchor>
      <arglist>(Function&lt; String, String &gt; replacer, Random random)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1ErrorInserter_1_1AlteredTest.html</anchorfile>
      <anchor>a5ad9a85cc1169ee103e445e83400af41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1ErrorInserter_1_1AlteredTest.html</anchorfile>
      <anchor>aefa15a40f6e876e65ea7b794443ac399</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::lsp::ErrorInserter::Builder</name>
    <filename>classorg_1_1lflang_1_1tests_1_1lsp_1_1ErrorInserter_1_1Builder.html</filename>
    <member kind="function">
      <type></type>
      <name>Builder</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1ErrorInserter_1_1Builder.html</anchorfile>
      <anchor>a50d56f8cbadf9f31bd9e4dcc353ebe3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Builder</type>
      <name>replacer</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1ErrorInserter_1_1Builder.html</anchorfile>
      <anchor>a80ed88c260f6ae73c95d8432b740e563</anchor>
      <arglist>(String phrase, String alternativePhrase)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::lsp::LspTests</name>
    <filename>classorg_1_1lflang_1_1tests_1_1lsp_1_1LspTests.html</filename>
    <base>org.lflang.tests.LfInjectedTestBase</base>
    <member kind="function" protection="package">
      <type>void</type>
      <name>cppValidationTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1LspTests.html</anchorfile>
      <anchor>ac3ead4758606a519083e6cdbaa140cbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="package">
      <type>void</type>
      <name>pythonValidationTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1LspTests.html</anchorfile>
      <anchor>af0680e40781cac43ba7efd64dbe35146</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="package">
      <type>void</type>
      <name>pythonValidationTestSyntaxOnly</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1LspTests.html</anchorfile>
      <anchor>a8e4aea5ee65fe4f6f2709d85f82763c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="package">
      <type>void</type>
      <name>rustValidationTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1LspTests.html</anchorfile>
      <anchor>a8ee8e1899c1365750531a222e6a697d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="package">
      <type>void</type>
      <name>typescriptValidationTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1LspTests.html</anchorfile>
      <anchor>a8dac5fb903ec7a4eef9260a921dc03c2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::lsp::MockCancelIndicator</name>
    <filename>classorg_1_1lflang_1_1tests_1_1lsp_1_1MockCancelIndicator.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>isCanceled</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1MockCancelIndicator.html</anchorfile>
      <anchor>ab6b1200df835beb4fad73d91dedbf56e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::lsp::MockLanguageClient</name>
    <filename>classorg_1_1lflang_1_1tests_1_1lsp_1_1MockLanguageClient.html</filename>
    <member kind="function">
      <type>void</type>
      <name>clearDiagnostics</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1MockLanguageClient.html</anchorfile>
      <anchor>a6bf0361bb7e20715a7f66e71824661bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>List&lt; Diagnostic &gt;</type>
      <name>getReceivedDiagnostics</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1MockLanguageClient.html</anchorfile>
      <anchor>a9f08001687c0918df7a046b1f5a88321</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logMessage</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1MockLanguageClient.html</anchorfile>
      <anchor>ae1a42e55f81341d6a5ce95c283a07e26</anchor>
      <arglist>(MessageParams message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>publishDiagnostics</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1MockLanguageClient.html</anchorfile>
      <anchor>a34b37185bf354cd9b28e622583509b6e</anchor>
      <arglist>(PublishDiagnosticsParams diagnostics)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showMessage</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1MockLanguageClient.html</anchorfile>
      <anchor>ab72ed2bde3e9348bba46d3e52da569ea</anchor>
      <arglist>(MessageParams messageParams)</arglist>
    </member>
    <member kind="function">
      <type>CompletableFuture&lt; MessageActionItem &gt;</type>
      <name>showMessageRequest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1MockLanguageClient.html</anchorfile>
      <anchor>a37091485abfc5d55187a1eb118d4b2dd</anchor>
      <arglist>(ShowMessageRequestParams requestParams)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>telemetryEvent</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1MockLanguageClient.html</anchorfile>
      <anchor>a7b6eb7bb82d92211d654b9fc9be2dfdf</anchor>
      <arglist>(Object object)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::lsp::MockReportProgress</name>
    <filename>classorg_1_1lflang_1_1tests_1_1lsp_1_1MockReportProgress.html</filename>
    <base>org.lflang.generator.IntegratedBuilder.ReportProgress</base>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1MockReportProgress.html</anchorfile>
      <anchor>ab84a680b16d6d6144208540dcc06a4ed</anchor>
      <arglist>(String message, Integer percentage)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>failed</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1MockReportProgress.html</anchorfile>
      <anchor>a12d07c117e92188ef4f8011516e1ffe1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MockReportProgress</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1lsp_1_1MockReportProgress.html</anchorfile>
      <anchor>a069878aefd035df5494064634406b6b2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::RunSingleTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1RunSingleTest.html</filename>
    <member kind="function">
      <type>void</type>
      <name>runSingleTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RunSingleTest.html</anchorfile>
      <anchor>ad028562143924a3e1744dd8a52d928f9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::runtime::CArduinoTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1runtime_1_1CArduinoTest.html</filename>
    <base>org.lflang.tests.TestBase</base>
    <member kind="function">
      <type>void</type>
      <name>buildArduinoTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CArduinoTest.html</anchorfile>
      <anchor>a17ca78bd2a398b931ac635588a718913</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CArduinoTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CArduinoTest.html</anchorfile>
      <anchor>ada8244217839c5f8f8d9b2758338a30f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TestLevel</type>
      <name>pathToLevel</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a9538c294f1910e14c75d49476ec1c159</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>runSingleTestAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab92abba6f078f75ef0933f7d3e2b2183</anchor>
      <arglist>(LFTest test, Class&lt;? extends TestBase &gt; testClass, TestLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stackTraceToString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a28c9f1fdc57f9826c56b1bb335516259</anchor>
      <arglist>(Throwable t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THICK_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a663eca380d65c526a5dc4d4f37dc42f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THIN_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac30e35f8c8edd2ca1f2b26e03ddf6ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyDefaultConfiguration</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acbbd37d213419ddbc3ee9a577b86b895</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ProcessBuilder</type>
      <name>getExecCommand</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab7eb2f2d3c228ab7984b5a2df5cbe589</anchor>
      <arglist>(LFTest test)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GeneratorArguments</type>
      <name>getGeneratorArguments</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aab4725f7eda0dbd2a3162800dc6ab7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final void</type>
      <name>runTestsAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aff3ae7508377e27da65c5deaf4c31534</anchor>
      <arglist>(Target target, Predicate&lt; TestCategory &gt; selected, TestLevel level, Transformer transformer, Configurator configurator, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsFor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0b6820b95f35eff2cf460e32920bf015</anchor>
      <arglist>(List&lt; Target &gt; subset, String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsForTargets</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a1ebac2651a6dd6b8044d96eb597402d6</anchor>
      <arglist>(String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsSingleThreadedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acf8d6dd5602a2cd1575379119f5909e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isLinux</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aacafa215f9876c94aa4fa896429a5e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isMac</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a349bc196ce85c7b24927a28b0db751b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isWindows</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab4c75980dccb274f675d183201afde3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>printTestHeader</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac847b48162a5aa845f798a78465ff5fb</anchor>
      <arglist>(Target target, String description)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>JavaIoFileSystemAccess</type>
      <name>fileAccess</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ad9cea2a81034b6aba70301c2b728b5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LFGenerator</type>
      <name>generator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac2d0777be07d4c6f9590aadae07a3483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Provider&lt; ResourceSet &gt;</type>
      <name>resourceSetProvider</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>af44aa1c33c4a2f62a385ae18d2a09541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>TestRegistry</type>
      <name>testRegistry</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0267f19ce7ff14b1a410e2a39b7989c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>IResourceValidator</type>
      <name>validator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>afc6768563083e4403de7f0d1dd375f68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::runtime::CCppTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1runtime_1_1CCppTest.html</filename>
    <base>org.lflang.tests.TestBase</base>
    <member kind="function">
      <type></type>
      <name>CCppTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CCppTest.html</anchorfile>
      <anchor>ad7a379274e7a92528e28a0715a33f11e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runAsCCpp</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CCppTest.html</anchorfile>
      <anchor>a76a874617606798f27400009db377632</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TestLevel</type>
      <name>pathToLevel</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a9538c294f1910e14c75d49476ec1c159</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>runSingleTestAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab92abba6f078f75ef0933f7d3e2b2183</anchor>
      <arglist>(LFTest test, Class&lt;? extends TestBase &gt; testClass, TestLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stackTraceToString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a28c9f1fdc57f9826c56b1bb335516259</anchor>
      <arglist>(Throwable t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THICK_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a663eca380d65c526a5dc4d4f37dc42f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THIN_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac30e35f8c8edd2ca1f2b26e03ddf6ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyDefaultConfiguration</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acbbd37d213419ddbc3ee9a577b86b895</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ProcessBuilder</type>
      <name>getExecCommand</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab7eb2f2d3c228ab7984b5a2df5cbe589</anchor>
      <arglist>(LFTest test)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GeneratorArguments</type>
      <name>getGeneratorArguments</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aab4725f7eda0dbd2a3162800dc6ab7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final void</type>
      <name>runTestsAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aff3ae7508377e27da65c5deaf4c31534</anchor>
      <arglist>(Target target, Predicate&lt; TestCategory &gt; selected, TestLevel level, Transformer transformer, Configurator configurator, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsFor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0b6820b95f35eff2cf460e32920bf015</anchor>
      <arglist>(List&lt; Target &gt; subset, String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsForTargets</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a1ebac2651a6dd6b8044d96eb597402d6</anchor>
      <arglist>(String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsSingleThreadedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acf8d6dd5602a2cd1575379119f5909e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isLinux</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aacafa215f9876c94aa4fa896429a5e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isMac</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a349bc196ce85c7b24927a28b0db751b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isWindows</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab4c75980dccb274f675d183201afde3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>printTestHeader</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac847b48162a5aa845f798a78465ff5fb</anchor>
      <arglist>(Target target, String description)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>JavaIoFileSystemAccess</type>
      <name>fileAccess</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ad9cea2a81034b6aba70301c2b728b5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LFGenerator</type>
      <name>generator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac2d0777be07d4c6f9590aadae07a3483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Provider&lt; ResourceSet &gt;</type>
      <name>resourceSetProvider</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>af44aa1c33c4a2f62a385ae18d2a09541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>TestRegistry</type>
      <name>testRegistry</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0267f19ce7ff14b1a410e2a39b7989c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>IResourceValidator</type>
      <name>validator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>afc6768563083e4403de7f0d1dd375f68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::runtime::CFlexPRETTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1runtime_1_1CFlexPRETTest.html</filename>
    <base>org.lflang.tests.TestBase</base>
    <member kind="function">
      <type>void</type>
      <name>buildFlexPRETBasicTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CFlexPRETTest.html</anchorfile>
      <anchor>a9d03ad19c922a0c26ac8d03c094f619b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildFlexPRETBasicTestsUnthreaded</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CFlexPRETTest.html</anchorfile>
      <anchor>a7fb4ff9efc1eb98ceb45adfca0ac7b59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildFlexPRETConcurrent</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CFlexPRETTest.html</anchorfile>
      <anchor>a821c2112985654c57be863399f931fef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CFlexPRETTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CFlexPRETTest.html</anchorfile>
      <anchor>a3cd25be608c0ede6617cbd158f54bf25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TestLevel</type>
      <name>pathToLevel</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a9538c294f1910e14c75d49476ec1c159</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>runSingleTestAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab92abba6f078f75ef0933f7d3e2b2183</anchor>
      <arglist>(LFTest test, Class&lt;? extends TestBase &gt; testClass, TestLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stackTraceToString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a28c9f1fdc57f9826c56b1bb335516259</anchor>
      <arglist>(Throwable t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THICK_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a663eca380d65c526a5dc4d4f37dc42f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THIN_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac30e35f8c8edd2ca1f2b26e03ddf6ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyDefaultConfiguration</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acbbd37d213419ddbc3ee9a577b86b895</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ProcessBuilder</type>
      <name>getExecCommand</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab7eb2f2d3c228ab7984b5a2df5cbe589</anchor>
      <arglist>(LFTest test)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GeneratorArguments</type>
      <name>getGeneratorArguments</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aab4725f7eda0dbd2a3162800dc6ab7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final void</type>
      <name>runTestsAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aff3ae7508377e27da65c5deaf4c31534</anchor>
      <arglist>(Target target, Predicate&lt; TestCategory &gt; selected, TestLevel level, Transformer transformer, Configurator configurator, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsFor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0b6820b95f35eff2cf460e32920bf015</anchor>
      <arglist>(List&lt; Target &gt; subset, String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsForTargets</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a1ebac2651a6dd6b8044d96eb597402d6</anchor>
      <arglist>(String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsSingleThreadedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acf8d6dd5602a2cd1575379119f5909e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isLinux</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aacafa215f9876c94aa4fa896429a5e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isMac</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a349bc196ce85c7b24927a28b0db751b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isWindows</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab4c75980dccb274f675d183201afde3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>printTestHeader</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac847b48162a5aa845f798a78465ff5fb</anchor>
      <arglist>(Target target, String description)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>JavaIoFileSystemAccess</type>
      <name>fileAccess</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ad9cea2a81034b6aba70301c2b728b5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LFGenerator</type>
      <name>generator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac2d0777be07d4c6f9590aadae07a3483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Provider&lt; ResourceSet &gt;</type>
      <name>resourceSetProvider</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>af44aa1c33c4a2f62a385ae18d2a09541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>TestRegistry</type>
      <name>testRegistry</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0267f19ce7ff14b1a410e2a39b7989c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>IResourceValidator</type>
      <name>validator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>afc6768563083e4403de7f0d1dd375f68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::runtime::CPatmosTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1runtime_1_1CPatmosTest.html</filename>
    <base>org.lflang.tests.TestBase</base>
    <member kind="function">
      <type></type>
      <name>CPatmosTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CPatmosTest.html</anchorfile>
      <anchor>afea58b19da8dbc0d05fa284fc1af8a38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runPatmosUnthreadedTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CPatmosTest.html</anchorfile>
      <anchor>a745f06fdf5fd9cb6b834253d360d5d82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TestLevel</type>
      <name>pathToLevel</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a9538c294f1910e14c75d49476ec1c159</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>runSingleTestAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab92abba6f078f75ef0933f7d3e2b2183</anchor>
      <arglist>(LFTest test, Class&lt;? extends TestBase &gt; testClass, TestLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stackTraceToString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a28c9f1fdc57f9826c56b1bb335516259</anchor>
      <arglist>(Throwable t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THICK_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a663eca380d65c526a5dc4d4f37dc42f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THIN_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac30e35f8c8edd2ca1f2b26e03ddf6ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyDefaultConfiguration</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acbbd37d213419ddbc3ee9a577b86b895</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ProcessBuilder</type>
      <name>getExecCommand</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CPatmosTest.html</anchorfile>
      <anchor>ad25d62612518ff3bcbbef416500bf577</anchor>
      <arglist>(LFTest test)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GeneratorArguments</type>
      <name>getGeneratorArguments</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aab4725f7eda0dbd2a3162800dc6ab7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final void</type>
      <name>runTestsAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aff3ae7508377e27da65c5deaf4c31534</anchor>
      <arglist>(Target target, Predicate&lt; TestCategory &gt; selected, TestLevel level, Transformer transformer, Configurator configurator, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsFor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0b6820b95f35eff2cf460e32920bf015</anchor>
      <arglist>(List&lt; Target &gt; subset, String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsForTargets</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a1ebac2651a6dd6b8044d96eb597402d6</anchor>
      <arglist>(String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsSingleThreadedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acf8d6dd5602a2cd1575379119f5909e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isLinux</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aacafa215f9876c94aa4fa896429a5e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isMac</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a349bc196ce85c7b24927a28b0db751b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isWindows</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab4c75980dccb274f675d183201afde3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>printTestHeader</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac847b48162a5aa845f798a78465ff5fb</anchor>
      <arglist>(Target target, String description)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>JavaIoFileSystemAccess</type>
      <name>fileAccess</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ad9cea2a81034b6aba70301c2b728b5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LFGenerator</type>
      <name>generator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac2d0777be07d4c6f9590aadae07a3483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Provider&lt; ResourceSet &gt;</type>
      <name>resourceSetProvider</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>af44aa1c33c4a2f62a385ae18d2a09541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>TestRegistry</type>
      <name>testRegistry</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0267f19ce7ff14b1a410e2a39b7989c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>IResourceValidator</type>
      <name>validator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>afc6768563083e4403de7f0d1dd375f68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::runtime::CppRos2Test</name>
    <filename>classorg_1_1lflang_1_1tests_1_1runtime_1_1CppRos2Test.html</filename>
    <base>org.lflang.tests.TestBase</base>
    <member kind="function">
      <type></type>
      <name>CppRos2Test</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CppRos2Test.html</anchorfile>
      <anchor>ac07c9387b36ce2ba5c2859c81ba9d453</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runWithRos2</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CppRos2Test.html</anchorfile>
      <anchor>ad070a7491a1dabce751fdbc691063672</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TestLevel</type>
      <name>pathToLevel</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a9538c294f1910e14c75d49476ec1c159</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>runSingleTestAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab92abba6f078f75ef0933f7d3e2b2183</anchor>
      <arglist>(LFTest test, Class&lt;? extends TestBase &gt; testClass, TestLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stackTraceToString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a28c9f1fdc57f9826c56b1bb335516259</anchor>
      <arglist>(Throwable t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THICK_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a663eca380d65c526a5dc4d4f37dc42f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THIN_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac30e35f8c8edd2ca1f2b26e03ddf6ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyDefaultConfiguration</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acbbd37d213419ddbc3ee9a577b86b895</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ProcessBuilder</type>
      <name>getExecCommand</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab7eb2f2d3c228ab7984b5a2df5cbe589</anchor>
      <arglist>(LFTest test)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GeneratorArguments</type>
      <name>getGeneratorArguments</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aab4725f7eda0dbd2a3162800dc6ab7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final void</type>
      <name>runTestsAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aff3ae7508377e27da65c5deaf4c31534</anchor>
      <arglist>(Target target, Predicate&lt; TestCategory &gt; selected, TestLevel level, Transformer transformer, Configurator configurator, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsFor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0b6820b95f35eff2cf460e32920bf015</anchor>
      <arglist>(List&lt; Target &gt; subset, String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsForTargets</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a1ebac2651a6dd6b8044d96eb597402d6</anchor>
      <arglist>(String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsSingleThreadedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acf8d6dd5602a2cd1575379119f5909e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isLinux</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aacafa215f9876c94aa4fa896429a5e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isMac</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a349bc196ce85c7b24927a28b0db751b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isWindows</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab4c75980dccb274f675d183201afde3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>printTestHeader</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac847b48162a5aa845f798a78465ff5fb</anchor>
      <arglist>(Target target, String description)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>JavaIoFileSystemAccess</type>
      <name>fileAccess</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ad9cea2a81034b6aba70301c2b728b5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LFGenerator</type>
      <name>generator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac2d0777be07d4c6f9590aadae07a3483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Provider&lt; ResourceSet &gt;</type>
      <name>resourceSetProvider</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>af44aa1c33c4a2f62a385ae18d2a09541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>TestRegistry</type>
      <name>testRegistry</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0267f19ce7ff14b1a410e2a39b7989c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>IResourceValidator</type>
      <name>validator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>afc6768563083e4403de7f0d1dd375f68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::runtime::CppTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1runtime_1_1CppTest.html</filename>
    <base>org.lflang.tests.RuntimeTest</base>
    <member kind="function">
      <type></type>
      <name>CppTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CppTest.html</anchorfile>
      <anchor>ae416f6192ee78862ef5a26e12d29888b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runAsFederated</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>ad3389138df5f2795c24443144941e0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runBasicTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CppTest.html</anchorfile>
      <anchor>af8e6978e648b63b4010d21ca111d6621</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runConcurrentTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CppTest.html</anchorfile>
      <anchor>a4c049dc3a569a0fcfb5067d748b6f751</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runDockerFederatedTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a1c38e986f0dbc5879a169fbb1904bc0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runDockerTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>ad9413ff2e793fd6ab11b3cf66fcecbc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runEnclaveTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a38341fb78c02a6b7f767be18683fc4ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runFederatedTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CppTest.html</anchorfile>
      <anchor>a6b74cef8752158e81b94c93ec33950a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runGenericsTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a27377b800bc57a612c04de9868d27b67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runModalTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a3fb18e17b3116e83075cdbc478804fef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runMultiportTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CppTest.html</anchorfile>
      <anchor>a58590b2e148fc23b5051b97c29064cbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runNoInliningTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a15dace8210c1f0d9c4dea63696ae7938</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runRos2Tests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CppTest.html</anchorfile>
      <anchor>ab910aa10a27fdccb81ece491bbfda867</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runTargetSpecificTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CppTest.html</anchorfile>
      <anchor>a5f93e9c2233e6766952cee6d3f92aa76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runWithThreadingOff</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>aa761e2df9c6a3b152b105d29f8cf2d6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>compatibleWithThreadingOff</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>aab6c0b1f08e0e439dd301d628a8548ae</anchor>
      <arglist>(TestCategory category)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TestLevel</type>
      <name>pathToLevel</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a9538c294f1910e14c75d49476ec1c159</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>runSingleTestAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab92abba6f078f75ef0933f7d3e2b2183</anchor>
      <arglist>(LFTest test, Class&lt;? extends TestBase &gt; testClass, TestLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stackTraceToString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a28c9f1fdc57f9826c56b1bb335516259</anchor>
      <arglist>(Throwable t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THICK_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a663eca380d65c526a5dc4d4f37dc42f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THIN_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac30e35f8c8edd2ca1f2b26e03ddf6ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyDefaultConfiguration</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acbbd37d213419ddbc3ee9a577b86b895</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ProcessBuilder</type>
      <name>getExecCommand</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab7eb2f2d3c228ab7984b5a2df5cbe589</anchor>
      <arglist>(LFTest test)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GeneratorArguments</type>
      <name>getGeneratorArguments</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aab4725f7eda0dbd2a3162800dc6ab7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final void</type>
      <name>runTestsAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aff3ae7508377e27da65c5deaf4c31534</anchor>
      <arglist>(Target target, Predicate&lt; TestCategory &gt; selected, TestLevel level, Transformer transformer, Configurator configurator, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsFor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0b6820b95f35eff2cf460e32920bf015</anchor>
      <arglist>(List&lt; Target &gt; subset, String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsForTargets</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a1ebac2651a6dd6b8044d96eb597402d6</anchor>
      <arglist>(String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsDockerOption</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CppTest.html</anchorfile>
      <anchor>a1150b7a52a8ff714c640bd390d9a1422</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsEnclaves</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CppTest.html</anchorfile>
      <anchor>a264746a634120033fdea0d0c54e9c864</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsFederatedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a9a3e361c6cc6fe24b9b4a81e36817c4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsGenericTypes</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a016b8abdbd507ba5ce4cbb4bd493bdbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsSingleThreadedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acf8d6dd5602a2cd1575379119f5909e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isLinux</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aacafa215f9876c94aa4fa896429a5e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isMac</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a349bc196ce85c7b24927a28b0db751b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isWindows</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab4c75980dccb274f675d183201afde3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>printTestHeader</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac847b48162a5aa845f798a78465ff5fb</anchor>
      <arglist>(Target target, String description)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>JavaIoFileSystemAccess</type>
      <name>fileAccess</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ad9cea2a81034b6aba70301c2b728b5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LFGenerator</type>
      <name>generator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac2d0777be07d4c6f9590aadae07a3483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Provider&lt; ResourceSet &gt;</type>
      <name>resourceSetProvider</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>af44aa1c33c4a2f62a385ae18d2a09541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>TestRegistry</type>
      <name>testRegistry</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0267f19ce7ff14b1a410e2a39b7989c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>IResourceValidator</type>
      <name>validator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>afc6768563083e4403de7f0d1dd375f68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::runtime::CSchedulerTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1runtime_1_1CSchedulerTest.html</filename>
    <base>org.lflang.tests.TestBase</base>
    <member kind="function">
      <type></type>
      <name>CSchedulerTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CSchedulerTest.html</anchorfile>
      <anchor>ad016bc135e222f1e3070769cd115af8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runWithNonDefaultSchedulers</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CSchedulerTest.html</anchorfile>
      <anchor>abc958bc97f9debf6695e5802874060b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TestLevel</type>
      <name>pathToLevel</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a9538c294f1910e14c75d49476ec1c159</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>runSingleTestAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab92abba6f078f75ef0933f7d3e2b2183</anchor>
      <arglist>(LFTest test, Class&lt;? extends TestBase &gt; testClass, TestLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stackTraceToString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a28c9f1fdc57f9826c56b1bb335516259</anchor>
      <arglist>(Throwable t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THICK_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a663eca380d65c526a5dc4d4f37dc42f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THIN_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac30e35f8c8edd2ca1f2b26e03ddf6ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyDefaultConfiguration</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acbbd37d213419ddbc3ee9a577b86b895</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ProcessBuilder</type>
      <name>getExecCommand</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab7eb2f2d3c228ab7984b5a2df5cbe589</anchor>
      <arglist>(LFTest test)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GeneratorArguments</type>
      <name>getGeneratorArguments</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aab4725f7eda0dbd2a3162800dc6ab7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final void</type>
      <name>runTestsAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aff3ae7508377e27da65c5deaf4c31534</anchor>
      <arglist>(Target target, Predicate&lt; TestCategory &gt; selected, TestLevel level, Transformer transformer, Configurator configurator, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsFor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0b6820b95f35eff2cf460e32920bf015</anchor>
      <arglist>(List&lt; Target &gt; subset, String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsForTargets</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a1ebac2651a6dd6b8044d96eb597402d6</anchor>
      <arglist>(String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsSingleThreadedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acf8d6dd5602a2cd1575379119f5909e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isLinux</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aacafa215f9876c94aa4fa896429a5e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isMac</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a349bc196ce85c7b24927a28b0db751b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isWindows</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab4c75980dccb274f675d183201afde3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>printTestHeader</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac847b48162a5aa845f798a78465ff5fb</anchor>
      <arglist>(Target target, String description)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>JavaIoFileSystemAccess</type>
      <name>fileAccess</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ad9cea2a81034b6aba70301c2b728b5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LFGenerator</type>
      <name>generator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac2d0777be07d4c6f9590aadae07a3483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Provider&lt; ResourceSet &gt;</type>
      <name>resourceSetProvider</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>af44aa1c33c4a2f62a385ae18d2a09541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>TestRegistry</type>
      <name>testRegistry</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0267f19ce7ff14b1a410e2a39b7989c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>IResourceValidator</type>
      <name>validator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>afc6768563083e4403de7f0d1dd375f68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::runtime::CTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1runtime_1_1CTest.html</filename>
    <base>org.lflang.tests.RuntimeTest</base>
    <member kind="function">
      <type></type>
      <name>CTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CTest.html</anchorfile>
      <anchor>ab0f31640b1451bbe9cde13cc848ca260</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runAsFederated</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CTest.html</anchorfile>
      <anchor>a01202f04b1cc25a3a148eda5dacc4cdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runBasicTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CTest.html</anchorfile>
      <anchor>a5af7486e56a40a7c983c9cbb8546d063</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runConcurrentTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CTest.html</anchorfile>
      <anchor>a9ff09eda59379e0ca230021af57f3228</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runDockerFederatedTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CTest.html</anchorfile>
      <anchor>af1d6d00e0fb45d9cbde6177f50f81519</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runDockerTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CTest.html</anchorfile>
      <anchor>a37771c66887d11cfb7962ba4e8ccadf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runEnclaveTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CTest.html</anchorfile>
      <anchor>a39c1bf504d318ecfaceb1d6f47d29b2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runFederatedTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CTest.html</anchorfile>
      <anchor>a4dbba3ff54fa4c1084c264dd03de58a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runGenericsTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CTest.html</anchorfile>
      <anchor>a926ec8e4a14431a5f43b644f3fa59e5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runModalTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CTest.html</anchorfile>
      <anchor>a9d53f79a2041991958056082669078d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runMultiportTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CTest.html</anchorfile>
      <anchor>aa6615a17e1459067aec6b65d30b97a71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runNoInliningTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CTest.html</anchorfile>
      <anchor>a93e9f8ef51a2b01c230a9579a08adc6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runTargetSpecificTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CTest.html</anchorfile>
      <anchor>a1c104b6e687b2c6ffd72216f943229ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runWithThreadingOff</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CTest.html</anchorfile>
      <anchor>a7128f04d603a37520b124624303403c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>compatibleWithThreadingOff</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>aab6c0b1f08e0e439dd301d628a8548ae</anchor>
      <arglist>(TestCategory category)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TestLevel</type>
      <name>pathToLevel</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a9538c294f1910e14c75d49476ec1c159</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>runSingleTestAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab92abba6f078f75ef0933f7d3e2b2183</anchor>
      <arglist>(LFTest test, Class&lt;? extends TestBase &gt; testClass, TestLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stackTraceToString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a28c9f1fdc57f9826c56b1bb335516259</anchor>
      <arglist>(Throwable t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THICK_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a663eca380d65c526a5dc4d4f37dc42f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THIN_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac30e35f8c8edd2ca1f2b26e03ddf6ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyDefaultConfiguration</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acbbd37d213419ddbc3ee9a577b86b895</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ProcessBuilder</type>
      <name>getExecCommand</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab7eb2f2d3c228ab7984b5a2df5cbe589</anchor>
      <arglist>(LFTest test)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GeneratorArguments</type>
      <name>getGeneratorArguments</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aab4725f7eda0dbd2a3162800dc6ab7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final void</type>
      <name>runTestsAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aff3ae7508377e27da65c5deaf4c31534</anchor>
      <arglist>(Target target, Predicate&lt; TestCategory &gt; selected, TestLevel level, Transformer transformer, Configurator configurator, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsFor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0b6820b95f35eff2cf460e32920bf015</anchor>
      <arglist>(List&lt; Target &gt; subset, String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsForTargets</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a1ebac2651a6dd6b8044d96eb597402d6</anchor>
      <arglist>(String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsDockerOption</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CTest.html</anchorfile>
      <anchor>a11be4c822afda242cacf6ee2929a25c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsEnclaves</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CTest.html</anchorfile>
      <anchor>aa912b9fdfba9d513069b1a1a50261ef1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsFederatedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CTest.html</anchorfile>
      <anchor>a3f025ab5109d4181a88df82807263d5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsGenericTypes</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a016b8abdbd507ba5ce4cbb4bd493bdbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsSingleThreadedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CTest.html</anchorfile>
      <anchor>ab076cbaa50fb0b17e5d8e7b2e80740b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isLinux</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aacafa215f9876c94aa4fa896429a5e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isMac</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a349bc196ce85c7b24927a28b0db751b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isWindows</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab4c75980dccb274f675d183201afde3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>printTestHeader</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac847b48162a5aa845f798a78465ff5fb</anchor>
      <arglist>(Target target, String description)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>JavaIoFileSystemAccess</type>
      <name>fileAccess</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ad9cea2a81034b6aba70301c2b728b5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LFGenerator</type>
      <name>generator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac2d0777be07d4c6f9590aadae07a3483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Provider&lt; ResourceSet &gt;</type>
      <name>resourceSetProvider</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>af44aa1c33c4a2f62a385ae18d2a09541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>TestRegistry</type>
      <name>testRegistry</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0267f19ce7ff14b1a410e2a39b7989c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>IResourceValidator</type>
      <name>validator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>afc6768563083e4403de7f0d1dd375f68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::runtime::CVerifierTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1runtime_1_1CVerifierTest.html</filename>
    <base>org.lflang.tests.TestBase</base>
    <member kind="function">
      <type>void</type>
      <name>runVerifierTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CVerifierTest.html</anchorfile>
      <anchor>a10af105b170ac82a11442545d5be7046</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TestLevel</type>
      <name>pathToLevel</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a9538c294f1910e14c75d49476ec1c159</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>runSingleTestAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab92abba6f078f75ef0933f7d3e2b2183</anchor>
      <arglist>(LFTest test, Class&lt;? extends TestBase &gt; testClass, TestLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stackTraceToString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a28c9f1fdc57f9826c56b1bb335516259</anchor>
      <arglist>(Throwable t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THICK_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a663eca380d65c526a5dc4d4f37dc42f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THIN_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac30e35f8c8edd2ca1f2b26e03ddf6ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyDefaultConfiguration</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acbbd37d213419ddbc3ee9a577b86b895</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CVerifierTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CVerifierTest.html</anchorfile>
      <anchor>a11eca697ab2b1591f9da2a79fb3912f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ProcessBuilder</type>
      <name>getExecCommand</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab7eb2f2d3c228ab7984b5a2df5cbe589</anchor>
      <arglist>(LFTest test)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GeneratorArguments</type>
      <name>getGeneratorArguments</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aab4725f7eda0dbd2a3162800dc6ab7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final void</type>
      <name>runTestsAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aff3ae7508377e27da65c5deaf4c31534</anchor>
      <arglist>(Target target, Predicate&lt; TestCategory &gt; selected, TestLevel level, Transformer transformer, Configurator configurator, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsFor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0b6820b95f35eff2cf460e32920bf015</anchor>
      <arglist>(List&lt; Target &gt; subset, String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsForTargets</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a1ebac2651a6dd6b8044d96eb597402d6</anchor>
      <arglist>(String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsSingleThreadedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acf8d6dd5602a2cd1575379119f5909e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isLinux</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aacafa215f9876c94aa4fa896429a5e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isMac</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a349bc196ce85c7b24927a28b0db751b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isWindows</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab4c75980dccb274f675d183201afde3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>printTestHeader</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac847b48162a5aa845f798a78465ff5fb</anchor>
      <arglist>(Target target, String description)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>JavaIoFileSystemAccess</type>
      <name>fileAccess</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ad9cea2a81034b6aba70301c2b728b5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LFGenerator</type>
      <name>generator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac2d0777be07d4c6f9590aadae07a3483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Provider&lt; ResourceSet &gt;</type>
      <name>resourceSetProvider</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>af44aa1c33c4a2f62a385ae18d2a09541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>TestRegistry</type>
      <name>testRegistry</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0267f19ce7ff14b1a410e2a39b7989c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>IResourceValidator</type>
      <name>validator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>afc6768563083e4403de7f0d1dd375f68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::runtime::CZephyrTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1runtime_1_1CZephyrTest.html</filename>
    <base>org.lflang.tests.TestBase</base>
    <member kind="function">
      <type>void</type>
      <name>buildBasicTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CZephyrTest.html</anchorfile>
      <anchor>a8dcfc9b200c4ab406f55bfab87c2b00e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildConcurrentTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CZephyrTest.html</anchorfile>
      <anchor>af32443322dc0984802a88dc51e57be6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildZephyrBoardsTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CZephyrTest.html</anchorfile>
      <anchor>a9c466efcb2d3ac5dad99afc129614174</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildZephyrThreadedTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CZephyrTest.html</anchorfile>
      <anchor>a3f0ff8dc73333669bf603aba7e877edd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildZephyrUnthreadedTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CZephyrTest.html</anchorfile>
      <anchor>a7a84a3adfbaff235017262f59daa71a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CZephyrTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1CZephyrTest.html</anchorfile>
      <anchor>ae292ae83fe13c3f835169a9a5b292967</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TestLevel</type>
      <name>pathToLevel</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a9538c294f1910e14c75d49476ec1c159</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>runSingleTestAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab92abba6f078f75ef0933f7d3e2b2183</anchor>
      <arglist>(LFTest test, Class&lt;? extends TestBase &gt; testClass, TestLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stackTraceToString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a28c9f1fdc57f9826c56b1bb335516259</anchor>
      <arglist>(Throwable t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THICK_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a663eca380d65c526a5dc4d4f37dc42f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THIN_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac30e35f8c8edd2ca1f2b26e03ddf6ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyDefaultConfiguration</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acbbd37d213419ddbc3ee9a577b86b895</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ProcessBuilder</type>
      <name>getExecCommand</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab7eb2f2d3c228ab7984b5a2df5cbe589</anchor>
      <arglist>(LFTest test)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GeneratorArguments</type>
      <name>getGeneratorArguments</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aab4725f7eda0dbd2a3162800dc6ab7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final void</type>
      <name>runTestsAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aff3ae7508377e27da65c5deaf4c31534</anchor>
      <arglist>(Target target, Predicate&lt; TestCategory &gt; selected, TestLevel level, Transformer transformer, Configurator configurator, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsFor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0b6820b95f35eff2cf460e32920bf015</anchor>
      <arglist>(List&lt; Target &gt; subset, String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsForTargets</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a1ebac2651a6dd6b8044d96eb597402d6</anchor>
      <arglist>(String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsSingleThreadedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acf8d6dd5602a2cd1575379119f5909e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isLinux</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aacafa215f9876c94aa4fa896429a5e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isMac</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a349bc196ce85c7b24927a28b0db751b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isWindows</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab4c75980dccb274f675d183201afde3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>printTestHeader</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac847b48162a5aa845f798a78465ff5fb</anchor>
      <arglist>(Target target, String description)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>JavaIoFileSystemAccess</type>
      <name>fileAccess</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ad9cea2a81034b6aba70301c2b728b5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LFGenerator</type>
      <name>generator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac2d0777be07d4c6f9590aadae07a3483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Provider&lt; ResourceSet &gt;</type>
      <name>resourceSetProvider</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>af44aa1c33c4a2f62a385ae18d2a09541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>TestRegistry</type>
      <name>testRegistry</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0267f19ce7ff14b1a410e2a39b7989c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>IResourceValidator</type>
      <name>validator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>afc6768563083e4403de7f0d1dd375f68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::runtime::PythonTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1runtime_1_1PythonTest.html</filename>
    <base>org.lflang.tests.RuntimeTest</base>
    <member kind="function">
      <type></type>
      <name>PythonTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1PythonTest.html</anchorfile>
      <anchor>ab4c365de94d7f431f94d7515e6e89c62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runAsFederated</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1PythonTest.html</anchorfile>
      <anchor>a51f476a57dabbd54e6fa067a234288b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runBasicTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1PythonTest.html</anchorfile>
      <anchor>aca57a5c16d62f25b34f449155866f567</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runConcurrentTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1PythonTest.html</anchorfile>
      <anchor>ac24714b4dcd4e9f6586f3ad39079259d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runDockerFederatedTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1PythonTest.html</anchorfile>
      <anchor>ad4858f1c6b379a5fa78713c28f094d35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runDockerTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1PythonTest.html</anchorfile>
      <anchor>a14744dd966b56e9a3bcd046a8b343f04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runEnclaveTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a38341fb78c02a6b7f767be18683fc4ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runFederatedTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1PythonTest.html</anchorfile>
      <anchor>ad0d85e78679fef1a79e0e0b87dd9b0c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runGenericsTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a27377b800bc57a612c04de9868d27b67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runModalTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a3fb18e17b3116e83075cdbc478804fef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runMultiportTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1PythonTest.html</anchorfile>
      <anchor>a215eeb06ec17970edc483a065dd3d22d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runNoInliningTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a15dace8210c1f0d9c4dea63696ae7938</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runTargetSpecificTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1PythonTest.html</anchorfile>
      <anchor>a716b174ba6f3138bc0c9185df40a63da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runWithThreadingOff</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>aa761e2df9c6a3b152b105d29f8cf2d6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>compatibleWithThreadingOff</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>aab6c0b1f08e0e439dd301d628a8548ae</anchor>
      <arglist>(TestCategory category)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TestLevel</type>
      <name>pathToLevel</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a9538c294f1910e14c75d49476ec1c159</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>runSingleTestAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab92abba6f078f75ef0933f7d3e2b2183</anchor>
      <arglist>(LFTest test, Class&lt;? extends TestBase &gt; testClass, TestLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stackTraceToString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a28c9f1fdc57f9826c56b1bb335516259</anchor>
      <arglist>(Throwable t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THICK_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a663eca380d65c526a5dc4d4f37dc42f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THIN_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac30e35f8c8edd2ca1f2b26e03ddf6ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyDefaultConfiguration</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1PythonTest.html</anchorfile>
      <anchor>a27e0d99769e527d067e8abaf35395157</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ProcessBuilder</type>
      <name>getExecCommand</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab7eb2f2d3c228ab7984b5a2df5cbe589</anchor>
      <arglist>(LFTest test)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GeneratorArguments</type>
      <name>getGeneratorArguments</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aab4725f7eda0dbd2a3162800dc6ab7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final void</type>
      <name>runTestsAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aff3ae7508377e27da65c5deaf4c31534</anchor>
      <arglist>(Target target, Predicate&lt; TestCategory &gt; selected, TestLevel level, Transformer transformer, Configurator configurator, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsFor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0b6820b95f35eff2cf460e32920bf015</anchor>
      <arglist>(List&lt; Target &gt; subset, String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsForTargets</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a1ebac2651a6dd6b8044d96eb597402d6</anchor>
      <arglist>(String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsDockerOption</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1PythonTest.html</anchorfile>
      <anchor>aba333709912ae7ac58e77857b4fcf5ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsEnclaves</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a07cf00afc85e28b36eea44a4591e370b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsFederatedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1PythonTest.html</anchorfile>
      <anchor>aef0328c81356d400e3980c39c149c914</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsGenericTypes</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a016b8abdbd507ba5ce4cbb4bd493bdbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsSingleThreadedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1PythonTest.html</anchorfile>
      <anchor>acc6593214aecd6aa804c89e7f185a18b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isLinux</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aacafa215f9876c94aa4fa896429a5e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isMac</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a349bc196ce85c7b24927a28b0db751b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isWindows</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab4c75980dccb274f675d183201afde3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>printTestHeader</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac847b48162a5aa845f798a78465ff5fb</anchor>
      <arglist>(Target target, String description)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>JavaIoFileSystemAccess</type>
      <name>fileAccess</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ad9cea2a81034b6aba70301c2b728b5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LFGenerator</type>
      <name>generator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac2d0777be07d4c6f9590aadae07a3483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Provider&lt; ResourceSet &gt;</type>
      <name>resourceSetProvider</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>af44aa1c33c4a2f62a385ae18d2a09541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>TestRegistry</type>
      <name>testRegistry</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0267f19ce7ff14b1a410e2a39b7989c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>IResourceValidator</type>
      <name>validator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>afc6768563083e4403de7f0d1dd375f68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::runtime::RustTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1runtime_1_1RustTest.html</filename>
    <base>org.lflang.tests.RuntimeTest</base>
    <member kind="function">
      <type>void</type>
      <name>runAsFederated</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>ad3389138df5f2795c24443144941e0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runBasicTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>aeda9de32256914698b5eb20aacbfa88e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runConcurrentTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a54ba745c485e7b16e43bc00b431ab6bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runDockerFederatedTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a1c38e986f0dbc5879a169fbb1904bc0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runDockerTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>ad9413ff2e793fd6ab11b3cf66fcecbc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runEnclaveTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a38341fb78c02a6b7f767be18683fc4ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runFederatedTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>adb7cc4cb97c859aad645135d2395ae56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runGenericsTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1RustTest.html</anchorfile>
      <anchor>ad4c165b293b84442d04a095d75fdcecb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runModalTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a3fb18e17b3116e83075cdbc478804fef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runMultiportTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a8e49f1aa20ec390f7e8a3db488e74777</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runNoInliningTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a15dace8210c1f0d9c4dea63696ae7938</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runTargetSpecificTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>aaba6a6563a07769e3187dc8fb121ebbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runWithThreadingOff</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>aa761e2df9c6a3b152b105d29f8cf2d6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RustTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1RustTest.html</anchorfile>
      <anchor>a1b61cd4d0a0f2fec2454a26df63dbc46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>compatibleWithThreadingOff</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>aab6c0b1f08e0e439dd301d628a8548ae</anchor>
      <arglist>(TestCategory category)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TestLevel</type>
      <name>pathToLevel</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a9538c294f1910e14c75d49476ec1c159</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>runSingleTestAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab92abba6f078f75ef0933f7d3e2b2183</anchor>
      <arglist>(LFTest test, Class&lt;? extends TestBase &gt; testClass, TestLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stackTraceToString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a28c9f1fdc57f9826c56b1bb335516259</anchor>
      <arglist>(Throwable t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THICK_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a663eca380d65c526a5dc4d4f37dc42f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THIN_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac30e35f8c8edd2ca1f2b26e03ddf6ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyDefaultConfiguration</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acbbd37d213419ddbc3ee9a577b86b895</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ProcessBuilder</type>
      <name>getExecCommand</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab7eb2f2d3c228ab7984b5a2df5cbe589</anchor>
      <arglist>(LFTest test)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GeneratorArguments</type>
      <name>getGeneratorArguments</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aab4725f7eda0dbd2a3162800dc6ab7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final void</type>
      <name>runTestsAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aff3ae7508377e27da65c5deaf4c31534</anchor>
      <arglist>(Target target, Predicate&lt; TestCategory &gt; selected, TestLevel level, Transformer transformer, Configurator configurator, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsFor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0b6820b95f35eff2cf460e32920bf015</anchor>
      <arglist>(List&lt; Target &gt; subset, String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsForTargets</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a1ebac2651a6dd6b8044d96eb597402d6</anchor>
      <arglist>(String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsDockerOption</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a8ac7196674344bb76bca35abb0a3528d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsEnclaves</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a07cf00afc85e28b36eea44a4591e370b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsFederatedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a9a3e361c6cc6fe24b9b4a81e36817c4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsGenericTypes</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1RustTest.html</anchorfile>
      <anchor>a832712d1bf4aafc97b2156e622ef8424</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsSingleThreadedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acf8d6dd5602a2cd1575379119f5909e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isLinux</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aacafa215f9876c94aa4fa896429a5e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isMac</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a349bc196ce85c7b24927a28b0db751b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isWindows</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab4c75980dccb274f675d183201afde3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>printTestHeader</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac847b48162a5aa845f798a78465ff5fb</anchor>
      <arglist>(Target target, String description)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>JavaIoFileSystemAccess</type>
      <name>fileAccess</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ad9cea2a81034b6aba70301c2b728b5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LFGenerator</type>
      <name>generator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac2d0777be07d4c6f9590aadae07a3483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Provider&lt; ResourceSet &gt;</type>
      <name>resourceSetProvider</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>af44aa1c33c4a2f62a385ae18d2a09541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>TestRegistry</type>
      <name>testRegistry</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0267f19ce7ff14b1a410e2a39b7989c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>IResourceValidator</type>
      <name>validator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>afc6768563083e4403de7f0d1dd375f68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::runtime::TypeScriptTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1runtime_1_1TypeScriptTest.html</filename>
    <base>org.lflang.tests.RuntimeTest</base>
    <member kind="function">
      <type>void</type>
      <name>runAsFederated</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1TypeScriptTest.html</anchorfile>
      <anchor>ada6f9d3c1175f9ce755a0bbf08b7f232</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runBasicTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1TypeScriptTest.html</anchorfile>
      <anchor>a79ecfbd6749bcba72c5f074b43efbbd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runConcurrentTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1TypeScriptTest.html</anchorfile>
      <anchor>af4e08bfda079d358bbfd71555404eade</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runDockerFederatedTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1TypeScriptTest.html</anchorfile>
      <anchor>ab4b194e4d501387e63eaa81bd45c6793</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runDockerTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1TypeScriptTest.html</anchorfile>
      <anchor>a4893b34dc7c01e6d261c263f622191cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runEnclaveTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a38341fb78c02a6b7f767be18683fc4ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runFederatedTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1TypeScriptTest.html</anchorfile>
      <anchor>a11753bc36220409cadcb8705dedefee0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runGenericsTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a27377b800bc57a612c04de9868d27b67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runModalTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a3fb18e17b3116e83075cdbc478804fef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runMultiportTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1TypeScriptTest.html</anchorfile>
      <anchor>a98af2bb7f6b7051e48c22483b595d9a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runNoInliningTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a15dace8210c1f0d9c4dea63696ae7938</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runTargetSpecificTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1TypeScriptTest.html</anchorfile>
      <anchor>a8a6f6d75eb30dabb5e817acfaaace9d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runWithThreadingOff</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>aa761e2df9c6a3b152b105d29f8cf2d6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TypeScriptTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1TypeScriptTest.html</anchorfile>
      <anchor>a8b2a99a2539814edfae712ce05506a29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>compatibleWithThreadingOff</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>aab6c0b1f08e0e439dd301d628a8548ae</anchor>
      <arglist>(TestCategory category)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TestLevel</type>
      <name>pathToLevel</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a9538c294f1910e14c75d49476ec1c159</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>runSingleTestAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab92abba6f078f75ef0933f7d3e2b2183</anchor>
      <arglist>(LFTest test, Class&lt;? extends TestBase &gt; testClass, TestLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stackTraceToString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a28c9f1fdc57f9826c56b1bb335516259</anchor>
      <arglist>(Throwable t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THICK_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a663eca380d65c526a5dc4d4f37dc42f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THIN_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac30e35f8c8edd2ca1f2b26e03ddf6ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyDefaultConfiguration</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acbbd37d213419ddbc3ee9a577b86b895</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ProcessBuilder</type>
      <name>getExecCommand</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab7eb2f2d3c228ab7984b5a2df5cbe589</anchor>
      <arglist>(LFTest test)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GeneratorArguments</type>
      <name>getGeneratorArguments</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aab4725f7eda0dbd2a3162800dc6ab7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final void</type>
      <name>runTestsAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aff3ae7508377e27da65c5deaf4c31534</anchor>
      <arglist>(Target target, Predicate&lt; TestCategory &gt; selected, TestLevel level, Transformer transformer, Configurator configurator, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsFor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0b6820b95f35eff2cf460e32920bf015</anchor>
      <arglist>(List&lt; Target &gt; subset, String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsForTargets</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a1ebac2651a6dd6b8044d96eb597402d6</anchor>
      <arglist>(String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsDockerOption</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1TypeScriptTest.html</anchorfile>
      <anchor>aff6966ea97bcff20bbaa9024989397bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsEnclaves</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a07cf00afc85e28b36eea44a4591e370b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsFederatedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1runtime_1_1TypeScriptTest.html</anchorfile>
      <anchor>a838e2596e8cabf274de084960d2ddcc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsGenericTypes</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a016b8abdbd507ba5ce4cbb4bd493bdbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsSingleThreadedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acf8d6dd5602a2cd1575379119f5909e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isLinux</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aacafa215f9876c94aa4fa896429a5e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isMac</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a349bc196ce85c7b24927a28b0db751b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isWindows</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab4c75980dccb274f675d183201afde3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>printTestHeader</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac847b48162a5aa845f798a78465ff5fb</anchor>
      <arglist>(Target target, String description)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>JavaIoFileSystemAccess</type>
      <name>fileAccess</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ad9cea2a81034b6aba70301c2b728b5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LFGenerator</type>
      <name>generator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac2d0777be07d4c6f9590aadae07a3483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Provider&lt; ResourceSet &gt;</type>
      <name>resourceSetProvider</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>af44aa1c33c4a2f62a385ae18d2a09541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>TestRegistry</type>
      <name>testRegistry</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0267f19ce7ff14b1a410e2a39b7989c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>IResourceValidator</type>
      <name>validator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>afc6768563083e4403de7f0d1dd375f68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::RuntimeTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</filename>
    <base>org.lflang.tests.TestBase</base>
    <member kind="function">
      <type>void</type>
      <name>runAsFederated</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>ad3389138df5f2795c24443144941e0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runBasicTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>aeda9de32256914698b5eb20aacbfa88e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runConcurrentTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a54ba745c485e7b16e43bc00b431ab6bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runDockerFederatedTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a1c38e986f0dbc5879a169fbb1904bc0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runDockerTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>ad9413ff2e793fd6ab11b3cf66fcecbc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runEnclaveTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a38341fb78c02a6b7f767be18683fc4ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runFederatedTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>adb7cc4cb97c859aad645135d2395ae56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runGenericsTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a27377b800bc57a612c04de9868d27b67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runModalTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a3fb18e17b3116e83075cdbc478804fef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runMultiportTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a8e49f1aa20ec390f7e8a3db488e74777</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runNoInliningTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a15dace8210c1f0d9c4dea63696ae7938</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runTargetSpecificTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>aaba6a6563a07769e3187dc8fb121ebbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runWithThreadingOff</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>aa761e2df9c6a3b152b105d29f8cf2d6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>compatibleWithThreadingOff</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>aab6c0b1f08e0e439dd301d628a8548ae</anchor>
      <arglist>(TestCategory category)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TestLevel</type>
      <name>pathToLevel</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a9538c294f1910e14c75d49476ec1c159</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>runSingleTestAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab92abba6f078f75ef0933f7d3e2b2183</anchor>
      <arglist>(LFTest test, Class&lt;? extends TestBase &gt; testClass, TestLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stackTraceToString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a28c9f1fdc57f9826c56b1bb335516259</anchor>
      <arglist>(Throwable t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THICK_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a663eca380d65c526a5dc4d4f37dc42f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THIN_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac30e35f8c8edd2ca1f2b26e03ddf6ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyDefaultConfiguration</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acbbd37d213419ddbc3ee9a577b86b895</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ProcessBuilder</type>
      <name>getExecCommand</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab7eb2f2d3c228ab7984b5a2df5cbe589</anchor>
      <arglist>(LFTest test)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GeneratorArguments</type>
      <name>getGeneratorArguments</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aab4725f7eda0dbd2a3162800dc6ab7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final void</type>
      <name>runTestsAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aff3ae7508377e27da65c5deaf4c31534</anchor>
      <arglist>(Target target, Predicate&lt; TestCategory &gt; selected, TestLevel level, Transformer transformer, Configurator configurator, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsFor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0b6820b95f35eff2cf460e32920bf015</anchor>
      <arglist>(List&lt; Target &gt; subset, String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsForTargets</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a1ebac2651a6dd6b8044d96eb597402d6</anchor>
      <arglist>(String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RuntimeTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a71c7dae76aa33c3a78c987c4df420b5d</anchor>
      <arglist>(List&lt; Target &gt; targets)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RuntimeTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a0ab99fb403b6d9b1a50e51908c4838a2</anchor>
      <arglist>(Target target)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsDockerOption</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a8ac7196674344bb76bca35abb0a3528d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsEnclaves</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a07cf00afc85e28b36eea44a4591e370b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsFederatedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a9a3e361c6cc6fe24b9b4a81e36817c4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsGenericTypes</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1RuntimeTest.html</anchorfile>
      <anchor>a016b8abdbd507ba5ce4cbb4bd493bdbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsSingleThreadedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acf8d6dd5602a2cd1575379119f5909e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isLinux</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aacafa215f9876c94aa4fa896429a5e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isMac</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a349bc196ce85c7b24927a28b0db751b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isWindows</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab4c75980dccb274f675d183201afde3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>printTestHeader</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac847b48162a5aa845f798a78465ff5fb</anchor>
      <arglist>(Target target, String description)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>JavaIoFileSystemAccess</type>
      <name>fileAccess</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ad9cea2a81034b6aba70301c2b728b5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LFGenerator</type>
      <name>generator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac2d0777be07d4c6f9590aadae07a3483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Provider&lt; ResourceSet &gt;</type>
      <name>resourceSetProvider</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>af44aa1c33c4a2f62a385ae18d2a09541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>TestRegistry</type>
      <name>testRegistry</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0267f19ce7ff14b1a410e2a39b7989c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>IResourceValidator</type>
      <name>validator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>afc6768563083e4403de7f0d1dd375f68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::serialization::SerializationTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1serialization_1_1SerializationTest.html</filename>
    <base>org.lflang.tests.TestBase</base>
    <member kind="function">
      <type>void</type>
      <name>runSerializationTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1serialization_1_1SerializationTest.html</anchorfile>
      <anchor>a5bea727d556a6a6e0e415cffc2c441df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runSerializationTestsWithThreadingOff</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1serialization_1_1SerializationTest.html</anchorfile>
      <anchor>aa323a997505939f2886c1017cc375cfa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TestLevel</type>
      <name>pathToLevel</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a9538c294f1910e14c75d49476ec1c159</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>runSingleTestAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab92abba6f078f75ef0933f7d3e2b2183</anchor>
      <arglist>(LFTest test, Class&lt;? extends TestBase &gt; testClass, TestLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stackTraceToString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a28c9f1fdc57f9826c56b1bb335516259</anchor>
      <arglist>(Throwable t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THICK_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a663eca380d65c526a5dc4d4f37dc42f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THIN_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac30e35f8c8edd2ca1f2b26e03ddf6ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyDefaultConfiguration</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1serialization_1_1SerializationTest.html</anchorfile>
      <anchor>a3c02b63e01343db1960f7fb183b42bec</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ProcessBuilder</type>
      <name>getExecCommand</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab7eb2f2d3c228ab7984b5a2df5cbe589</anchor>
      <arglist>(LFTest test)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GeneratorArguments</type>
      <name>getGeneratorArguments</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aab4725f7eda0dbd2a3162800dc6ab7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final void</type>
      <name>runTestsAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aff3ae7508377e27da65c5deaf4c31534</anchor>
      <arglist>(Target target, Predicate&lt; TestCategory &gt; selected, TestLevel level, Transformer transformer, Configurator configurator, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsFor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0b6820b95f35eff2cf460e32920bf015</anchor>
      <arglist>(List&lt; Target &gt; subset, String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsForTargets</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a1ebac2651a6dd6b8044d96eb597402d6</anchor>
      <arglist>(String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>SerializationTest</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1serialization_1_1SerializationTest.html</anchorfile>
      <anchor>a5d64cdca47bbd7172b156dce77bc9e9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsSingleThreadedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acf8d6dd5602a2cd1575379119f5909e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isLinux</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aacafa215f9876c94aa4fa896429a5e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isMac</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a349bc196ce85c7b24927a28b0db751b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isWindows</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab4c75980dccb274f675d183201afde3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>printTestHeader</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac847b48162a5aa845f798a78465ff5fb</anchor>
      <arglist>(Target target, String description)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>JavaIoFileSystemAccess</type>
      <name>fileAccess</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ad9cea2a81034b6aba70301c2b728b5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LFGenerator</type>
      <name>generator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac2d0777be07d4c6f9590aadae07a3483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Provider&lt; ResourceSet &gt;</type>
      <name>resourceSetProvider</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>af44aa1c33c4a2f62a385ae18d2a09541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>TestRegistry</type>
      <name>testRegistry</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0267f19ce7ff14b1a410e2a39b7989c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>IResourceValidator</type>
      <name>validator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>afc6768563083e4403de7f0d1dd375f68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::TestBase</name>
    <filename>classorg_1_1lflang_1_1tests_1_1TestBase.html</filename>
    <base>org.lflang.tests.LfInjectedTestBase</base>
    <class kind="class">org::lflang::tests::TestBase::Message</class>
    <class kind="enum">org::lflang::tests::TestBase::TestLevel</class>
    <member kind="function" static="yes">
      <type>static TestLevel</type>
      <name>pathToLevel</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a9538c294f1910e14c75d49476ec1c159</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>runSingleTestAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab92abba6f078f75ef0933f7d3e2b2183</anchor>
      <arglist>(LFTest test, Class&lt;? extends TestBase &gt; testClass, TestLevel level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>stackTraceToString</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a28c9f1fdc57f9826c56b1bb335516259</anchor>
      <arglist>(Throwable t)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THICK_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a663eca380d65c526a5dc4d4f37dc42f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>THIN_LINE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac30e35f8c8edd2ca1f2b26e03ddf6ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyDefaultConfiguration</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acbbd37d213419ddbc3ee9a577b86b895</anchor>
      <arglist>(TargetConfig config)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ProcessBuilder</type>
      <name>getExecCommand</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab7eb2f2d3c228ab7984b5a2df5cbe589</anchor>
      <arglist>(LFTest test)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>GeneratorArguments</type>
      <name>getGeneratorArguments</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aab4725f7eda0dbd2a3162800dc6ab7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>final void</type>
      <name>runTestsAndPrintResults</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aff3ae7508377e27da65c5deaf4c31534</anchor>
      <arglist>(Target target, Predicate&lt; TestCategory &gt; selected, TestLevel level, Transformer transformer, Configurator configurator, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsFor</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0b6820b95f35eff2cf460e32920bf015</anchor>
      <arglist>(List&lt; Target &gt; subset, String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestsForTargets</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a1ebac2651a6dd6b8044d96eb597402d6</anchor>
      <arglist>(String description, Predicate&lt; TestCategory &gt; selected, Transformer transformer, Configurator configurator, TestLevel level, boolean copy)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>boolean</type>
      <name>supportsSingleThreadedExecution</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>acf8d6dd5602a2cd1575379119f5909e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TestBase</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a3390d5db2ff0c8a1e20c6950dfa52c01</anchor>
      <arglist>(List&lt; Target &gt; targets)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TestBase</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a22923f5f78d1bd1c9eb1e21a4274bc60</anchor>
      <arglist>(Target first)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isLinux</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>aacafa215f9876c94aa4fa896429a5e43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isMac</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a349bc196ce85c7b24927a28b0db751b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static boolean</type>
      <name>isWindows</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ab4c75980dccb274f675d183201afde3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>printTestHeader</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac847b48162a5aa845f798a78465ff5fb</anchor>
      <arglist>(Target target, String description)</arglist>
    </member>
    <member kind="variable" protection="package">
      <type>JavaIoFileSystemAccess</type>
      <name>fileAccess</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ad9cea2a81034b6aba70301c2b728b5cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>LFGenerator</type>
      <name>generator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>ac2d0777be07d4c6f9590aadae07a3483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>Provider&lt; ResourceSet &gt;</type>
      <name>resourceSetProvider</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>af44aa1c33c4a2f62a385ae18d2a09541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>TestRegistry</type>
      <name>testRegistry</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>a0267f19ce7ff14b1a410e2a39b7989c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="package">
      <type>IResourceValidator</type>
      <name>validator</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase.html</anchorfile>
      <anchor>afc6768563083e4403de7f0d1dd375f68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::TestBase::Message</name>
    <filename>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</filename>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_ARDUINO</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>a630668859b311450325aa77637b18703</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_AS_CCPP</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>abf168fd3ea3186888d43787cd0d9dc92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_AS_FEDERATED</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>a718df2a8e8a8285d68df5ea7606ca435</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_BASIC</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>a5c388de3502c71e9239eb31eb470f4a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_CONCURRENT</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>a0b7b4df3521a9c0e2b48ff63f11c9839</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_DOCKER</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>a4689528a8e7413e9085fa22262c0dfbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_DOCKER_FEDERATED</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>a7ec723c611df920007dd1adb38973d02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_ENCLAVE</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>adda7cea502bb4c007db662885ecb20e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_FEDERATED</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>ac9d74f72ef83aed1b9c7dfafb9c58604</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_GENERICS</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>abe5db1cab250e8a8117e8272aaab9ec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_MODAL</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>a81597b5baa005acc91994c632695fb22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_MULTIPORT</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>a440502aa62bb1b8ee4286bbcfb43d685</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_PATMOS</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>a4f2f4c1ec2dd33c61866d894585a0be7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_ROS2</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>a34f6ab1eb72ed03a3e077ca5bcde7bb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_SCHED_SWAPPING</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>ae50166556e7419f5b0317e9695f89a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_SERIALIZATION</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>a86222872af7b75071e60f5828617e48c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_SINGLE_THREADED</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>a7b14f44623f7ac8c11b39f11f0ec96db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_TARGET_SPECIFIC</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>aa957e2d482aae0e11bd589c8ec508b02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_VERIFIER</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>ab57972d6317b57f765f96e27cc6b9118</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>DESC_ZEPHYR</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>a68c908c9a135d87e40633bb53dee4ab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>NO_DOCKER_SUPPORT</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>aa0d8beea63a6eb9b82048e6936cf6139</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>NO_DOCKER_TEST_SUPPORT</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>a30e5c11fad945892e9889ce4b6250305</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>NO_ENCLAVE_SUPPORT</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>acfd09c519a2bee406ff2842e39a32c43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>NO_FEDERATION_SUPPORT</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>a435a7e61b314dc28e63d8cab4c681114</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>NO_SINGLE_THREADED_SUPPORT</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>aba3bd5b7d98439257469f5dcf602ae85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>NO_WINDOWS_SUPPORT</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestBase_1_1Message.html</anchorfile>
      <anchor>ae8542dcf2171503d52cb53b2c0d08bc7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::tests::TestBase::TestLevel</name>
    <filename>enumorg_1_1lflang_1_1tests_1_1TestBase_1_1TestLevel.html</filename>
    <member kind="variable">
      <type></type>
      <name>BUILD</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestBase_1_1TestLevel.html</anchorfile>
      <anchor>a3c4018abcc7ca37fe00ef8f848fec63f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>EXECUTION</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestBase_1_1TestLevel.html</anchorfile>
      <anchor>a18e0811ea4d9028a3c1052ae73fee0fb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::TestError</name>
    <filename>classorg_1_1lflang_1_1tests_1_1TestError.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>causeIsException</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestError.html</anchorfile>
      <anchor>a57610557aba710e11495ae91e40122b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getOriginalStackTrace</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestError.html</anchorfile>
      <anchor>a3eb977f6208309d095b069781558e71b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Result</type>
      <name>getResult</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestError.html</anchorfile>
      <anchor>a787813202ba920d9bb9e97ce6ad3c8b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TestError</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestError.html</anchorfile>
      <anchor>a95813238bf907efba5345e6c694613e0</anchor>
      <arglist>(Result result)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TestError</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestError.html</anchorfile>
      <anchor>a6beb7cf2300dec48bbd54718ca456e61</anchor>
      <arglist>(String errorMessage, Result result)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TestError</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestError.html</anchorfile>
      <anchor>a6c57e18b911f66824a4d98d913961f13</anchor>
      <arglist>(String errorMessage, Result result, Throwable exception)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::TestRegistry</name>
    <filename>classorg_1_1lflang_1_1tests_1_1TestRegistry.html</filename>
    <class kind="enum">org::lflang::tests::TestRegistry::TestCategory</class>
    <class kind="class">org::lflang::tests::TestRegistry::TestMap</class>
    <member kind="function">
      <type>String</type>
      <name>getCoverageReport</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestRegistry.html</anchorfile>
      <anchor>a5d866728abdf9e6bf0407ed1266046e3</anchor>
      <arglist>(Target target, TestCategory category)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; LFTest &gt;</type>
      <name>getIgnoredTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestRegistry.html</anchorfile>
      <anchor>adda86ca417770f8bcf23871a6bb562a3</anchor>
      <arglist>(Target target, TestCategory category)</arglist>
    </member>
    <member kind="function">
      <type>Set&lt; LFTest &gt;</type>
      <name>getRegisteredTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestRegistry.html</anchorfile>
      <anchor>a2188bcec6f79ec995cf32eddd97d70df</anchor>
      <arglist>(Target target, TestCategory category, boolean copy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestRegistry.html</anchorfile>
      <anchor>a5ccea4b9e5dfc8bd34b4f49ed9abc2ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final List&lt; String &gt;</type>
      <name>IGNORED_DIRECTORIES</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestRegistry.html</anchorfile>
      <anchor>a4b51814f98a69e3690668cdd714d43b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Path</type>
      <name>LF_REPO_PATH</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestRegistry.html</anchorfile>
      <anchor>a5bb46f18e5e53161fc75868cd9d151e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Path</type>
      <name>LF_TEST_PATH</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestRegistry.html</anchorfile>
      <anchor>aff11ef0981acc23f7e550dc52b8ebe1a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::tests::TestRegistry::TestCategory</name>
    <filename>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</filename>
    <member kind="function">
      <type>String</type>
      <name>getHeader</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>a5ac4d60fe696de12b0348ef830d453bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getPath</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>a736ab010ad255e93e3cb9efaad90e4a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TestCategory</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>acc2bcce45c9117d68afef71765cac74a</anchor>
      <arglist>(boolean isCommon, String path, TestLevel level)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ARDUINO</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>a2ab09c75c7fdee228705599a1564ab2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>BASIC</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>afd8477c89599f085080659496a3c2a63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>CONCURRENT</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>ae1602efcce79a7d25a759ea4974b0c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DOCKER</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>ac166dfb3875db0cdb4238071a6f3eeac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DOCKER_FEDERATED</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>ace4b30cd4db5537c9f80ac10b2e9d80d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ENCLAVE</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>af3e9cc963a217c389d1ee8a5489e7a3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FEDERATED</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>ad91680a166aefb9ec3a531936c80af16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FLEXPRET</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>a6e7e31138650497b277736fbf779e355</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>GENERICS</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>a5cad19e5a4e776dc0996aebba6dbebd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final boolean</type>
      <name>isCommon</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>a3d1b0739dcd6ce8917c5fc5ce1904021</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final TestLevel</type>
      <name>level</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>a7b6675f2712fa35e5abcc4e2d7b2146b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MODAL_MODELS</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>ae6df4abe839b894d2c655c168be5952f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MULTIPORT</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>a8e435c2b2f67b2a4bbae65228d19b2b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NO_INLINING</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>a4a73ffc5652ac54f9598aceda00c5d5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final String</type>
      <name>path</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>a920fd599b310738053c6ecf89bcf79bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PATMOS</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>a023375258bd01eace76b5177fb17079d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>PROPERTIES</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>ad1b45135a92dd0171f9f1a5a55961cef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SERIALIZATION</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>a4e4295d1928b4ed93da987d3d7c816dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>TARGET</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>a6289794da84dca4970dae93ce1adcbf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>VERIFIER</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>a496a090e79887062cdb41a341fc10f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ZEPHYR_BOARDS</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>aa78c10264b43d99d48aa81270d1723e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ZEPHYR_THREADED</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>aa3dcf6ad4a8b03c9f6ce9e5f19cb9688</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>ZEPHYR_UNTHREADED</name>
      <anchorfile>enumorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestCategory.html</anchorfile>
      <anchor>a28b74ca25525d0f21aa8d7ed4836c29a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::TestRegistry::TestMap</name>
    <filename>classorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestMap.html</filename>
    <member kind="function">
      <type>Set&lt; LFTest &gt;</type>
      <name>getTests</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestMap.html</anchorfile>
      <anchor>a2749eadc0145b48a20e14641deed7a4f</anchor>
      <arglist>(Target t, TestCategory c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TestMap</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestMap.html</anchorfile>
      <anchor>a3c9b191b54f1626de4a1e9e3b60c5e51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>final Map&lt; Target, Map&lt; TestCategory, Set&lt; LFTest &gt; &gt; &gt;</type>
      <name>map</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1TestRegistry_1_1TestMap.html</anchorfile>
      <anchor>a14ee83ba57bb54e741e3fc5e7cd9a38e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::Transformers</name>
    <filename>classorg_1_1lflang_1_1tests_1_1Transformers.html</filename>
    <class kind="interface">org::lflang::tests::Transformers::Transformer</class>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>noChanges</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1Transformers.html</anchorfile>
      <anchor>abe557e58894d3e6b299a1103f5740eca</anchor>
      <arglist>(Resource resource)</arglist>
    </member>
  </compound>
  <compound kind="interface">
    <name>org::lflang::tests::Transformers::Transformer</name>
    <filename>interfaceorg_1_1lflang_1_1tests_1_1Transformers_1_1Transformer.html</filename>
    <member kind="function">
      <type>boolean</type>
      <name>transform</name>
      <anchorfile>interfaceorg_1_1lflang_1_1tests_1_1Transformers_1_1Transformer.html</anchorfile>
      <anchor>a854a5d7365700677a6985484151b35cc</anchor>
      <arglist>(Resource resource)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::tests::util::StringUtilTest</name>
    <filename>classorg_1_1lflang_1_1tests_1_1util_1_1StringUtilTest.html</filename>
    <member kind="function">
      <type>void</type>
      <name>testCamelToSnakeCase</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1util_1_1StringUtilTest.html</anchorfile>
      <anchor>a3dac2b18ddbe3420f76ff607f053f3bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testRemoveQuotes</name>
      <anchorfile>classorg_1_1lflang_1_1tests_1_1util_1_1StringUtilTest.html</anchorfile>
      <anchor>af6ab6156cbe53bbc00ddcea17068957e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::TimeUnit</name>
    <filename>enumorg_1_1lflang_1_1TimeUnit.html</filename>
    <member kind="function">
      <type>String</type>
      <name>getCanonicalName</name>
      <anchorfile>enumorg_1_1lflang_1_1TimeUnit.html</anchorfile>
      <anchor>a6adbf99de329a4baff886bd3328703e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>hasAlias</name>
      <anchorfile>enumorg_1_1lflang_1_1TimeUnit.html</anchorfile>
      <anchor>a718f1b5cdb649b473e3c2d88b7c5cd5b</anchor>
      <arglist>(String name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeUnit</name>
      <anchorfile>enumorg_1_1lflang_1_1TimeUnit.html</anchorfile>
      <anchor>a2ceddb80d32e1651a45a5294fdb8f9e9</anchor>
      <arglist>(String canonicalName, String siName, String... aliases)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>enumorg_1_1lflang_1_1TimeUnit.html</anchorfile>
      <anchor>afdd4da106ad8b883a878ea186053203c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimeUnit</type>
      <name>fromName</name>
      <anchorfile>enumorg_1_1lflang_1_1TimeUnit.html</anchorfile>
      <anchor>a37d735886dd6d4e2bbb5f4d3933cce12</anchor>
      <arglist>(String name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isValidUnit</name>
      <anchorfile>enumorg_1_1lflang_1_1TimeUnit.html</anchorfile>
      <anchor>a47b604fb75087113bd53a021f11b1f7a</anchor>
      <arglist>(String name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; String &gt;</type>
      <name>list</name>
      <anchorfile>enumorg_1_1lflang_1_1TimeUnit.html</anchorfile>
      <anchor>ac146fea972a11784e4c4bb95434a01e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>DAY</name>
      <anchorfile>enumorg_1_1lflang_1_1TimeUnit.html</anchorfile>
      <anchor>aa615232fbbd2595277da3546a07af58f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>HOUR</name>
      <anchorfile>enumorg_1_1lflang_1_1TimeUnit.html</anchorfile>
      <anchor>adb2da5af557226b152e78a04a25549de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MICRO</name>
      <anchorfile>enumorg_1_1lflang_1_1TimeUnit.html</anchorfile>
      <anchor>a7e916b0d93a24a38257cdda4bd4f02c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MILLI</name>
      <anchorfile>enumorg_1_1lflang_1_1TimeUnit.html</anchorfile>
      <anchor>ac5c4b641f35a5a662a5d2130f490906d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>MINUTE</name>
      <anchorfile>enumorg_1_1lflang_1_1TimeUnit.html</anchorfile>
      <anchor>ac84e23f1aa3caf9f6af0afc9f118d223</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>NANO</name>
      <anchorfile>enumorg_1_1lflang_1_1TimeUnit.html</anchorfile>
      <anchor>a61982bd53c876c65fa6c082b6ce08090</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>SECOND</name>
      <anchorfile>enumorg_1_1lflang_1_1TimeUnit.html</anchorfile>
      <anchor>abc3deb3a6984054ea81bb2843bf64454</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>WEEK</name>
      <anchorfile>enumorg_1_1lflang_1_1TimeUnit.html</anchorfile>
      <anchor>a8a139d13b63c5ab2fc6d7a9441d07259</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::TimeValue</name>
    <filename>classorg_1_1lflang_1_1TimeValue.html</filename>
    <member kind="function">
      <type>TimeValue</type>
      <name>add</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>a9fd50f751c5607f42b03034a0c10a87b</anchor>
      <arglist>(TimeValue b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compareTo</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>ad6d772ddda3490c8c769f2cc9ab853a8</anchor>
      <arglist>(TimeValue o)</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>equals</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>a02b8511eb451900c84af999b8568296b</anchor>
      <arglist>(Object t1)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>getMagnitude</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>a6280ed501275800b6d8aa1e9550aa097</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TimeUnit</type>
      <name>getUnit</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>aa0765c7bae3e884df3381995356340f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>ac2e910b18f297c632758d797e1183c76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>isEarlierThan</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>a43f6049725657cd127245eb7d375f4d2</anchor>
      <arglist>(TimeValue other)</arglist>
    </member>
    <member kind="function">
      <type>TimeValue</type>
      <name>subtract</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>a10dccc641698ff0da9aa15b9a1926116</anchor>
      <arglist>(TimeValue b)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeValue</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>a6b2c94c0946ee7cc84ddc12350541d81</anchor>
      <arglist>(long time, TimeUnit unit)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>toNanoSeconds</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>aec673e98abdf2b5806042f7b2b6394f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>a0d919c389659be0dc2e4db26516096a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>compare</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>aecdf0c81a77d274f309dd60fee1debc6</anchor>
      <arglist>(TimeValue t1, TimeValue t2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimeValue</type>
      <name>fromNanoSeconds</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>afb327e924a8091da0a592bcfe771a1fe</anchor>
      <arglist>(long ns)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimeValue</type>
      <name>max</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>ac6e0772065001eea65a89328ee30476d</anchor>
      <arglist>(TimeValue t1, TimeValue t2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimeValue</type>
      <name>min</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>af25856c1cfd688c8adf7b6e2f9833732</anchor>
      <arglist>(TimeValue t1, TimeValue t2)</arglist>
    </member>
    <member kind="variable">
      <type>final long</type>
      <name>time</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>ab986bf05da6c50e3ef23a88ae2f7ab12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>final TimeUnit</type>
      <name>unit</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>ad7cbbfe777c461913202b2637ce3b11a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final TimeValue</type>
      <name>FOREVER</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>a5e82b8ef45dbb2221d78cac2aa0c6c8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final long</type>
      <name>MAX_LONG_DEADLINE</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>a9b9f1af3b699bd856424450e18ff8a39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final TimeValue</type>
      <name>MAX_VALUE</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>a1299fc611e3d5417b71f7bfbe28020ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final TimeValue</type>
      <name>MIN_VALUE</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>ade0b6b8541858570f13a00507106461e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final TimeValue</type>
      <name>NEVER</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>ac27015d313372f22cb34d985cdb57d6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final TimeValue</type>
      <name>ZERO</name>
      <anchorfile>classorg_1_1lflang_1_1TimeValue.html</anchorfile>
      <anchor>a68c759a054b43a1e14ce0a035571bb29</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::util::ArduinoUtil</name>
    <filename>classorg_1_1lflang_1_1util_1_1ArduinoUtil.html</filename>
    <member kind="function">
      <type></type>
      <name>ArduinoUtil</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1ArduinoUtil.html</anchorfile>
      <anchor>a82cee16a77ac543ec277e24ed1c26ffa</anchor>
      <arglist>(LFGeneratorContext context, GeneratorCommandFactory commandFactory, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildArduino</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1ArduinoUtil.html</anchorfile>
      <anchor>a860910885d5cba430ed86b9a9721ede1</anchor>
      <arglist>(FileConfig fileConfig, TargetConfig targetConfig)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::util::Averager</name>
    <filename>classorg_1_1lflang_1_1util_1_1Averager.html</filename>
    <member kind="function">
      <type></type>
      <name>Averager</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1Averager.html</anchorfile>
      <anchor>a624e0369ae8a2d9b94c8293ba711c018</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>synchronized void</type>
      <name>report</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1Averager.html</anchorfile>
      <anchor>a728d369b53b60a1e112e9a41ab11cf30</anchor>
      <arglist>(int id, int x, Procedure1&lt; Integer &gt; callback)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::util::CollectionUtil</name>
    <filename>classorg_1_1lflang_1_1util_1_1CollectionUtil.html</filename>
    <member kind="function" static="yes">
      <type>static&lt; K, V &gt; Map&lt; K, V &gt;</type>
      <name>compute</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1CollectionUtil.html</anchorfile>
      <anchor>aeeeb30b50fe1ce7d4ec71f8c4bd644c9</anchor>
      <arglist>(Map&lt; K, V &gt; map, K k, BiFunction&lt; K, V, V &gt; computation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static&lt; T &gt; Set&lt; T &gt;</type>
      <name>copy</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1CollectionUtil.html</anchorfile>
      <anchor>a950d75ae1b7c196b4a032b65967b0a59</anchor>
      <arglist>(Set&lt; T &gt; set)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static&lt; T &gt; Set&lt; T &gt;</type>
      <name>immutableSetOf</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1CollectionUtil.html</anchorfile>
      <anchor>a333ce15b2b3cec2285cc9f5e130820b1</anchor>
      <arglist>(T first, T... rest)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static&lt; T &gt; Set&lt; T &gt;</type>
      <name>minus</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1CollectionUtil.html</anchorfile>
      <anchor>a700ace9db8bff00f377a8ac1cd2a0348</anchor>
      <arglist>(Set&lt; T &gt; set, T eltToRemove)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static&lt; K, V &gt; Map&lt; K, V &gt;</type>
      <name>plus</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1CollectionUtil.html</anchorfile>
      <anchor>a9473319b01dfea5a485972678ded6158</anchor>
      <arglist>(Map&lt; K, V &gt; map, K k, V v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static&lt; T &gt; Set&lt; T &gt;</type>
      <name>plus</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1CollectionUtil.html</anchorfile>
      <anchor>ac2805303149ce3fbf37f22ad3891ac5c</anchor>
      <arglist>(Set&lt; T &gt; set, T t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static&lt; K, V &gt; void</type>
      <name>removeFromValues</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1CollectionUtil.html</anchorfile>
      <anchor>a0cc0a9c2dbb47e68652812c5d8e4b365</anchor>
      <arglist>(Map&lt; K, Set&lt; V &gt; &gt; map, V valueToRemove)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::util::FileUtil</name>
    <filename>classorg_1_1lflang_1_1util_1_1FileUtil.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>arduinoDeleteHelper</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a6d88eedffe4c8d070a804a9775bff26f</anchor>
      <arglist>(Path srcGenPath, boolean threadingOn)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>copyDirectory</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>ab322ff58ce50274e78a3de054fa54b25</anchor>
      <arglist>(final Path srcDir, final Path dstDir, final boolean skipIfUnchanged)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>copyDirectoryContents</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>ab7c6a9eb904dc97c8b026a0266862d4f</anchor>
      <arglist>(final Path srcDir, final Path dstDir)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>copyDirectoryContents</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a56606550002bdc3c0e6d28a226c1976a</anchor>
      <arglist>(final Path srcDir, final Path dstDir, final boolean skipIfUnchanged)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>copyFile</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a4b0709b591a00c32d3e1fb20a7c2fed7</anchor>
      <arglist>(Path srcFile, Path dstFile)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>copyFile</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a860ff96f3fa279ee3ba73c8f79324ec8</anchor>
      <arglist>(Path srcFile, Path dstFile, boolean skipIfUnchanged)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>copyFileFromClassPath</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a5eab9e9bedca9c713650cb0e46bee110</anchor>
      <arglist>(final String entry, final Path dstDir, final boolean skipIfUnchanged)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>copyFilesOrDirectories</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>af0e7649fca3cfc19a6e8742d095b45fc</anchor>
      <arglist>(List&lt; String &gt; entries, Path dstDir, FileConfig fileConfig, MessageReporter messageReporter, boolean fileEntriesOnly)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>copyFromClassPath</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a8c73e28dcb3145a58b204e5dce7bc2b8</anchor>
      <arglist>(final String entry, final Path dstDir, final boolean skipIfUnchanged, final boolean contentsOnly)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>copyFromFileSystem</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a861918d2234e65ffad581a3382d1a018</anchor>
      <arglist>(Path entry, Path dstDir, boolean contentsOnly)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>createDirectoryIfDoesNotExist</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a2449f1004c8d1dc4ca43c8c8b9df8961</anchor>
      <arglist>(File dir)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>delete</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a7f44d0711c0280ab49ddf00fdbd3341f</anchor>
      <arglist>(Path fileOrDirectory)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deleteDirectory</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>ac2e9e17c1db8a6f9c4ea663132f15e24</anchor>
      <arglist>(Path dir)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Path</type>
      <name>findAndCopyFile</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a0b0ee7cd60fe00133924b84518e8ff94</anchor>
      <arglist>(String file, Path dstDir, FileConfig fileConfig)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Path</type>
      <name>findInPackage</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a57f3123421c7a6f4be822136a87a946b</anchor>
      <arglist>(Path fileOrDirectory, FileConfig fileConfig)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IResource</type>
      <name>getIResource</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a887c33e5fb6c9e662cf9bc0b91cc63c6</anchor>
      <arglist>(java.net.URI uri)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IResource</type>
      <name>getIResource</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a3e6c1d6e0b8709c65e7b3aa7aa101a9c</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IResource</type>
      <name>getIResource</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a7f50ded388cd024495eff5861f4db8b4</anchor>
      <arglist>(Resource r)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Path</type>
      <name>getRelativePath</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>ae15513c0e370c98774a77aaaa0b357de</anchor>
      <arglist>(Resource source, Resource target)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Resource</type>
      <name>getResourceFromClassPath</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a557e0e9b9493735989179747a008b797</anchor>
      <arglist>(ResourceSet resourceSet, final String entry)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List&lt; Path &gt;</type>
      <name>globFilesEndsWith</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>aae30322e3d9eb5e16211661d2a3252ad</anchor>
      <arglist>(Path currentDir, String str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isCFile</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a7faa067b53cbb652cc1079eaea84f922</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>isSame</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a736d463131e0ee3e3f400e78331a4b2e</anchor>
      <arglist>(String text, Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static java.net.URI</type>
      <name>locateFile</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a17bedbb3c09453d7503281d520db9a6e</anchor>
      <arglist>(String path, Resource resource)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>nameWithoutExtension</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a05c4ff7504fe1583182a2472f16cc1e5</anchor>
      <arglist>(Path file)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>nameWithoutExtension</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a6e9c93ab17d1903ae6693ff555b93c6e</anchor>
      <arglist>(Resource r)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>relativeIncludeHelper</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a8aaedf8730ff817d1ef7286c741e6b7a</anchor>
      <arglist>(Path dir, Path includePath, MessageReporter messageReporter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IPath</type>
      <name>toIPath</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>ad75e82436a78a5eeb78f10b4411fd67c</anchor>
      <arglist>(URI uri)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Path</type>
      <name>toPath</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a814506da291a7ea5772512aee53ad585</anchor>
      <arglist>(Resource resource)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Path</type>
      <name>toPath</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a878c4ac34fe551dda2eaed9f6ef0975c</anchor>
      <arglist>(URI uri)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>toUnixString</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>ac67b1d7e5eb937a547aa018bd0bc4b65</anchor>
      <arglist>(Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>writeToFile</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>a2c205af1284a1282b5f62a4e27255b75</anchor>
      <arglist>(CharSequence text, Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>writeToFile</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>acadb169f77ae18217378c43f670b488b</anchor>
      <arglist>(String text, Path path)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>writeToFile</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FileUtil.html</anchorfile>
      <anchor>ab81d44054d03dfda03f16ebba88c904a</anchor>
      <arglist>(String text, Path path, boolean skipIfUnchanged)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::util::FlexPRETUtil</name>
    <filename>classorg_1_1lflang_1_1util_1_1FlexPRETUtil.html</filename>
    <member kind="function">
      <type>void</type>
      <name>flashTarget</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FlexPRETUtil.html</anchorfile>
      <anchor>a40133dfc5cbfd7619768845254227dec</anchor>
      <arglist>(FileConfig fileConfig, TargetConfig config)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FlexPRETUtil</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1FlexPRETUtil.html</anchorfile>
      <anchor>a6634991212e644d02f430411fbc963ee</anchor>
      <arglist>(LFGeneratorContext context, GeneratorCommandFactory commandFactory, MessageReporter messageReporter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::util::ImportUtil</name>
    <filename>classorg_1_1lflang_1_1util_1_1ImportUtil.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>buildPackageURI</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1ImportUtil.html</anchorfile>
      <anchor>adeb061a9e1a89c88e6e2946aa07cc451</anchor>
      <arglist>(String uriStr, Resource resource)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Path</type>
      <name>buildPackageURIfromSrc</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1ImportUtil.html</anchorfile>
      <anchor>a0a06e73ab0b162baba36d5e9625b9787</anchor>
      <arglist>(String uriStr, String root)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::util::IteratorUtil</name>
    <filename>classorg_1_1lflang_1_1util_1_1IteratorUtil.html</filename>
    <member kind="function" static="yes">
      <type>static&lt; T, S &gt; Stream&lt; S &gt;</type>
      <name>asFilteredStream</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1IteratorUtil.html</anchorfile>
      <anchor>a329669ac3c49fa8ee57b300893a7d877</anchor>
      <arglist>(Iterator&lt; T &gt; iterator, Class&lt; S &gt; cls)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static&lt; T &gt; Iterable&lt; T &gt;</type>
      <name>asIterable</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1IteratorUtil.html</anchorfile>
      <anchor>adebba8f6d867e6aa506b10212c07889b</anchor>
      <arglist>(Iterator&lt; T &gt; iterator)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static&lt; T &gt; Stream&lt; T &gt;</type>
      <name>asStream</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1IteratorUtil.html</anchorfile>
      <anchor>a4f6995de37e60181445017d31ba046b9</anchor>
      <arglist>(Iterator&lt; T &gt; iterator)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static&lt; T &gt; Stream&lt; T &gt;</type>
      <name>asStream</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1IteratorUtil.html</anchorfile>
      <anchor>abca3158feacbc22d6b5d5a2bd5f4fabd</anchor>
      <arglist>(Iterator&lt; T &gt; iterator, boolean parallel)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::util::LFCommand</name>
    <filename>classorg_1_1lflang_1_1util_1_1LFCommand.html</filename>
    <member kind="function">
      <type>List&lt; String &gt;</type>
      <name>command</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>a571d2673f9db4ceaf2f9f85fb00cfa0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>File</type>
      <name>directory</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>a2c314d37c769b7ab3ebfc965f23e8af0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getErrors</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>a2947d3e055d8a655133790bcae1b2171</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>getOutput</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>ace68541e322bdbb9cb2d0b6509142dee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceEnvironmentVariable</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>a05f298cce5c428161c45e1b03463c915</anchor>
      <arglist>(String variableName, String value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>ad5bb2b3a3001401bd904127159eb8834</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>ad956044acb7bcde6bc80032800735237</anchor>
      <arglist>(CancelIndicator cancelIndicator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnvironmentVariable</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>a69818aa60745a4b2ef3c27bea33cf415</anchor>
      <arglist>(String variableName, String value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnvironmentVariables</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>af7eee016c646e77eb46d5672efabba0b</anchor>
      <arglist>(Map&lt; String, String &gt; variables)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setQuiet</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>acd535008b5378c7f5dc6726f58876703</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVerbose</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>a425cf9a8ee7c673f74ddcb0652301eeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>toString</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>ab286a48b9066631e3e7c06e9afe45806</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LFCommand</type>
      <name>get</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>a37399e869f4598852c3281b4c015db0a</anchor>
      <arglist>(final String cmd, final List&lt; String &gt; args)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LFCommand</type>
      <name>get</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>a28e59fc861beb707adcab0e6e4d72c70</anchor>
      <arglist>(final String cmd, final List&lt; String &gt; args, boolean quiet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static LFCommand</type>
      <name>get</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>a55a42c5d364d38ee85a7f1ec1232f315</anchor>
      <arglist>(final String cmd, final List&lt; String &gt; args, boolean quiet, Path dir)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LFCommand</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>aecc5ed646e1711b223887ba88ac254ea</anchor>
      <arglist>(ProcessBuilder pb, boolean quiet)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boolean</type>
      <name>didRun</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>adf96842e352c3d75dd41bbea2b273f19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ByteArrayOutputStream</type>
      <name>errors</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>a2fef88136982f460e73d8dde29e8b846</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ByteArrayOutputStream</type>
      <name>output</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>ae6d54ac9e11495a28bf0ed4d97df12e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ProcessBuilder</type>
      <name>processBuilder</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>ae4532bf02e7920a6b5820344fb2610e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>boolean</type>
      <name>quiet</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1LFCommand.html</anchorfile>
      <anchor>a5a6f440361aa565a16c9070e5c47a29b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::util::StringUtil</name>
    <filename>classorg_1_1lflang_1_1util_1_1StringUtil.html</filename>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>addDoubleQuotes</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1StringUtil.html</anchorfile>
      <anchor>a56a1317373f633f7d5c53a78d7b6182f</anchor>
      <arglist>(String str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>camelToSnakeCase</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1StringUtil.html</anchorfile>
      <anchor>a4b7797232921494572f5733754b68542</anchor>
      <arglist>(String str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static boolean</type>
      <name>hasQuotes</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1StringUtil.html</anchorfile>
      <anchor>aef91124f55ccaebbf0d9e0b83f8e1769</anchor>
      <arglist>(String str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static&lt; T &gt; String</type>
      <name>joinObjects</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1StringUtil.html</anchorfile>
      <anchor>a3dbdc05eb899bdcdc0961e0bb83a14d4</anchor>
      <arglist>(List&lt; T &gt; things, String delimiter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>normalizeEol</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1StringUtil.html</anchorfile>
      <anchor>a1fb5ff69ee05f189822ff0ade05c7a44</anchor>
      <arglist>(String s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>removeQuotes</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1StringUtil.html</anchorfile>
      <anchor>aeb10a8a2615ec580a64a2ad660754d0c</anchor>
      <arglist>(String str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>trimCodeBlock</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1StringUtil.html</anchorfile>
      <anchor>ad0f8082bdf62883f70aa67739b0f7b58</anchor>
      <arglist>(String code, int firstLineToConsider)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::util::TargetResourceNotFoundException</name>
    <filename>classorg_1_1lflang_1_1util_1_1TargetResourceNotFoundException.html</filename>
    <member kind="function">
      <type></type>
      <name>TargetResourceNotFoundException</name>
      <anchorfile>classorg_1_1lflang_1_1util_1_1TargetResourceNotFoundException.html</anchorfile>
      <anchor>a4b9cb0c2e8d69b46727f7c2f008f3525</anchor>
      <arglist>(String resourcePath)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::validation::AttributeSpec</name>
    <filename>classorg_1_1lflang_1_1validation_1_1AttributeSpec.html</filename>
    <class kind="enum">org::lflang::validation::AttributeSpec::AttrParamType</class>
    <member kind="function">
      <type></type>
      <name>AttributeSpec</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1AttributeSpec.html</anchorfile>
      <anchor>aeee4e274e571e3470bb3b1d5b927fe1d</anchor>
      <arglist>(List&lt; AttrParamSpec &gt; params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1AttributeSpec.html</anchorfile>
      <anchor>ab539230b58d0b5765deb1eea50ccafb0</anchor>
      <arglist>(LFValidator validator, Attribute attr)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final Map&lt; String, AttributeSpec &gt;</type>
      <name>ATTRIBUTE_SPECS_BY_NAME</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1AttributeSpec.html</anchorfile>
      <anchor>a5f7cf0efe5362b07249b6a0472555e10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>EACH_ATTR</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1AttributeSpec.html</anchorfile>
      <anchor>a9be538229f5b77d45cdfbbb5920536c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>OPTION_ATTR</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1AttributeSpec.html</anchorfile>
      <anchor>a61d8d31dad6669397cd834ddd1703a90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>VALUE_ATTR</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1AttributeSpec.html</anchorfile>
      <anchor>abfc9ba315683b32c9a92ec3a0117d3d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static final String</type>
      <name>WORKERS_ATTR</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1AttributeSpec.html</anchorfile>
      <anchor>a874891be6aa3b386b4deef3d54694946</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="package">
      <type>record</type>
      <name>AttrParamSpec</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1AttributeSpec.html</anchorfile>
      <anchor>ac3efa641d7e599e7c37d660f50247b44</anchor>
      <arglist>(String name, AttrParamType type, boolean isOptional)</arglist>
    </member>
    <member kind="function" protection="package" static="yes">
      <type></type>
      <name>[static initializer]</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1AttributeSpec.html</anchorfile>
      <anchor>a0827d0a9a51580debf72c6d5375c0c4f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="enum">
    <name>org::lflang::validation::AttributeSpec::AttrParamType</name>
    <filename>enumorg_1_1lflang_1_1validation_1_1AttributeSpec_1_1AttrParamType.html</filename>
    <member kind="variable">
      <type></type>
      <name>BOOLEAN</name>
      <anchorfile>enumorg_1_1lflang_1_1validation_1_1AttributeSpec_1_1AttrParamType.html</anchorfile>
      <anchor>afd5d10b4ce1f591cdf0bc8a525d283b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>FLOAT</name>
      <anchorfile>enumorg_1_1lflang_1_1validation_1_1AttributeSpec_1_1AttrParamType.html</anchorfile>
      <anchor>a97f19a63297b973c67322d0e061eb01a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>INT</name>
      <anchorfile>enumorg_1_1lflang_1_1validation_1_1AttributeSpec_1_1AttrParamType.html</anchorfile>
      <anchor>a0572d8204fa8ecf1a02e2f0f0cbf8c00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>STRING</name>
      <anchorfile>enumorg_1_1lflang_1_1validation_1_1AttributeSpec_1_1AttrParamType.html</anchorfile>
      <anchor>a5e6c6e3e4032d8060b3c7a39ccceee8b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::validation::BaseLFValidator</name>
    <filename>classorg_1_1lflang_1_1validation_1_1BaseLFValidator.html</filename>
    <class kind="class">org::lflang::validation::BaseLFValidator::ValidatorStateAccess</class>
    <member kind="function">
      <type>void</type>
      <name>checkTime</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1BaseLFValidator.html</anchorfile>
      <anchor>aed6d03ebdf0bae7bd4baee31873a8ded</anchor>
      <arglist>(Time time)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::validation::BaseLFValidator::ValidatorStateAccess</name>
    <filename>classorg_1_1lflang_1_1validation_1_1BaseLFValidator_1_1ValidatorStateAccess.html</filename>
    <member kind="function">
      <type>DiagnosticChain</type>
      <name>getChain</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1BaseLFValidator_1_1ValidatorStateAccess.html</anchorfile>
      <anchor>ac9703ec9dd900d51aea6fbe1c092150a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CheckMode</type>
      <name>getCheckMode</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1BaseLFValidator_1_1ValidatorStateAccess.html</anchorfile>
      <anchor>af99ac724c87f172ecc0b369cfc573edf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Map&lt; Object, Object &gt;</type>
      <name>getContext</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1BaseLFValidator_1_1ValidatorStateAccess.html</anchorfile>
      <anchor>a5186e5836246ae2e87f371a6c9c7be96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Method</type>
      <name>getCurrentMethod</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1BaseLFValidator_1_1ValidatorStateAccess.html</anchorfile>
      <anchor>ad2ebdd4e4405865095f53c6d673ea211</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EObject</type>
      <name>getCurrentObject</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1BaseLFValidator_1_1ValidatorStateAccess.html</anchorfile>
      <anchor>a81dd103ef63ee3a49537d0a732726b1a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::validation::LFNamesAreUniqueValidationHelper</name>
    <filename>classorg_1_1lflang_1_1validation_1_1LFNamesAreUniqueValidationHelper.html</filename>
    <member kind="function">
      <type>EClass</type>
      <name>getAssociatedClusterType</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFNamesAreUniqueValidationHelper.html</anchorfile>
      <anchor>a4f91fe007b5d262c5bbb17c791bf4b5e</anchor>
      <arglist>(EClass eClass)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkDescriptionForDuplicatedName</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFNamesAreUniqueValidationHelper.html</anchorfile>
      <anchor>a7ebef01ffab2968768da3f0185dad373</anchor>
      <arglist>(IEObjectDescription description, Map&lt; EClass, Map&lt; QualifiedName, IEObjectDescription &gt; &gt; clusterTypeToName, ValidationMessageAcceptor acceptor)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::validation::LFValidator</name>
    <filename>classorg_1_1lflang_1_1validation_1_1LFValidator.html</filename>
    <base>org.lflang.validation.BaseLFValidator</base>
    <member kind="function">
      <type>void</type>
      <name>checkAction</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a509fe364cc0551277c92251961a45284</anchor>
      <arglist>(Action action)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkAssignment</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>abee2f351d05435d569eb9cd813d55c43</anchor>
      <arglist>(Assignment assignment)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkAttributes</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>ae7829e5c160fe551df0b5f9e424cc629</anchor>
      <arglist>(Attribute attr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkBracedExpression</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a9d394588f1103e65b434a55e9e663aaf</anchor>
      <arglist>(BracedListExpression expr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkBracketExpression</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>af0e880eb7ac1e94744f9f655d46f2f85</anchor>
      <arglist>(BracketListExpression expr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkCEnclaveNotInMode</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>aa727f81a0de5713191bf24db69e460c3</anchor>
      <arglist>(Reactor reactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkCEnclaves</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a95a98a9d511d915515a886373ea89ba1</anchor>
      <arglist>(Instantiation inst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkConnection</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>ab7db5762ac2ab795c4da46738153d26e</anchor>
      <arglist>(Connection connection)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkDeadline</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a3d693c85141e895a6a114186fb3b08fc</anchor>
      <arglist>(Deadline deadline)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkEnclaveOnWindows</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>af54bd9d0911163692b050729b6a308fa</anchor>
      <arglist>(Instantiation inst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkHost</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a034c7a2bb13f82fa8221f98419e44939</anchor>
      <arglist>(Host host)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkImport</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>afb2384e529c10d761f6271f5982f5285</anchor>
      <arglist>(Import imp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkImportedReactor</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a5359cf925fc2322ed399e3424b44b34d</anchor>
      <arglist>(ImportedReactor reactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkInitializer</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a160fb8b5c85cccaaa1b79d0dfe8dc341</anchor>
      <arglist>(Initializer init)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkInitialMode</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>abd71072cead800298a733a6a0a91b20d</anchor>
      <arglist>(Reactor reactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkInput</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a57322eacdb371192c8900d70c4fe5e53</anchor>
      <arglist>(Input input)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkInstantiation</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a41a46acbff6cc2a9693859c0c5d51dc6</anchor>
      <arglist>(Instantiation instantiation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkMissingStateResetInMode</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>aa14bfb6a8fec8733d3a2d2e05f31f624</anchor>
      <arglist>(Reactor reactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkModeActionNamespace</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a94a8b9e304bed618b434e88363670c59</anchor>
      <arglist>(Reactor reactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkModeInstanceNamespace</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>aef73f72f2346d5b07d3200dd2a1ada73</anchor>
      <arglist>(Reactor reactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkModel</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a0d4b2e95136bee33c89dce4fd189926c</anchor>
      <arglist>(Model model)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkModeStateNamespace</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a392f7c12bf074238b6135d5bd9938507</anchor>
      <arglist>(Reactor reactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkModeTimerNamespace</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>af8f6cbae11f3028066bb2ff14ccb19ab</anchor>
      <arglist>(Reactor reactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkOutput</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>ac9b05d1c14920f10585bd7b0b03a400d</anchor>
      <arglist>(Output output)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkParameter</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a9d3e823454fe6629c6e0a52be655904f</anchor>
      <arglist>(Parameter param)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkParenthesisExpression</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a2ca199145223fceb94f5f25443b719b0</anchor>
      <arglist>(ParenthesisListExpression expr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkPreamble</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a39855679a8b3a66a50a1e147f85b6977</anchor>
      <arglist>(Preamble preamble)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkReaction</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a1dc6d6b2b38cad7f09163aa5ae1248ea</anchor>
      <arglist>(Reaction reaction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkReactor</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a24d0052b70116ad7767b3d8b5c2ffc96</anchor>
      <arglist>(Reactor reactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkReactorIconAttribute</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a6101cf132cd553e43134dce1d3f4feba</anchor>
      <arglist>(Reactor reactor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkReactorName</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>ac82a54d08cfff2fefc2d16aef42c2c45</anchor>
      <arglist>(String name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkSerializer</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>ab24a62bab6f3489edb47ad09eb7b8ae6</anchor>
      <arglist>(Serializer serializer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkState</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a47ac832ead7f44fe7c7a81bb2fe4b057</anchor>
      <arglist>(StateVar stateVar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkStateResetWithoutInitialValue</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>ac3467bb5f37529fd735d7d7a14e0c247</anchor>
      <arglist>(StateVar state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkTargetDecl</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a4455255a95032814025ace0123f0dab9</anchor>
      <arglist>(TargetDecl target)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkTargetProperties</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>ae53e12f0c2c582571c8ab2ca1bcd7403</anchor>
      <arglist>(KeyValuePairs targetProperties)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkTime</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1BaseLFValidator.html</anchorfile>
      <anchor>aed6d03ebdf0bae7bd4baee31873a8ded</anchor>
      <arglist>(Time time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkTimer</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a854ddf73c01903943a252f50aea22bc6</anchor>
      <arglist>(Timer timer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkType</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a33adb6bce01a218890272b4d874f15ef</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkUnspecifiedTransitionType</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a614f731df4036c1976fb55b4ea6df3cf</anchor>
      <arglist>(Reaction reaction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkVarRef</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a94b6bca454affabb97502e5adc89b6f4</anchor>
      <arglist>(VarRef varRef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkWidthSpec</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a5d846279a0774f54d48b5679d203b33d</anchor>
      <arglist>(WidthSpec widthSpec)</arglist>
    </member>
    <member kind="function">
      <type>ValidatorMessageReporter</type>
      <name>getErrorReporter</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>aa075e9c3288a0de9b6975920af5090a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ValidationMessageAcceptor</type>
      <name>getMessageAcceptor</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>ac3346e4f02629feaa269309cdbfa3bf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>typeCheck</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>aa3fdb77734e7f67a0abe21c224aef2f1</anchor>
      <arglist>(Initializer init, InferredType type, EStructuralFeature feature)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateModelInfo</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>ac35c86e13b3defd4c18b0821b4554558</anchor>
      <arglist>(Model model)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>error</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a0340b29d831a52a2849b0a171e8628bf</anchor>
      <arglist>(java.lang.String message, org.eclipse.emf.ecore.EStructuralFeature feature)</arglist>
    </member>
    <member kind="function" protection="package">
      <type>private&lt; T extends TypedVariable &gt; void</type>
      <name>checkConflict</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1LFValidator.html</anchorfile>
      <anchor>a6424ec8e281514ddedd1a87da7496051</anchor>
      <arglist>(EList&lt; T &gt; superVars, EList&lt; T &gt; sameKind, List&lt; Variable &gt; allOwn, HashSet&lt; Variable &gt; conflicts)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>org::lflang::validation::ValidatorMessageReporter</name>
    <filename>classorg_1_1lflang_1_1validation_1_1ValidatorMessageReporter.html</filename>
    <base>org.lflang.MessageReporterBase</base>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a3d5b75f44f1985a4e1024a8b43d61fec</anchor>
      <arglist>(Path file)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>aec08239e4e187b9fab9447f4d29b0479</anchor>
      <arglist>(Path file, int line)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>at</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a22bc622a160433fe40df98e229626760</anchor>
      <arglist>(Path file, Position pos)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a00cdd7120113ce25c9830e183e14c66f</anchor>
      <arglist>(EObject node)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a77356f4ec9535154ed819b9b32a1ceee</anchor>
      <arglist>(EObject node, EStructuralFeature feature)</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>at</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>aee12d3be7c0c2f5e32079dfddd54c7da</anchor>
      <arglist>(Path file, Range range)</arglist>
    </member>
    <member kind="function">
      <type>default Stage2</type>
      <name>atNullableLine</name>
      <anchorfile>interfaceorg_1_1lflang_1_1MessageReporter.html</anchorfile>
      <anchor>a398b2acbf471940ad542db86c34bd7dd</anchor>
      <arglist>(Path file, Integer line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearHistory</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a40dba989b4d7ea727cf7b4a6bea7431f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>boolean</type>
      <name>getErrorsOccurred</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a7f189b3c1a3d8f9e1661756cc1d59f3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Stage2</type>
      <name>nowhere</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a6d8e986624a920121b5c6a165f3073a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValidatorMessageReporter</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1ValidatorMessageReporter.html</anchorfile>
      <anchor>aea83f2e2ee9a22b0fb8ad803996e3482</anchor>
      <arglist>(ValidationMessageAcceptor acceptor, BaseLFValidator.ValidatorStateAccess stateAccess)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>report</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1ValidatorMessageReporter.html</anchorfile>
      <anchor>a8e040c1f7eb426d82737c3800ce4fc7a</anchor>
      <arglist>(Path path, Range range, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reportOnNode</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a084f678d4f71661620ed91058e4694c1</anchor>
      <arglist>(EObject node, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reportOnNode</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1ValidatorMessageReporter.html</anchorfile>
      <anchor>a4837885a8707a29156643a3bb99d134e</anchor>
      <arglist>(EObject node, EStructuralFeature feature, DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reportWithoutPosition</name>
      <anchorfile>classorg_1_1lflang_1_1validation_1_1ValidatorMessageReporter.html</anchorfile>
      <anchor>af280d17e1db104dd42f1a1919a98720a</anchor>
      <arglist>(DiagnosticSeverity severity, String message)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Stage2</type>
      <name>wrap</name>
      <anchorfile>classorg_1_1lflang_1_1MessageReporterBase.html</anchorfile>
      <anchor>a365b78fc2a5d81158e450ea7aea5821b</anchor>
      <arglist>(Stage2 e)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>docs</name>
    <filename>namespacedocs.html</filename>
  </compound>
  <compound kind="namespace">
    <name>org::lflang</name>
    <filename>namespaceorg_1_1lflang.html</filename>
    <namespace>org::lflang::ast</namespace>
    <namespace>org::lflang::cli</namespace>
    <namespace>org::lflang::formatting2</namespace>
    <namespace>org::lflang::generator</namespace>
    <namespace>org::lflang::graph</namespace>
    <namespace>org::lflang::ide</namespace>
    <namespace>org::lflang::scoping</namespace>
    <namespace>org::lflang::target</namespace>
    <namespace>org::lflang::tests</namespace>
    <namespace>org::lflang::util</namespace>
    <namespace>org::lflang::validation</namespace>
    <class kind="class">org::lflang::AttributeUtils</class>
    <class kind="class">org::lflang::DefaultMessageReporter</class>
    <class kind="class">org::lflang::FileConfig</class>
    <class kind="class">org::lflang::InferredType</class>
    <class kind="class">org::lflang::LFResourceDescriptionStrategy</class>
    <class kind="class">org::lflang::LFResourceProvider</class>
    <class kind="class">org::lflang::LFRuntimeModule</class>
    <class kind="class">org::lflang::LFStandaloneSetup</class>
    <class kind="class">org::lflang::LFSyntaxErrorMessageProvider</class>
    <class kind="class">org::lflang::LocalStrings</class>
    <class kind="class">org::lflang::MainConflictChecker</class>
    <class kind="interface">org::lflang::MessageReporter</class>
    <class kind="class">org::lflang::MessageReporterBase</class>
    <class kind="class">org::lflang::ModelInfo</class>
    <class kind="enum">org::lflang::TimeUnit</class>
    <class kind="class">org::lflang::TimeValue</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::analyses::c</name>
    <filename>namespaceorg_1_1lflang_1_1analyses_1_1c.html</filename>
    <class kind="class">org::lflang::analyses::c::AbstractAstVisitor</class>
    <class kind="class">org::lflang::analyses::c::AstUtils</class>
    <class kind="interface">org::lflang::analyses::c::AstVisitor</class>
    <class kind="class">org::lflang::analyses::c::BuildAstParseTreeVisitor</class>
    <class kind="class">org::lflang::analyses::c::CAst</class>
    <class kind="interface">org::lflang::analyses::c::CAstVisitor</class>
    <class kind="class">org::lflang::analyses::c::CBaseAstVisitor</class>
    <class kind="class">org::lflang::analyses::c::CToUclidVisitor</class>
    <class kind="class">org::lflang::analyses::c::IfNormalFormAstVisitor</class>
    <class kind="class">org::lflang::analyses::c::VariablePrecedenceVisitor</class>
    <class kind="interface">org::lflang::analyses::c::Visitable</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::analyses::statespace</name>
    <filename>namespaceorg_1_1lflang_1_1analyses_1_1statespace.html</filename>
    <class kind="class">org::lflang::analyses::statespace::Event</class>
    <class kind="class">org::lflang::analyses::statespace::EventQueue</class>
    <class kind="class">org::lflang::analyses::statespace::StateInfo</class>
    <class kind="class">org::lflang::analyses::statespace::StateSpaceDiagram</class>
    <class kind="class">org::lflang::analyses::statespace::StateSpaceExplorer</class>
    <class kind="class">org::lflang::analyses::statespace::StateSpaceNode</class>
    <class kind="class">org::lflang::analyses::statespace::Tag</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::analyses::uclid</name>
    <filename>namespaceorg_1_1lflang_1_1analyses_1_1uclid.html</filename>
    <class kind="class">org::lflang::analyses::uclid::MTLVisitor</class>
    <class kind="class">org::lflang::analyses::uclid::UclidGenerator</class>
    <class kind="class">org::lflang::analyses::uclid::UclidRunner</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::ast</name>
    <filename>namespaceorg_1_1lflang_1_1ast.html</filename>
    <class kind="interface">org::lflang::ast::AstTransformation</class>
    <class kind="class">org::lflang::ast::ASTUtils</class>
    <class kind="class">org::lflang::ast::DelayedConnectionTransformation</class>
    <class kind="class">org::lflang::ast::FormattingUtil</class>
    <class kind="class">org::lflang::ast::IsEqual</class>
    <class kind="class">org::lflang::ast::LfParsingHelper</class>
    <class kind="class">org::lflang::ast::MalleableString</class>
    <class kind="class">org::lflang::ast::ToLf</class>
    <class kind="class">org::lflang::ast::ToSExpr</class>
    <class kind="class">org::lflang::ast::ToText</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::cli</name>
    <filename>namespaceorg_1_1lflang_1_1cli.html</filename>
    <class kind="class">org::lflang::cli::CliBase</class>
    <class kind="class">org::lflang::cli::CliToolTestFixture</class>
    <class kind="class">org::lflang::cli::DiagramGenerationTest</class>
    <class kind="class">org::lflang::cli::Lfc</class>
    <class kind="class">org::lflang::cli::LfcCliTest</class>
    <class kind="class">org::lflang::cli::LFCliSetup</class>
    <class kind="class">org::lflang::cli::Lfd</class>
    <class kind="class">org::lflang::cli::LfdCliTest</class>
    <class kind="class">org::lflang::cli::Lff</class>
    <class kind="class">org::lflang::cli::LffCliTest</class>
    <class kind="class">org::lflang::cli::LFStandaloneModule</class>
    <class kind="class">org::lflang::cli::StandaloneIssueAcceptor</class>
    <class kind="class">org::lflang::cli::StandaloneMessageReporter</class>
    <class kind="class">org::lflang::cli::TestUtils</class>
    <class kind="class">org::lflang::cli::VersionProvider</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::diagram::lsp</name>
    <filename>namespaceorg_1_1lflang_1_1diagram_1_1lsp.html</filename>
    <class kind="class">org::lflang::diagram::lsp::BuildArgs</class>
    <class kind="class">org::lflang::diagram::lsp::LanguageDiagramServer</class>
    <class kind="interface">org::lflang::diagram::lsp::LFLanguageClient</class>
    <class kind="class">org::lflang::diagram::lsp::LFLanguageServer</class>
    <class kind="class">org::lflang::diagram::lsp::LFLanguageServerExtension</class>
    <class kind="class">org::lflang::diagram::lsp::LibraryFile</class>
    <class kind="class">org::lflang::diagram::lsp::NodePosition</class>
    <class kind="class">org::lflang::diagram::lsp::Progress</class>
    <class kind="class">org::lflang::diagram::lsp::ReactorNode</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::diagram::synthesis</name>
    <filename>namespaceorg_1_1lflang_1_1diagram_1_1synthesis.html</filename>
    <namespace>org::lflang::diagram::synthesis::action</namespace>
    <namespace>org::lflang::diagram::synthesis::postprocessor</namespace>
    <namespace>org::lflang::diagram::synthesis::styles</namespace>
    <namespace>org::lflang::diagram::synthesis::util</namespace>
    <class kind="class">org::lflang::diagram::synthesis::AbstractSynthesisExtensions</class>
    <class kind="class">org::lflang::diagram::synthesis::LinguaFrancaSynthesis</class>
    <class kind="enum">org::lflang::diagram::synthesis::ReactorParameterDisplayModes</class>
    <class kind="class">org::lflang::diagram::synthesis::SynthesisRegistration</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::diagram::synthesis::action</name>
    <filename>namespaceorg_1_1lflang_1_1diagram_1_1synthesis_1_1action.html</filename>
    <class kind="class">org::lflang::diagram::synthesis::action::AbstractAction</class>
    <class kind="class">org::lflang::diagram::synthesis::action::CollapseAllReactorsAction</class>
    <class kind="class">org::lflang::diagram::synthesis::action::ExpandAllReactorsAction</class>
    <class kind="class">org::lflang::diagram::synthesis::action::FilterCycleAction</class>
    <class kind="class">org::lflang::diagram::synthesis::action::MemorizingExpandCollapseAction</class>
    <class kind="class">org::lflang::diagram::synthesis::action::ShowCycleAction</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::diagram::synthesis::postprocessor</name>
    <filename>namespaceorg_1_1lflang_1_1diagram_1_1synthesis_1_1postprocessor.html</filename>
    <class kind="class">org::lflang::diagram::synthesis::postprocessor::ReactionPortAdjustment</class>
    <class kind="class">org::lflang::diagram::synthesis::postprocessor::ReactorPortAdjustment</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::diagram::synthesis::styles</name>
    <filename>namespaceorg_1_1lflang_1_1diagram_1_1synthesis_1_1styles.html</filename>
    <class kind="class">org::lflang::diagram::synthesis::styles::LinguaFrancaShapeExtensions</class>
    <class kind="class">org::lflang::diagram::synthesis::styles::LinguaFrancaStyleExtensions</class>
    <class kind="class">org::lflang::diagram::synthesis::styles::ReactorFigureComponents</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::diagram::synthesis::util</name>
    <filename>namespaceorg_1_1lflang_1_1diagram_1_1synthesis_1_1util.html</filename>
    <class kind="class">org::lflang::diagram::synthesis::util::CycleVisualization</class>
    <class kind="class">org::lflang::diagram::synthesis::util::InterfaceDependenciesVisualization</class>
    <class kind="class">org::lflang::diagram::synthesis::util::LayoutPostProcessing</class>
    <class kind="class">org::lflang::diagram::synthesis::util::ModeDiagrams</class>
    <class kind="class">org::lflang::diagram::synthesis::util::NamedInstanceUtil</class>
    <class kind="class">org::lflang::diagram::synthesis::util::ReactorIcons</class>
    <class kind="class">org::lflang::diagram::synthesis::util::SynthesisMessageReporter</class>
    <class kind="class">org::lflang::diagram::synthesis::util::UtilityExtensions</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::federated::extensions</name>
    <filename>namespaceorg_1_1lflang_1_1federated_1_1extensions.html</filename>
    <class kind="class">org::lflang::federated::extensions::CExtension</class>
    <class kind="class">org::lflang::federated::extensions::CExtensionUtils</class>
    <class kind="interface">org::lflang::federated::extensions::FedTargetExtension</class>
    <class kind="class">org::lflang::federated::extensions::FedTargetExtensionFactory</class>
    <class kind="class">org::lflang::federated::extensions::PythonExtension</class>
    <class kind="class">org::lflang::federated::extensions::TSExtension</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::federated::generator</name>
    <filename>namespaceorg_1_1lflang_1_1federated_1_1generator.html</filename>
    <class kind="class">org::lflang::federated::generator::FedASTUtils</class>
    <class kind="class">org::lflang::federated::generator::FedConnectionInstance</class>
    <class kind="class">org::lflang::federated::generator::FedEmitter</class>
    <class kind="class">org::lflang::federated::generator::FederateInstance</class>
    <class kind="class">org::lflang::federated::generator::FederateTargetConfig</class>
    <class kind="class">org::lflang::federated::generator::FederationFileConfig</class>
    <class kind="class">org::lflang::federated::generator::FedGenerator</class>
    <class kind="class">org::lflang::federated::generator::FedImportEmitter</class>
    <class kind="class">org::lflang::federated::generator::FedMainEmitter</class>
    <class kind="class">org::lflang::federated::generator::FedPreambleEmitter</class>
    <class kind="class">org::lflang::federated::generator::FedReactorEmitter</class>
    <class kind="class">org::lflang::federated::generator::FedTargetEmitter</class>
    <class kind="class">org::lflang::federated::generator::FedUtils</class>
    <class kind="class">org::lflang::federated::generator::LineAdjustingMessageReporter</class>
    <class kind="class">org::lflang::federated::generator::SynchronizedMessageReporter</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::federated::launcher</name>
    <filename>namespaceorg_1_1lflang_1_1federated_1_1launcher.html</filename>
    <class kind="class">org::lflang::federated::launcher::BuildConfig</class>
    <class kind="class">org::lflang::federated::launcher::CBuildConfig</class>
    <class kind="class">org::lflang::federated::launcher::FedLauncherGenerator</class>
    <class kind="class">org::lflang::federated::launcher::PyBuildConfig</class>
    <class kind="class">org::lflang::federated::launcher::RtiConfig</class>
    <class kind="class">org::lflang::federated::launcher::TsBuildConfig</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::federated::serialization</name>
    <filename>namespaceorg_1_1lflang_1_1federated_1_1serialization.html</filename>
    <class kind="class">org::lflang::federated::serialization::FedCustomPythonSerialization</class>
    <class kind="class">org::lflang::federated::serialization::FedNativePythonSerialization</class>
    <class kind="class">org::lflang::federated::serialization::FedROS2CPPSerialization</class>
    <class kind="interface">org::lflang::federated::serialization::FedSerialization</class>
    <class kind="enum">org::lflang::federated::serialization::SupportedSerializers</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::federated::validation</name>
    <filename>namespaceorg_1_1lflang_1_1federated_1_1validation.html</filename>
    <class kind="class">org::lflang::federated::validation::FedValidator</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::formatting2</name>
    <filename>namespaceorg_1_1lflang_1_1formatting2.html</filename>
    <class kind="class">org::lflang::formatting2::LFFormatter</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::generator</name>
    <filename>namespaceorg_1_1lflang_1_1generator.html</filename>
    <namespace>org::lflang::generator::c</namespace>
    <namespace>org::lflang::generator::docker</namespace>
    <namespace>org::lflang::generator::python</namespace>
    <namespace>org::lflang::generator::rust</namespace>
    <namespace>org::lflang::generator::ts</namespace>
    <class kind="class">org::lflang::generator::ActionInstance</class>
    <class kind="class">org::lflang::generator::CodeBuilder</class>
    <class kind="class">org::lflang::generator::CodeMap</class>
    <class kind="class">org::lflang::generator::DeadlineInstance</class>
    <class kind="interface">org::lflang::generator::DelayBodyGenerator</class>
    <class kind="class">org::lflang::generator::DiagnosticReporting</class>
    <class kind="class">org::lflang::generator::GenerationException</class>
    <class kind="class">org::lflang::generator::GeneratorBase</class>
    <class kind="class">org::lflang::generator::GeneratorCommandFactory</class>
    <class kind="class">org::lflang::generator::GeneratorResult</class>
    <class kind="class">org::lflang::generator::GeneratorUtils</class>
    <class kind="class">org::lflang::generator::HumanReadableReportingStrategy</class>
    <class kind="class">org::lflang::generator::IntegratedBuilder</class>
    <class kind="class">org::lflang::generator::InvalidLfSourceException</class>
    <class kind="class">org::lflang::generator::InvalidSourceException</class>
    <class kind="class">org::lflang::generator::LanguageServerMessageReporter</class>
    <class kind="interface">org::lflang::generator::LfExpressionVisitor</class>
    <class kind="class">org::lflang::generator::LFGenerator</class>
    <class kind="interface">org::lflang::generator::LFGeneratorContext</class>
    <class kind="class">org::lflang::generator::MainContext</class>
    <class kind="class">org::lflang::generator::MixedRadixInt</class>
    <class kind="class">org::lflang::generator::ModeInstance</class>
    <class kind="class">org::lflang::generator::NamedInstance</class>
    <class kind="class">org::lflang::generator::ParameterInstance</class>
    <class kind="class">org::lflang::generator::PortInstance</class>
    <class kind="class">org::lflang::generator::Position</class>
    <class kind="class">org::lflang::generator::Range</class>
    <class kind="class">org::lflang::generator::ReactionInstance</class>
    <class kind="class">org::lflang::generator::ReactionInstanceGraph</class>
    <class kind="class">org::lflang::generator::ReactorInstance</class>
    <class kind="class">org::lflang::generator::RuntimeRange&lt; T extends NamedInstance</class>
    <class kind="class">org::lflang::generator::SendRange</class>
    <class kind="class">org::lflang::generator::StateVariableInstance</class>
    <class kind="class">org::lflang::generator::SubContext</class>
    <class kind="interface">org::lflang::generator::TargetTypes</class>
    <class kind="class">org::lflang::generator::TimerInstance</class>
    <class kind="class">org::lflang::generator::TriggerInstance</class>
    <class kind="class">org::lflang::generator::UnsupportedGeneratorFeatureException</class>
    <class kind="interface">org::lflang::generator::ValidationStrategy</class>
    <class kind="class">org::lflang::generator::Validator</class>
    <class kind="class">org::lflang::generator::WatchdogInstance</class>
    <member kind="function">
      <type>record</type>
      <name>Argument&lt; T &gt;</name>
      <anchorfile>group__Generator.html</anchorfile>
      <anchor>ga462b695184b8ecbc587ddfb1288b5c95</anchor>
      <arglist>(TargetProperty&lt; T, ?&gt; property, T value)</arglist>
    </member>
    <member kind="function">
      <type>record</type>
      <name>GeneratorArguments</name>
      <anchorfile>group__Generator.html</anchorfile>
      <anchor>gafe0f6415f88e4d19311019f3a8908b0a</anchor>
      <arglist>(boolean clean, URI externalRuntimeUri, boolean hierarchicalBin, JsonObject jsonObject, boolean lint, boolean quiet, URI rti, List&lt; Argument&lt;?&gt; &gt; overrides)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::generator::c</name>
    <filename>namespaceorg_1_1lflang_1_1generator_1_1c.html</filename>
    <class kind="class">org::lflang::generator::c::CActionGenerator</class>
    <class kind="class">org::lflang::generator::c::CCmakeGenerator</class>
    <class kind="class">org::lflang::generator::c::CCompiler</class>
    <class kind="class">org::lflang::generator::c::CConstructorGenerator</class>
    <class kind="class">org::lflang::generator::c::CCoreFilesUtils</class>
    <class kind="class">org::lflang::generator::c::CDelayBodyGenerator</class>
    <class kind="class">org::lflang::generator::c::CEnclavedReactorTransformation</class>
    <class kind="class">org::lflang::generator::c::CEnclaveGenerator</class>
    <class kind="class">org::lflang::generator::c::CEnclaveGraph</class>
    <class kind="class">org::lflang::generator::c::CEnclaveInstance</class>
    <class kind="class">org::lflang::generator::c::CFileConfig</class>
    <class kind="class">org::lflang::generator::c::CMainFunctionGenerator</class>
    <class kind="class">org::lflang::generator::c::CMethodGenerator</class>
    <class kind="class">org::lflang::generator::c::CMixedRadixGenerator</class>
    <class kind="class">org::lflang::generator::c::CModesGenerator</class>
    <class kind="class">org::lflang::generator::c::CParameterGenerator</class>
    <class kind="class">org::lflang::generator::c::CPortGenerator</class>
    <class kind="class">org::lflang::generator::c::CPreambleGenerator</class>
    <class kind="class">org::lflang::generator::c::CReactionGenerator</class>
    <class kind="class">org::lflang::generator::c::CReactorHeaderFileGenerator</class>
    <class kind="class">org::lflang::generator::c::CStateGenerator</class>
    <class kind="class">org::lflang::generator::c::CTimerGenerator</class>
    <class kind="class">org::lflang::generator::c::CTracingGenerator</class>
    <class kind="class">org::lflang::generator::c::CTriggerObjectsGenerator</class>
    <class kind="class">org::lflang::generator::c::CTypes</class>
    <class kind="class">org::lflang::generator::c::CUtil</class>
    <class kind="class">org::lflang::generator::c::CWatchdogGenerator</class>
    <class kind="class">org::lflang::generator::c::InteractingContainedReactors</class>
    <class kind="class">org::lflang::generator::c::TypeParameterizedReactor</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::generator::docker</name>
    <filename>namespaceorg_1_1lflang_1_1generator_1_1docker.html</filename>
    <class kind="class">org::lflang::generator::docker::CDockerGenerator</class>
    <class kind="class">org::lflang::generator::docker::DockerComposeGenerator</class>
    <class kind="class">org::lflang::generator::docker::DockerData</class>
    <class kind="class">org::lflang::generator::docker::DockerGenerator</class>
    <class kind="class">org::lflang::generator::docker::FedDockerComposeGenerator</class>
    <class kind="class">org::lflang::generator::docker::PythonDockerGenerator</class>
    <class kind="class">org::lflang::generator::docker::RtiDockerGenerator</class>
    <class kind="class">org::lflang::generator::docker::TSDockerGenerator</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::generator::python</name>
    <filename>namespaceorg_1_1lflang_1_1generator_1_1python.html</filename>
    <class kind="class">org::lflang::generator::python::PyFileConfig</class>
    <class kind="class">org::lflang::generator::python::PythonActionGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonDelayBodyGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonMainFunctionGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonMethodGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonModeGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonParameterGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonPortGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonPreambleGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonReactionGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonReactorGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonStateGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonTypes</class>
    <class kind="class">org::lflang::generator::python::PythonValidator</class>
    <class kind="class">org::lflang::generator::python::PyUtil</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::generator::rust</name>
    <filename>namespaceorg_1_1lflang_1_1generator_1_1rust.html</filename>
    <class kind="class">org::lflang::generator::rust::CargoDependencySpec</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::generator::ts</name>
    <filename>namespaceorg_1_1lflang_1_1generator_1_1ts.html</filename>
    <class kind="class">org::lflang::generator::ts::TSTypes</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::graph</name>
    <filename>namespaceorg_1_1lflang_1_1graph.html</filename>
    <class kind="class">org::lflang::graph::ConnectionGraph</class>
    <class kind="class">org::lflang::graph::DirectedGraph</class>
    <class kind="interface">org::lflang::graph::Graph</class>
    <class kind="class">org::lflang::graph::InstantiationGraph</class>
    <class kind="class">org::lflang::graph::NodeAnnotation</class>
    <class kind="class">org::lflang::graph::NodeAnnotations</class>
    <class kind="class">org::lflang::graph::PrecedenceGraph</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::ide</name>
    <filename>namespaceorg_1_1lflang_1_1ide.html</filename>
    <class kind="class">org::lflang::ide::LFIdeModule</class>
    <class kind="class">org::lflang::ide::LFIdeSetup</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::scoping</name>
    <filename>namespaceorg_1_1lflang_1_1scoping.html</filename>
    <class kind="class">org::lflang::scoping::LFGlobalScopeProvider</class>
    <class kind="class">org::lflang::scoping::LFScopeProvider</class>
    <class kind="class">org::lflang::scoping::LFScopeProviderImpl</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::target</name>
    <filename>namespaceorg_1_1lflang_1_1target.html</filename>
    <namespace>org::lflang::target::property</namespace>
    <class kind="enum">org::lflang::target::Target</class>
    <class kind="class">org::lflang::target::TargetConfig</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::target::property</name>
    <filename>namespaceorg_1_1lflang_1_1target_1_1property.html</filename>
    <namespace>org::lflang::target::property::type</namespace>
    <class kind="class">org::lflang::target::property::AuthProperty</class>
    <class kind="class">org::lflang::target::property::BooleanProperty</class>
    <class kind="class">org::lflang::target::property::BuildCommandsProperty</class>
    <class kind="class">org::lflang::target::property::BuildTypeProperty</class>
    <class kind="class">org::lflang::target::property::CargoDependenciesProperty</class>
    <class kind="class">org::lflang::target::property::CargoFeaturesProperty</class>
    <class kind="class">org::lflang::target::property::ClockSyncModeProperty</class>
    <class kind="class">org::lflang::target::property::ClockSyncOptionsProperty</class>
    <class kind="class">org::lflang::target::property::CmakeIncludeProperty</class>
    <class kind="class">org::lflang::target::property::CmakeInitIncludeProperty</class>
    <class kind="class">org::lflang::target::property::CompileDefinitionsProperty</class>
    <class kind="class">org::lflang::target::property::CompilerProperty</class>
    <class kind="class">org::lflang::target::property::CoordinationOptionsProperty</class>
    <class kind="class">org::lflang::target::property::CoordinationProperty</class>
    <class kind="class">org::lflang::target::property::DNETProperty</class>
    <class kind="class">org::lflang::target::property::DockerProperty</class>
    <class kind="class">org::lflang::target::property::ExportDependencyGraphProperty</class>
    <class kind="class">org::lflang::target::property::ExternalRuntimePathProperty</class>
    <class kind="class">org::lflang::target::property::FastProperty</class>
    <class kind="class">org::lflang::target::property::FedSetupProperty</class>
    <class kind="class">org::lflang::target::property::FileListProperty</class>
    <class kind="class">org::lflang::target::property::FilesProperty</class>
    <class kind="class">org::lflang::target::property::KeepaliveProperty</class>
    <class kind="class">org::lflang::target::property::LoggingProperty</class>
    <class kind="class">org::lflang::target::property::NoCompileProperty</class>
    <class kind="class">org::lflang::target::property::NoRuntimeValidationProperty</class>
    <class kind="class">org::lflang::target::property::NoSourceMappingProperty</class>
    <class kind="class">org::lflang::target::property::PlatformProperty</class>
    <class kind="class">org::lflang::target::property::PrintStatisticsProperty</class>
    <class kind="class">org::lflang::target::property::ProtobufsProperty</class>
    <class kind="class">org::lflang::target::property::PythonVersionProperty</class>
    <class kind="class">org::lflang::target::property::Ros2DependenciesProperty</class>
    <class kind="class">org::lflang::target::property::Ros2Property</class>
    <class kind="class">org::lflang::target::property::RuntimeVersionProperty</class>
    <class kind="class">org::lflang::target::property::RustIncludeProperty</class>
    <class kind="class">org::lflang::target::property::SchedulerProperty</class>
    <class kind="class">org::lflang::target::property::SingleFileProjectProperty</class>
    <class kind="class">org::lflang::target::property::SingleThreadedProperty</class>
    <class kind="class">org::lflang::target::property::StringListProperty</class>
    <class kind="class">org::lflang::target::property::StringProperty</class>
    <class kind="class">org::lflang::target::property::TargetProperty</class>
    <class kind="class">org::lflang::target::property::TimeOutProperty</class>
    <class kind="class">org::lflang::target::property::TracePluginProperty</class>
    <class kind="class">org::lflang::target::property::TracingProperty</class>
    <class kind="class">org::lflang::target::property::VerifyProperty</class>
    <class kind="class">org::lflang::target::property::WorkersProperty</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::target::property::type</name>
    <filename>namespaceorg_1_1lflang_1_1target_1_1property_1_1type.html</filename>
    <class kind="enum">org::lflang::target::property::type::ArrayType</class>
    <class kind="class">org::lflang::target::property::type::BuildTypeType</class>
    <class kind="class">org::lflang::target::property::type::ClockSyncModeType</class>
    <class kind="class">org::lflang::target::property::type::CoordinationModeType</class>
    <class kind="enum">org::lflang::target::property::type::DictionaryType</class>
    <class kind="class">org::lflang::target::property::type::LoggingType</class>
    <class kind="class">org::lflang::target::property::type::OptionsType&lt; T extends Enum</class>
    <class kind="class">org::lflang::target::property::type::PlatformType</class>
    <class kind="enum">org::lflang::target::property::type::PrimitiveType</class>
    <class kind="class">org::lflang::target::property::type::SchedulerType</class>
    <class kind="enum">org::lflang::target::property::type::StringDictionaryType</class>
    <class kind="interface">org::lflang::target::property::type::TargetPropertyType</class>
    <class kind="enum">org::lflang::target::property::type::UnionType</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::tests</name>
    <filename>namespaceorg_1_1lflang_1_1tests.html</filename>
    <namespace>org::lflang::tests::compiler</namespace>
    <namespace>org::lflang::tests::lsp</namespace>
    <namespace>org::lflang::tests::runtime</namespace>
    <namespace>org::lflang::tests::serialization</namespace>
    <namespace>org::lflang::tests::util</namespace>
    <class kind="class">org::lflang::tests::Configurators</class>
    <class kind="class">org::lflang::tests::LfInjectedTestBase</class>
    <class kind="class">org::lflang::tests::LFInjectorProvider</class>
    <class kind="class">org::lflang::tests::LFParsingTest</class>
    <class kind="class">org::lflang::tests::LfParsingTestHelper</class>
    <class kind="class">org::lflang::tests::LFTest</class>
    <class kind="class">org::lflang::tests::RunSingleTest</class>
    <class kind="class">org::lflang::tests::RuntimeTest</class>
    <class kind="class">org::lflang::tests::TestBase</class>
    <class kind="class">org::lflang::tests::TestError</class>
    <class kind="class">org::lflang::tests::TestRegistry</class>
    <class kind="class">org::lflang::tests::Transformers</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::tests::compiler</name>
    <filename>namespaceorg_1_1lflang_1_1tests_1_1compiler.html</filename>
    <class kind="class">org::lflang::tests::compiler::EquivalenceUnitTests</class>
    <class kind="class">org::lflang::tests::compiler::FormattingUnitTests</class>
    <class kind="class">org::lflang::tests::compiler::LinguaFrancaASTUtilsTest</class>
    <class kind="class">org::lflang::tests::compiler::LinguaFrancaDependencyAnalysisTest</class>
    <class kind="class">org::lflang::tests::compiler::LinguaFrancaParsingTest</class>
    <class kind="class">org::lflang::tests::compiler::LinguaFrancaScopingTest</class>
    <class kind="class">org::lflang::tests::compiler::LinguaFrancaValidationTest</class>
    <class kind="class">org::lflang::tests::compiler::MixedRadixIntTest</class>
    <class kind="class">org::lflang::tests::compiler::PortInstanceTests</class>
    <class kind="class">org::lflang::tests::compiler::RangeTests</class>
    <class kind="class">org::lflang::tests::compiler::RoundTripTests</class>
    <class kind="class">org::lflang::tests::compiler::TargetConfigTests</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::tests::lsp</name>
    <filename>namespaceorg_1_1lflang_1_1tests_1_1lsp.html</filename>
    <class kind="class">org::lflang::tests::lsp::ErrorInserter</class>
    <class kind="class">org::lflang::tests::lsp::LspTests</class>
    <class kind="class">org::lflang::tests::lsp::MockCancelIndicator</class>
    <class kind="class">org::lflang::tests::lsp::MockLanguageClient</class>
    <class kind="class">org::lflang::tests::lsp::MockReportProgress</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::tests::runtime</name>
    <filename>namespaceorg_1_1lflang_1_1tests_1_1runtime.html</filename>
    <class kind="class">org::lflang::tests::runtime::CArduinoTest</class>
    <class kind="class">org::lflang::tests::runtime::CCppTest</class>
    <class kind="class">org::lflang::tests::runtime::CFlexPRETTest</class>
    <class kind="class">org::lflang::tests::runtime::CPatmosTest</class>
    <class kind="class">org::lflang::tests::runtime::CppRos2Test</class>
    <class kind="class">org::lflang::tests::runtime::CppTest</class>
    <class kind="class">org::lflang::tests::runtime::CSchedulerTest</class>
    <class kind="class">org::lflang::tests::runtime::CTest</class>
    <class kind="class">org::lflang::tests::runtime::CVerifierTest</class>
    <class kind="class">org::lflang::tests::runtime::CZephyrTest</class>
    <class kind="class">org::lflang::tests::runtime::PythonTest</class>
    <class kind="class">org::lflang::tests::runtime::RustTest</class>
    <class kind="class">org::lflang::tests::runtime::TypeScriptTest</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::tests::serialization</name>
    <filename>namespaceorg_1_1lflang_1_1tests_1_1serialization.html</filename>
    <class kind="class">org::lflang::tests::serialization::SerializationTest</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::tests::util</name>
    <filename>namespaceorg_1_1lflang_1_1tests_1_1util.html</filename>
    <class kind="class">org::lflang::tests::util::StringUtilTest</class>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::util</name>
    <filename>namespaceorg_1_1lflang_1_1util.html</filename>
    <class kind="class">org::lflang::util::ArduinoUtil</class>
    <class kind="class">org::lflang::util::Averager</class>
    <class kind="class">org::lflang::util::CollectionUtil</class>
    <class kind="class">org::lflang::util::FileUtil</class>
    <class kind="class">org::lflang::util::FlexPRETUtil</class>
    <class kind="class">org::lflang::util::ImportUtil</class>
    <class kind="class">org::lflang::util::IteratorUtil</class>
    <class kind="class">org::lflang::util::LFCommand</class>
    <class kind="class">org::lflang::util::StringUtil</class>
    <class kind="class">org::lflang::util::TargetResourceNotFoundException</class>
    <member kind="function">
      <type>record</type>
      <name>Pair&lt; F, S &gt;</name>
      <anchorfile>namespaceorg_1_1lflang_1_1util.html</anchorfile>
      <anchor>a6d98225f3efc878ff150a29493c74d38</anchor>
      <arglist>(F first, S second)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>org::lflang::validation</name>
    <filename>namespaceorg_1_1lflang_1_1validation.html</filename>
    <class kind="class">org::lflang::validation::AttributeSpec</class>
    <class kind="class">org::lflang::validation::BaseLFValidator</class>
    <class kind="class">org::lflang::validation::LFNamesAreUniqueValidationHelper</class>
    <class kind="class">org::lflang::validation::LFValidator</class>
    <class kind="class">org::lflang::validation::ValidatorMessageReporter</class>
  </compound>
  <compound kind="group">
    <name>CLI</name>
    <title>CLI</title>
    <filename>group__CLI.html</filename>
    <class kind="class">org::lflang::cli::CliBase</class>
    <class kind="class">org::lflang::cli::Lfc</class>
    <class kind="class">org::lflang::cli::LFCliSetup</class>
    <class kind="class">org::lflang::cli::Lfd</class>
    <class kind="class">org::lflang::cli::Lff</class>
    <class kind="class">org::lflang::cli::LFStandaloneModule</class>
    <class kind="class">org::lflang::cli::StandaloneIssueAcceptor</class>
    <class kind="class">org::lflang::cli::StandaloneMessageReporter</class>
  </compound>
  <compound kind="group">
    <name>Diagram</name>
    <title>Diagram</title>
    <filename>group__Diagram.html</filename>
    <class kind="class">org::lflang::diagram::synthesis::AbstractSynthesisExtensions</class>
    <class kind="class">org::lflang::diagram::synthesis::action::AbstractAction</class>
    <class kind="class">org::lflang::diagram::synthesis::action::CollapseAllReactorsAction</class>
    <class kind="class">org::lflang::diagram::synthesis::action::ExpandAllReactorsAction</class>
    <class kind="class">org::lflang::diagram::synthesis::action::FilterCycleAction</class>
    <class kind="class">org::lflang::diagram::synthesis::action::MemorizingExpandCollapseAction</class>
    <class kind="class">org::lflang::diagram::synthesis::action::ShowCycleAction</class>
    <class kind="class">org::lflang::diagram::synthesis::LinguaFrancaSynthesis</class>
    <class kind="class">org::lflang::diagram::synthesis::postprocessor::ReactionPortAdjustment</class>
    <class kind="class">org::lflang::diagram::synthesis::postprocessor::ReactorPortAdjustment</class>
    <class kind="enum">org::lflang::diagram::synthesis::ReactorParameterDisplayModes</class>
    <class kind="class">org::lflang::diagram::synthesis::styles::LinguaFrancaShapeExtensions</class>
    <class kind="class">org::lflang::diagram::synthesis::styles::LinguaFrancaStyleExtensions</class>
    <class kind="class">org::lflang::diagram::synthesis::styles::ReactorFigureComponents</class>
    <class kind="class">org::lflang::diagram::synthesis::SynthesisRegistration</class>
    <class kind="class">org::lflang::diagram::synthesis::util::CycleVisualization</class>
    <class kind="class">org::lflang::diagram::synthesis::util::InterfaceDependenciesVisualization</class>
    <class kind="class">org::lflang::diagram::synthesis::util::LayoutPostProcessing</class>
    <class kind="class">org::lflang::diagram::synthesis::util::ModeDiagrams</class>
    <class kind="class">org::lflang::diagram::synthesis::util::NamedInstanceUtil</class>
    <class kind="class">org::lflang::diagram::synthesis::util::ReactorIcons</class>
    <class kind="class">org::lflang::diagram::synthesis::util::SynthesisMessageReporter</class>
    <class kind="class">org::lflang::diagram::synthesis::util::UtilityExtensions</class>
  </compound>
  <compound kind="group">
    <name>Docker</name>
    <title>Docker</title>
    <filename>group__Docker.html</filename>
    <class kind="class">org::lflang::generator::docker::CDockerGenerator</class>
    <class kind="class">org::lflang::generator::docker::DockerComposeGenerator</class>
    <class kind="class">org::lflang::generator::docker::DockerData</class>
    <class kind="class">org::lflang::generator::docker::DockerGenerator</class>
    <class kind="class">org::lflang::generator::docker::FedDockerComposeGenerator</class>
    <class kind="class">org::lflang::generator::docker::PythonDockerGenerator</class>
    <class kind="class">org::lflang::generator::docker::TSDockerGenerator</class>
  </compound>
  <compound kind="group">
    <name>Federated</name>
    <title>Federated</title>
    <filename>group__Federated.html</filename>
    <class kind="class">org::lflang::federated::extensions::CExtension</class>
    <class kind="class">org::lflang::federated::extensions::CExtensionUtils</class>
    <class kind="interface">org::lflang::federated::extensions::FedTargetExtension</class>
    <class kind="class">org::lflang::federated::extensions::FedTargetExtensionFactory</class>
    <class kind="class">org::lflang::federated::extensions::PythonExtension</class>
    <class kind="class">org::lflang::federated::extensions::TSExtension</class>
    <class kind="class">org::lflang::federated::generator::FedASTUtils</class>
    <class kind="class">org::lflang::federated::generator::FedConnectionInstance</class>
    <class kind="class">org::lflang::federated::generator::FedEmitter</class>
    <class kind="class">org::lflang::federated::generator::FederateInstance</class>
    <class kind="class">org::lflang::federated::generator::FederateTargetConfig</class>
    <class kind="class">org::lflang::federated::generator::FederationFileConfig</class>
    <class kind="class">org::lflang::federated::generator::FedGenerator</class>
    <class kind="class">org::lflang::federated::generator::FedImportEmitter</class>
    <class kind="class">org::lflang::federated::generator::FedMainEmitter</class>
    <class kind="class">org::lflang::federated::generator::FedPreambleEmitter</class>
    <class kind="class">org::lflang::federated::generator::FedReactorEmitter</class>
    <class kind="class">org::lflang::federated::generator::FedTargetEmitter</class>
    <class kind="class">org::lflang::federated::generator::FedUtils</class>
    <class kind="class">org::lflang::federated::generator::LineAdjustingMessageReporter</class>
    <class kind="class">org::lflang::federated::generator::SynchronizedMessageReporter</class>
    <class kind="class">org::lflang::federated::launcher::BuildConfig</class>
    <class kind="class">org::lflang::federated::launcher::CBuildConfig</class>
    <class kind="class">org::lflang::federated::launcher::FedLauncherGenerator</class>
    <class kind="class">org::lflang::federated::launcher::PyBuildConfig</class>
    <class kind="class">org::lflang::federated::launcher::RtiConfig</class>
    <class kind="class">org::lflang::federated::launcher::TsBuildConfig</class>
    <class kind="class">org::lflang::federated::serialization::FedCustomPythonSerialization</class>
    <class kind="class">org::lflang::federated::serialization::FedNativePythonSerialization</class>
    <class kind="class">org::lflang::federated::serialization::FedROS2CPPSerialization</class>
    <class kind="interface">org::lflang::federated::serialization::FedSerialization</class>
    <class kind="enum">org::lflang::federated::serialization::SupportedSerializers</class>
    <class kind="class">org::lflang::federated::validation::FedValidator</class>
  </compound>
  <compound kind="group">
    <name>Generated</name>
    <title>Generated</title>
    <filename>group__Generated.html</filename>
  </compound>
  <compound kind="group">
    <name>Generator</name>
    <title>Generator</title>
    <filename>group__Generator.html</filename>
    <class kind="class">org::lflang::generator::c::CActionGenerator</class>
    <class kind="class">org::lflang::generator::c::CCmakeGenerator</class>
    <class kind="class">org::lflang::generator::c::CCompiler</class>
    <class kind="class">org::lflang::generator::c::CConstructorGenerator</class>
    <class kind="class">org::lflang::generator::c::CCoreFilesUtils</class>
    <class kind="class">org::lflang::generator::c::CDelayBodyGenerator</class>
    <class kind="class">org::lflang::generator::c::CEnclavedReactorTransformation</class>
    <class kind="class">org::lflang::generator::c::CEnclaveGenerator</class>
    <class kind="class">org::lflang::generator::c::CEnclaveGraph</class>
    <class kind="class">org::lflang::generator::c::CEnclaveInstance</class>
    <class kind="class">org::lflang::generator::c::CFileConfig</class>
    <class kind="class">org::lflang::generator::c::CMainFunctionGenerator</class>
    <class kind="class">org::lflang::generator::c::CMethodGenerator</class>
    <class kind="class">org::lflang::generator::c::CMixedRadixGenerator</class>
    <class kind="class">org::lflang::generator::c::CModesGenerator</class>
    <class kind="class">org::lflang::generator::c::CParameterGenerator</class>
    <class kind="class">org::lflang::generator::c::CPortGenerator</class>
    <class kind="class">org::lflang::generator::c::CPreambleGenerator</class>
    <class kind="class">org::lflang::generator::c::CReactionGenerator</class>
    <class kind="class">org::lflang::generator::c::CReactorHeaderFileGenerator</class>
    <class kind="class">org::lflang::generator::c::CStateGenerator</class>
    <class kind="class">org::lflang::generator::c::CTimerGenerator</class>
    <class kind="class">org::lflang::generator::c::CTracingGenerator</class>
    <class kind="class">org::lflang::generator::c::CTriggerObjectsGenerator</class>
    <class kind="class">org::lflang::generator::c::CTypes</class>
    <class kind="class">org::lflang::generator::c::CUtil</class>
    <class kind="class">org::lflang::generator::c::CWatchdogGenerator</class>
    <class kind="class">org::lflang::generator::c::InteractingContainedReactors</class>
    <class kind="class">org::lflang::generator::c::TypeParameterizedReactor</class>
    <class kind="interface">org::lflang::generator::DelayBodyGenerator</class>
    <class kind="class">org::lflang::generator::GenerationException</class>
    <class kind="class">org::lflang::generator::GeneratorBase</class>
    <class kind="class">org::lflang::generator::GeneratorCommandFactory</class>
    <class kind="class">org::lflang::generator::GeneratorResult</class>
    <class kind="class">org::lflang::generator::GeneratorUtils</class>
    <class kind="interface">org::lflang::generator::LfExpressionVisitor</class>
    <class kind="class">org::lflang::generator::LFGenerator</class>
    <class kind="class">org::lflang::generator::python::PyFileConfig</class>
    <class kind="class">org::lflang::generator::python::PythonActionGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonDelayBodyGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonMainFunctionGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonMethodGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonModeGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonParameterGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonPortGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonPreambleGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonReactionGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonReactorGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonStateGenerator</class>
    <class kind="class">org::lflang::generator::python::PythonTypes</class>
    <class kind="class">org::lflang::generator::python::PythonValidator</class>
    <class kind="class">org::lflang::generator::python::PyUtil</class>
    <class kind="class">org::lflang::generator::rust::CargoDependencySpec</class>
    <class kind="interface">org::lflang::generator::TargetTypes</class>
    <class kind="class">org::lflang::generator::ts::TSTypes</class>
    <member kind="function">
      <type>record</type>
      <name>org.lflang.generator.Argument&lt; T &gt;</name>
      <anchorfile>group__Generator.html</anchorfile>
      <anchor>ga462b695184b8ecbc587ddfb1288b5c95</anchor>
      <arglist>(TargetProperty&lt; T, ?&gt; property, T value)</arglist>
    </member>
    <member kind="function">
      <type>record</type>
      <name>org.lflang.generator.GeneratorArguments</name>
      <anchorfile>group__Generator.html</anchorfile>
      <anchor>gafe0f6415f88e4d19311019f3a8908b0a</anchor>
      <arglist>(boolean clean, URI externalRuntimeUri, boolean hierarchicalBin, JsonObject jsonObject, boolean lint, boolean quiet, URI rti, List&lt; Argument&lt;?&gt; &gt; overrides)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Infrastructure</name>
    <title>Infrastructure</title>
    <filename>group__Infrastructure.html</filename>
    <class kind="class">org::lflang::generator::IntegratedBuilder</class>
    <class kind="interface">org::lflang::generator::LFGeneratorContext</class>
    <class kind="class">org::lflang::generator::MainContext</class>
    <class kind="class">org::lflang::generator::SubContext</class>
    <class kind="interface">org::lflang::generator::ValidationStrategy</class>
    <class kind="class">org::lflang::LFResourceDescriptionStrategy</class>
    <class kind="class">org::lflang::LFResourceProvider</class>
    <class kind="class">org::lflang::LFRuntimeModule</class>
    <class kind="class">org::lflang::LFStandaloneSetup</class>
  </compound>
  <compound kind="group">
    <name>Instances</name>
    <title>Instances</title>
    <filename>group__Instances.html</filename>
    <class kind="class">org::lflang::generator::ActionInstance</class>
    <class kind="class">org::lflang::generator::DeadlineInstance</class>
    <class kind="class">org::lflang::generator::ModeInstance</class>
    <class kind="class">org::lflang::generator::NamedInstance</class>
    <class kind="class">org::lflang::generator::ParameterInstance</class>
    <class kind="class">org::lflang::generator::PortInstance</class>
    <class kind="class">org::lflang::generator::ReactionInstance</class>
    <class kind="class">org::lflang::generator::ReactionInstanceGraph</class>
    <class kind="class">org::lflang::generator::ReactorInstance</class>
    <class kind="class">org::lflang::generator::RuntimeRange&lt; T extends NamedInstance</class>
    <class kind="class">org::lflang::generator::SendRange</class>
    <class kind="class">org::lflang::generator::StateVariableInstance</class>
    <class kind="class">org::lflang::generator::TimerInstance</class>
    <class kind="class">org::lflang::generator::TriggerInstance</class>
    <class kind="class">org::lflang::generator::WatchdogInstance</class>
  </compound>
  <compound kind="group">
    <name>LSP</name>
    <title>LSP</title>
    <filename>group__LSP.html</filename>
    <class kind="class">org::lflang::diagram::lsp::BuildArgs</class>
    <class kind="class">org::lflang::diagram::lsp::LanguageDiagramServer</class>
    <class kind="interface">org::lflang::diagram::lsp::LFLanguageClient</class>
    <class kind="class">org::lflang::diagram::lsp::LFLanguageServer</class>
    <class kind="class">org::lflang::diagram::lsp::LFLanguageServerExtension</class>
    <class kind="class">org::lflang::diagram::lsp::LibraryFile</class>
    <class kind="class">org::lflang::diagram::lsp::NodePosition</class>
    <class kind="class">org::lflang::diagram::lsp::Progress</class>
    <class kind="class">org::lflang::diagram::lsp::ReactorNode</class>
  </compound>
  <compound kind="group">
    <name>Tests</name>
    <title>Tests</title>
    <filename>group__Tests.html</filename>
    <class kind="class">org::lflang::tests::lsp::ErrorInserter</class>
    <class kind="class">org::lflang::tests::lsp::LspTests</class>
    <class kind="class">org::lflang::tests::lsp::MockCancelIndicator</class>
    <class kind="class">org::lflang::tests::lsp::MockLanguageClient</class>
    <class kind="class">org::lflang::tests::lsp::MockReportProgress</class>
    <class kind="class">org::lflang::tests::RunSingleTest</class>
    <class kind="class">org::lflang::tests::runtime::CArduinoTest</class>
    <class kind="class">org::lflang::tests::runtime::CCppTest</class>
    <class kind="class">org::lflang::tests::runtime::CFlexPRETTest</class>
    <class kind="class">org::lflang::tests::runtime::CPatmosTest</class>
    <class kind="class">org::lflang::tests::runtime::CppRos2Test</class>
    <class kind="class">org::lflang::tests::runtime::CppTest</class>
    <class kind="class">org::lflang::tests::runtime::CSchedulerTest</class>
    <class kind="class">org::lflang::tests::runtime::CTest</class>
    <class kind="class">org::lflang::tests::runtime::CVerifierTest</class>
    <class kind="class">org::lflang::tests::runtime::CZephyrTest</class>
    <class kind="class">org::lflang::tests::runtime::PythonTest</class>
    <class kind="class">org::lflang::tests::runtime::RustTest</class>
    <class kind="class">org::lflang::tests::runtime::TypeScriptTest</class>
    <class kind="class">org::lflang::tests::RuntimeTest</class>
    <class kind="class">org::lflang::tests::serialization::SerializationTest</class>
  </compound>
  <compound kind="group">
    <name>Utilities</name>
    <title>Utilities</title>
    <filename>group__Utilities.html</filename>
    <class kind="interface">org::lflang::ast::AstTransformation</class>
    <class kind="class">org::lflang::ast::ASTUtils</class>
    <class kind="class">org::lflang::ast::DelayedConnectionTransformation</class>
    <class kind="class">org::lflang::ast::FormattingUtil</class>
    <class kind="class">org::lflang::ast::IsEqual</class>
    <class kind="class">org::lflang::ast::LfParsingHelper</class>
    <class kind="class">org::lflang::ast::MalleableString</class>
    <class kind="class">org::lflang::ast::ToLf</class>
    <class kind="class">org::lflang::ast::ToSExpr</class>
    <class kind="class">org::lflang::ast::ToText</class>
    <class kind="class">org::lflang::AttributeUtils</class>
    <class kind="class">org::lflang::FileConfig</class>
    <class kind="class">org::lflang::generator::CodeBuilder</class>
    <class kind="class">org::lflang::generator::CodeMap</class>
    <class kind="class">org::lflang::generator::MixedRadixInt</class>
    <class kind="class">org::lflang::generator::Position</class>
    <class kind="class">org::lflang::generator::Range</class>
    <class kind="class">org::lflang::InferredType</class>
  </compound>
  <compound kind="group">
    <name>Validation</name>
    <title>Validation</title>
    <filename>group__Validation.html</filename>
    <class kind="class">org::lflang::DefaultMessageReporter</class>
    <class kind="class">org::lflang::generator::DiagnosticReporting</class>
    <class kind="class">org::lflang::generator::HumanReadableReportingStrategy</class>
    <class kind="class">org::lflang::generator::InvalidLfSourceException</class>
    <class kind="class">org::lflang::generator::InvalidSourceException</class>
    <class kind="class">org::lflang::generator::LanguageServerMessageReporter</class>
    <class kind="class">org::lflang::generator::UnsupportedGeneratorFeatureException</class>
    <class kind="class">org::lflang::generator::Validator</class>
    <class kind="class">org::lflang::LFSyntaxErrorMessageProvider</class>
  </compound>
  <compound kind="page">
    <name>md__2Users_2runner_2work_2lingua-franca_2lingua-franca_2CONTRIBUTING</name>
    <title>Contributing to Lingua Franca</title>
    <filename>md__2Users_2runner_2work_2lingua-franca_2lingua-franca_2CONTRIBUTING.html</filename>
  </compound>
  <compound kind="page">
    <name>md__2Users_2runner_2work_2lingua-franca_2lingua-franca_2LICENSE</name>
    <title>LICENSE</title>
    <filename>md__2Users_2runner_2work_2lingua-franca_2lingua-franca_2LICENSE.html</filename>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>Lingua Franca</title>
    <filename>index.html</filename>
  </compound>
</tagfile>
