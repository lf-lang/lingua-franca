// Test multiport to multiport connections. See also MultiportToMultiport.
target TypeScript

reactor Source(width: number = 2) {
  output[width] out: number

  reaction(startup) -> out {=
    for (let i = 0; i < out.length; i++) {
      out[i] = i;
    }
  =}
}

reactor Destination(width: number = 2) {
  input[width] inp: number

  reaction(inp) {=
    for (let i = 0; i < inp.length; i++) {
      if (inp[i] !== undefined) {
        let value = inp[i];
        console.log("Received on channel " + i + ": " + value);
        // NOTE: For testing purposes, this assumes the specific
        // widths instantiated below.
        if (value != i % 3) {
          util.requestErrorStop("ERROR: expected " + i % 3);
        }
      }
    }
    let elapsedTime = util.getElapsedLogicalTime();
    if (!elapsedTime.isEqualTo(TimeValue.msec(1000))) {
      util.requestErrorStop("ERROR: Expected to receive input after one second.");
    }
  =}
}

main reactor {
  a1 = new Source(width=3)
  a2 = new Source(width=2)
  b = new Destination(width=5)
  a1.out, a2.out -> b.inp after 1 sec
}
