target TypeScript {
  timeout: 2 sec
}

reactor Source {
  output out: number

  reaction(startup) -> out {= out = 42; =}
}

reactor Destination {
  input inp: number
  state received: boolean = false

  reaction(inp) {=
    console.log("Destination " +  this.getBankIndex() + " received " + inp + ".");
    if (inp != 42) {
      util.requestErrorStop("ERROR: Expected 42.");
    }
    let elapsedTime = util.getElapsedLogicalTime();
    if (!elapsedTime.isEqualTo(TimeValue.sec(1))) {
      util.requestErrorStop("ERROR: Expected to receive input after one second.");
    }
    received = true;
  =}

  reaction(shutdown) {=
    if (!received) {
      util.reportError("ERROR: Destination " + this.getBankIndex() + " received no input!");
    }
    console.log("Success.");
  =}
}

main reactor {
  a = new Source()
  b = new[4] Destination()
  (a.out)+ -> b.inp after 1 sec
}
