target TypeScript {
  timeout: 2 sec
}

reactor Source(value: number = 42) {
  output out: number

  reaction(startup) -> out {= out = value; =}
}

reactor Destination {
  input inp: number
  state received: boolean = false

  reaction(inp) {=
    console.log("Destination " + this.getBankIndex() + " received " + inp + ".");
    let expected = (this.getBankIndex() % 3) + 1;
    if (inp != expected) {
      util.requestErrorStop("ERROR: Expected " + expected + ".");
    }
    let elapsedTime = util.getElapsedLogicalTime();
    if (!elapsedTime.isEqualTo(TimeValue.sec(1))) {
      util.requestErrorStop("ERROR: Expected to receive input after one second.");
    }
    received = true;
  =}

  reaction(shutdown) {=
    if (!received) {
      util.requestErrorStop("ERROR: Destination " + this.getBankIndex() + " received no input!");
    }
    console.log("Success.");
  =}
}

main reactor {
  a1 = new Source(value=1)
  a2 = new Source(value=2)
  a3 = new Source(value=3)
  b = new[9] Destination()
  (a1.out, a2.out, a3.out)+ -> b.inp after 1 sec
}
