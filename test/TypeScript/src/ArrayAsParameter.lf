// Source has an array as a parameter, the elements of which it passes to Print.
target TypeScript

reactor Source(sequence: {= Array<number> =} = {= [0, 1, 2] =}) {
  output out: number
  state count: number = 0
  logical action next

  reaction(startup, next) -> out, next {=
    out = sequence[count];
    count++;
    if (count < sequence.length) {
      actions.next.schedule(0, null);
    }
  =}
}

reactor Print {
  input x: number
  state count: number = 1

  reaction(x) {=
    console.log("Received: " + x + ".");
    if (x != count) {
      util.requestErrorStop("ERROR: Expected " + count + ".");
    }
    count++;
  =}
}

main reactor ArrayAsParameter {
  s = new Source(sequence = {= [1, 2, 3, 4] =})
  p = new Print()
  s.out -> p.x
}
