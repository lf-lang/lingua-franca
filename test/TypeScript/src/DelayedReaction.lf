// Test delay made on a connection.
target TypeScript

reactor Source {
  output out: number
  timer t

  reaction(t) -> out {= out = 1; =}
}

reactor Sink {
  input x: number

  reaction(x) {=
    let elapsed = util.getElapsedLogicalTime();
    console.log("Nanoseconds since start: " + elapsed);
    if (! elapsed.isEqualTo(TimeValue.msec(100))) {
      util.requestErrorStop("ERROR: Expected 100 msecs but got" + elapsed)
    }
  =}
}

main reactor DelayedReaction {
  source = new Source()
  sink = new Sink()
  source.out -> sink.x after 100 msec
}
