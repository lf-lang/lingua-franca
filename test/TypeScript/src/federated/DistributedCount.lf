/**
 * Test a particularly simple form of a distributed deterministic system where a federation that
 * receives timestamped messages has only those messages as triggers. Therefore, no additional
 * coordination of the advancement of time (HLA or Ptides) is needed.
 * @author Edward A. Lee
 * @author Hokeun Kim
 */
target TypeScript {
  timeout: 5 sec
}

import Count from "../lib/Count.lf"

reactor Print {
  input inp: number
  state c: number = 1

  reaction(inp) {=
    const elapsedTime = util.getElapsedLogicalTime();
    console.log("At time " + elapsedTime + ", received " + inp);
    if (inp !== c) {
      util.requestErrorStop("Expected to receive " + c + ".");
    }
    if (!elapsedTime.isEqualTo(TimeValue.msec(200).add(TimeValue.sec(c - 1)))) {
      util.requestErrorStop("Expected received time to be " + TimeValue.msec(200).add(TimeValue.sec(c - 1)) + ".");
    }
    c++;
  =}

  reaction(shutdown) {=
    if (c != 6) {
      util.reportError("Expected to receive 5 items.");
    }
  =}
}

federated reactor DistributedCount(offset: time = 200 msec) {
  c = new Count()
  p = new Print()
  c.out -> p.inp after offset
}
