/**
 * Test a distributed system where a federation receives messages only over connections that are
 * marked 'physical' (using the ~> arrow) with an after delay. The receiver verifies that the after
 * delay is correctly imposed.
 *
 * @author Edward A. Lee
 * @author Soroush Bateni
 * @author Byeong-gil Jun
 */
target TypeScript {
  logging: debug,
  keepalive: true
}

import Count from "../lib/Count.lf"

reactor Print {
  input inp: number
  state c: number = 1

  reaction(inp) {=
  const elapsedTime = util.getElapsedLogicalTime();
  console.log(`At time ${elapsedTime}, received ${inp}`);
  if (inp !== c) {
    util.requestErrorStop(`ERROR: Expected to receive ${c}.`);
  }
  if (!elapsedTime.isLaterThan(TimeValue.msec(600))) {
    util.requestErrorStop(`ERROR: Expected received time to be strictly greater than ${TimeValue.msec(600)}`);
  }
  c++;
  console.log(`c = ${c}`);
  util.requestStop();
  =}

  reaction(shutdown) {=
  if (c !== 2) {
    util.requestErrorStop(`ERROR: Expected to receive 1 item. Received ${c - 1}.`);
  } else {
    console.log("SUCCESS: Successfully received 1 item.");
  }
  =}
}

federated reactor at localhost {
  c = new Count(offset = 200 msec, period = 0)
  p = new Print()
  c.out ~> p.inp after 400 msec  // Indicating a 'physical' connection with a 400 msec after delay.
}
