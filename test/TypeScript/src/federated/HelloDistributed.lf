/**
 * Test a particularly simple form of a distributed deterministic system where a federation that
 * receives timestamped messages has only those messages as triggers. Therefore, no additional
 * coordination of the advancement of time (HLA or Ptides) is needed.
 * @author Edward A. Lee
 * @author Hokeun Kim
 */
target TypeScript

reactor Source {
  output out: string

  reaction(startup) -> out {=
    console.log("Sending 'Hello World!' message from source federate.");
    out = "Hello World!";
    util.requestStop();
  =}
}

reactor Destination {
  input inp: string
  state received: boolean = false

  reaction(startup) {= console.log("Destination started."); =}

  reaction(inp) {=
    console.log(`At logical time ${util.getElapsedLogicalTime()}, destination received: ` + inp);
    if (inp !== "Hello World!") {
      util.requestErrorStop("ERROR: Expected to receive 'Hello World!'");
    }
    received = true;
  =}

  reaction(shutdown) {=
    console.log("Shutdown invoked.");
    if (!received) {
      util.reportError("Destination did not receive the message.");
    }
  =}
}

federated reactor HelloDistributed at localhost {
  s = new Source()       // Reactor s is in federate Source
  d = new Destination()  // Reactor d is in federate Destination
  s.out -> d.inp         // This version preserves the timestamp.

  reaction(startup) {= console.log("Printing something in top-level federated reactor."); =}
}
