// Source produces a struct directly, rather than a pointer to a struct.
target TypeScript

reactor Source {
  preamble {=
    type hello_t =  {
      name: string ;
      value: number;
    }
  =}
  output out: hello_t

  reaction(startup) -> out {=
    // Create the struct on the stack and then copy
    // it to the output as follows:
    let temp: hello_t = {name: "Earth", value: 42}
    out = temp;
  =}
}

// expected parameter is for testing.
reactor Print(expected: number = 42) {
  input x: hello_t

  reaction(x) {=
    x = x as hello_t;
    console.log("Received: name = " + x.name + ", value = " + x.value);
    if (x.value != expected) {
      util.requestErrorStop("ERROR: Expected value to be " + expected)
    }
  =}
}

main reactor {
  s = new Source()
  p = new Print()
  s.out -> p.x
}
