/** Modal Reactor Test. Tests reset of state variables in modes. */
target C {
  fast: false,
  timeout: 4 sec
}

import TraceTesting from "util/TraceTesting.lf"

reactor Modal {
  input next: bool

  output mode_switch: int
  output count0: int
  output count1: int
  output count2: int

  state counter0: int = 0

  reaction(next) -> count0 {=
    printf("Counter0: %d\n", self->counter0);
    lf_set(count0, self->counter0++);
  =}

  initial mode One {
    state counter1: int = 0
    timer T1(0 msec, 250 msec)
    reaction(reset) {= self->counter1 = 0; =}

    reaction(T1) -> count1 {=
      printf("Counter1: %d\n", self->counter1);
      lf_set(count1, self->counter1++);
    =}

    reaction(next) -> reset(Two), mode_switch {=
      printf("Transitioning to mode Two (reset)\n");
      lf_set(mode_switch, 1);
      lf_set_mode(Two);
    =}
  }

  mode Two {
    state counter2: int = -2
    timer T2(0 msec, 250 msec)
    reaction(reset) {= self->counter2 = -2; =}

    reaction(T2) -> count2 {=
      printf("Counter2: %d\n", self->counter2);
      lf_set(count2, self->counter2++);
    =}

    reaction(next) -> history(One), mode_switch {=
      printf("Transitioning to mode One (continue)\n");
      lf_set(mode_switch, 1);
      lf_set_mode(One);
    =}
  }
}

main reactor {
  timer stepper(1 sec, 1 sec)

  modal = new Modal()
  test = new TraceTesting(events_size = 4, trace_size = 171, trace = {  // keep-format
    0,0,0,0,0,1,0,0,0,
    250000000,0,0,0,0,1,1,0,0,
    250000000,0,0,0,0,1,2,0,0,
    250000000,0,0,0,0,1,3,0,0,
    250000000,1,1,1,0,1,4,0,0,
    0,0,1,0,0,0,4,1,-2,
    250000000,0,1,0,0,0,4,1,-1,
    250000000,0,1,0,0,0,4,1,0,
    250000000,0,1,0,0,0,4,1,1,
    250000000,1,1,1,1,0,4,1,2,
    250000000,0,1,0,1,1,5,0,2,
    250000000,0,1,0,1,1,6,0,2,
    250000000,0,1,0,1,1,7,0,2,
    250000000,1,1,1,2,1,8,0,2,
    0,0,1,0,2,0,8,1,-2,
    250000000,0,1,0,2,0,8,1,-1,
    250000000,0,1,0,2,0,8,1,0,
    250000000,0,1,0,2,0,8,1,1,
    250000000,1,1,1,3,0,8,1,2
  }, training = false)

  modal.mode_switch, modal.count0, modal.count1, modal.count2 -> test.events

  reaction(stepper) -> modal.next {= lf_set(modal.next, true); =}  // Trigger mode change
}
