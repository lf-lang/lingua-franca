/*
 * Modal Reactor Test.
 * 
 * Tests if connections in the same reactor that have the same destination work if they are located in separate modes.
 */
target C {
    fast: false,
    timeout: 2 sec
};

import TraceTesting from "util/TraceTesting.lf"

reactor Modal {
	input next:bool;
	output count:int;
	
    initial mode One {
		counter1 = new Counter(period=250msec);
		counter1.value -> count;
		
		reaction(next) -> Two {=
            lf_set_mode(Two);
		=}
    }
    mode Two {
		counter2 = new Counter(period=100msec);
		counter2.value -> count;
        
		reaction(next) -> continue(One) {=
            lf_set_mode(One);
		=}
    }
}

reactor Counter(period:time(1sec)) {
    output value:int
    
    timer t(0, period)
    state curval:int(0)
    
    reaction(t) -> value {=
        lf_set(value, self->curval++);
    =}
}

main reactor {
    timer stepper(500msec, 500msec)
    
    modal = new Modal()
    test = new TraceTesting(
        events_size = 1,
        trace_size = 51, 
        trace = (
            0,1,0,
            250000000,1,1,
            250000000,1,2,
            0,1,0,
            100000000,1,1,
            100000000,1,2,
            100000000,1,3,
            100000000,1,4,
            100000000,1,5,
            250000000,1,3,
            250000000,1,4,
            0,1,0,
            100000000,1,1,
            100000000,1,2,
            100000000,1,3,
            100000000,1,4,
            100000000,1,5
        ), training = false)

    // Trigger mode change
    reaction(stepper) -> modal.next {=
        lf_set(modal.next, true);
    =}
    
    // Print
    reaction(modal.count) {=
        printf("%d\n", modal.count->value);
    =}
    
    modal.count
    -> test.events
}