/** Modal Reactor Test. Tests reset of state variables in modes with banks of reactors. */
target C {
  fast: false,
  timeout: 4 sec
}

import TraceTesting from "util/TraceTesting.lf"
import Modal as ResetReaction from "ModalStateReset.lf"
import Modal as AutoReset from "ModalStateResetAuto.lf"

main reactor {
  timer stepper(1 sec, 1 sec)

  reset1 = new[2] ResetReaction()
  reset2 = new[2] AutoReset()
  test = new TraceTesting(events_size = 16, trace_size = 627, trace = {  // keep-format
        0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,   0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,
    250000000,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,   0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,
    250000000,0,0,0,0,0,0,0,0,1,2,1,2,0,0,0,0,   0,0,0,0,0,0,0,0,1,2,1,2,0,0,0,0,
    250000000,0,0,0,0,0,0,0,0,1,3,1,3,0,0,0,0,   0,0,0,0,0,0,0,0,1,3,1,3,0,0,0,0,
    250000000,1,1,1,1,1,0,1,0,1,4,1,4,0,0,0,0,   1,1,1,1,1,0,1,0,1,4,1,4,0,0,0,0,
        0,0,1,0,1,0,0,0,0,0,4,0,4,1,-2,1,-2, 0,1,0,1,0,0,0,0,0,4,0,4,1,-2,1,-2,
    250000000,0,1,0,1,0,0,0,0,0,4,0,4,1,-1,1,-1, 0,1,0,1,0,0,0,0,0,4,0,4,1,-1,1,-1,
    250000000,0,1,0,1,0,0,0,0,0,4,0,4,1,0,1,0,   0,1,0,1,0,0,0,0,0,4,0,4,1,0,1,0,
    250000000,0,1,0,1,0,0,0,0,0,4,0,4,1,1,1,1,   0,1,0,1,0,0,0,0,0,4,0,4,1,1,1,1,
    250000000,1,1,1,1,1,1,1,1,0,4,0,4,1,2,1,2,   1,1,1,1,1,1,1,1,0,4,0,4,1,2,1,2,
    250000000,0,1,0,1,0,1,0,1,1,5,1,5,0,2,0,2,   0,1,0,1,0,1,0,1,1,5,1,5,0,2,0,2,
    250000000,0,1,0,1,0,1,0,1,1,6,1,6,0,2,0,2,   0,1,0,1,0,1,0,1,1,6,1,6,0,2,0,2,
    250000000,0,1,0,1,0,1,0,1,1,7,1,7,0,2,0,2,   0,1,0,1,0,1,0,1,1,7,1,7,0,2,0,2,
    250000000,1,1,1,1,1,2,1,2,1,8,1,8,0,2,0,2,   1,1,1,1,1,2,1,2,1,8,1,8,0,2,0,2,
        0,0,1,0,1,0,2,0,2,0,8,0,8,1,-2,1,-2, 0,1,0,1,0,2,0,2,0,8,0,8,1,-2,1,-2,
    250000000,0,1,0,1,0,2,0,2,0,8,0,8,1,-1,1,-1, 0,1,0,1,0,2,0,2,0,8,0,8,1,-1,1,-1,
    250000000,0,1,0,1,0,2,0,2,0,8,0,8,1,0,1,0,   0,1,0,1,0,2,0,2,0,8,0,8,1,0,1,0,
    250000000,0,1,0,1,0,2,0,2,0,8,0,8,1,1,1,1,   0,1,0,1,0,2,0,2,0,8,0,8,1,1,1,1,
    250000000,1,1,1,1,1,3,1,3,0,8,0,8,1,2,1,2,   1,1,1,1,1,3,1,3,0,8,0,8,1,2,1,2
  }, training = false)

  reset1.mode_switch,
  reset1.count0,
  reset1.count1,
  reset1.count2,
  reset2.mode_switch,
  reset2.count0,
  reset2.count1,
  reset2.count2 -> test.events

  // Trigger mode change (separately because of #1278)
  reaction(stepper) -> reset1.next {=
    for(int i = 0; i < reset1_width; i++) {
      lf_set(reset1[i].next, true);
    }
  =}

  reaction(stepper) -> reset2.next {=
    for(int i = 0; i < reset2_width; i++) {
      lf_set(reset2[i].next, true);
    }
  =}
}
