// This test connects a simple counting source to tester that checks against its own count.
target C {
  fast: true,
  timeout: 10 sec
}

reactor Source(period: time = 2 sec) {
  output y: int
  timer t(1 sec, period)
  state count: int = 0

  reaction(t) -> y {=
    (self->count)++;
    printf("Source sending %d.\n", self->count);
    lf_set(y, self->count);
  =}
}

reactor Test {
  input x: int
  state count: int = 0

  reaction(x) {=
    (self->count)++;
    printf("Received %d\n", x->value);
    if (x->value != self->count) {
      fprintf(stderr, "FAILURE: Expected %d\n", self->count);
      exit(1);
    }
  =}

  reaction(shutdown) {=
    if (self->count == 0) {
      fprintf(stderr, "FAILURE: No data received.\n");
    }
  =}
}

main reactor Composition {
  s = new Source()

  d = new Test()
  s.y -> d.x
}
