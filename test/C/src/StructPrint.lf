// Source produces a dynamically allocated struct, which it passes to Print. Reference counting
// ensures that the struct is freed.
target C {
  files: ["include/hello.h"]
}

import Source, Print from "DelayStruct.lf"

preamble {=
  #include "hello.h"
=}

main reactor {
  s = new Source()
  p = new Print()
  s.out -> p.in
}
