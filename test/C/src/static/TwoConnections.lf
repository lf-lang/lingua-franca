target C {
    scheduler: STATIC,
    timeout: 10 sec,
    build-type: Debug,
    // logging: DEBUG,
}

reactor Source(id:int = 0, period:time = 1 sec) {
    output out:int
    timer t(0, period)
    state s:int = 0
    reaction(t) -> out {=
        long long int logical_time = lf_time_logical();
        long long int physical_time = lf_time_physical();
        long long int lag = physical_time - logical_time;
        lf_set(out, self->s);
        lf_print("[Source %d] Sent %d @ logical time %lld, physical time %lld, lag %lld", self->id, self->s++, logical_time, physical_time, lag);
    =}
}

reactor Sink(id:int = 0) {
    input in:int
    reaction(in) {=
        long long int logical_time = lf_time_logical();
        long long int physical_time = lf_time_physical();
        long long int lag = physical_time - logical_time;
        lf_print("[Sink %d] Received %d @ logical time %lld, physical time %lld, lag %lld", self->id, in->value, logical_time, physical_time, lag);
    =}
}

main reactor {
    source1 = new Source(id = 1, period = 1 sec)
    source2 = new Source(id = 2, period = 10 sec)
    sink1 = new Sink(id = 1)
    sink2 = new Sink(id = 2)
    source1.out -> sink1.in after 2 sec
    source2.out -> sink2.in after 3 sec
}