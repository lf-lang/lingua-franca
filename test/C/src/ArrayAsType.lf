// Source produces a statically allocated array, which it passes to Print. The destination
// references the array directly.
target C

reactor Source {
  output out: int[3]

  reaction(startup) -> out {=
    out->value[0] = 0;
    out->value[1] = 1;
    out->value[2] = 2;
    SET_PRESENT(out);
  =}
}

// The scale parameter is just for testing.
reactor Print(scale: int = 1) {
  input in: int[3]

  reaction(in) {=
    int count = 0;     // For testing.
    bool failed = false; // For testing.
    printf("Received: [");
    for (int i = 0; i < 3; i++) {
      if (i > 0) printf(", ");
      printf("%d", in->value[i]);
      // For testing, check whether values match expectation.
      if (in->value[i] != self->scale * count) {
        failed = true;
      }
      count++;     // For testing.
    }
    printf("]\n");
    if (failed) {
      printf("ERROR: Value received by Print does not match expectation!\n");
      exit(1);
    }
  =}
}

main reactor ArrayAsType {
  s = new Source()
  p = new Print()
  s.out -> p.in
}
