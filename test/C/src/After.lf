// This checks that the after keyword adjusts logical time, not using physical time.
target C {
  fast: false,
  timeout: 3 sec
}

reactor foo {
  input x: int
  output y: int

  reaction(x) -> y {= lf_set(y, 2*x->value); =}
}

reactor print {
  state expected_time: time = 10 msec
  state received: int = 0
  input x: int

  reaction(x) {=
    self->received++;
    interval_t elapsed_time = lf_time_logical_elapsed();
    printf("Result is %d\n", x->value);
    if (x->value != 84) {
      printf("ERROR: Expected result to be 84.\n");
      exit(1);
    }
    printf("Current logical time is: %lld\n", elapsed_time);
    printf("Current physical time is: %lld\n", lf_time_physical_elapsed());
    if (elapsed_time != self->expected_time) {
      printf("ERROR: Expected logical time to be %lld.\n", self->expected_time);
      exit(2);
    }
    self->expected_time += SEC(1);
  =}

  reaction(shutdown) {=
    if (self->received == 0) {
      printf("ERROR: Final reactor received no data.\n");
      exit(3);
    }
  =}
}

main reactor After {
  f = new foo()
  p = new print()
  timer t(0, 1 sec)
  f.y -> p.x after 10 msec

  reaction(t) -> f.x {= lf_set(f.x, 42); =}
}
