/** There seems to be some problem with infinite feedback loops. */
target C

reactor Source {
  input inp: int
  output out: int
  logical action start(1 nsec)
  state received: int

  reaction(startup) -> start {=
    self->received = 0;
    lf_schedule(start, 0);
  =}

  reaction(start) -> out {=
    lf_set(out, self->received);
  =}

  /** Uncomment the following to debug feedback loops. */
  // reaction(inp) -> start {=
  reaction(inp) {=
    self->received = inp->value;
    // lf_schedule(start, 0);
  =}
}

reactor Node {
  input inp: int
  output out: int

  reaction(inp) -> out {=
    lf_set(out, inp->value + 1);
  =}
}

@property(
    name = "full_circle",
    tactic = "bmc",
    spec = "F[0, 10 nsec](Ring.s.reaction_3)",
    expect = true)
main reactor {
  s = new Source()
  n1 = new Node()
  n2 = new Node()
  n3 = new Node()
  n4 = new Node()
  n5 = new Node()
  s.out -> n1.inp after 1 nsec
  n1.out -> n2.inp after 1 nsec
  n2.out -> n3.inp after 1 nsec
  n3.out -> n4.inp after 1 nsec
  n4.out -> n5.inp after 1 nsec
  n5.out -> s.inp after 1 nsec
}
