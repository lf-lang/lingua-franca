// This checks that action can be created even if there is no reaction. This test passes merely by
// compiling and executing without a segfault. Its other functionality is tested by other tests.
target C {
  fast: true,
  timeout: 3 sec
}

reactor foo {
  input x: int
  output y: int
  logical action a: int*

  // reaction(a) {= =}
  reaction(x) -> y, a {=
    lf_set(y, 2*x->value);
    lf_schedule(a, MSEC(500));
  =}
}

reactor print {
  input x: int

  reaction(x) {=
    printf("Result is %d\n", x->value);
    printf("Current logical time is: %lld\n", lf_time_logical_elapsed());
    printf("Current physical time is: %lld\n", lf_time_physical_elapsed());
  =}
}

main reactor ActionWithNoReaction {
  f = new foo()
  p = new print()
  timer t(0, 1 sec)
  f.y -> p.x after 10 msec

  reaction(t) -> f.x {= lf_set(f.x, 42); =}
}
