/**
 * A sender reactor that outputs integers in superdense time.
 *
 * @author Soroush Bateni
 */
target C

/**
 * @param take_a_break_after: Indicates how many messages are sent in consecutive superdense time
 * @param break_interval: Determines how long the reactor should take a break after sending
 * take_a_break_after messages.
 */
reactor Sender(take_a_break_after: int = 10, break_interval: time = 400 msec) {
  output out: int
  logical action act
  state sent_messages: int = 0

  reaction(startup, act) -> act, out {=
    // Send a message on out
    /* printf("At tag (%lld, %u) sending value %d.\n",
      lf_time_logical_elapsed(),
      lf_tag().microstep,
      self->sent_messages
    ); */
    lf_set(out, self->sent_messages);
    self->sent_messages++;
    if (self->sent_messages < self->take_a_break_after) {
      lf_schedule(act, 0);
    } else {
      // Take a break
      self->sent_messages=0;
      lf_schedule(act, self->break_interval);
    }
  =}
}
