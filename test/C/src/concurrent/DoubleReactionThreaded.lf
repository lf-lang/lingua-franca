// Test that two simultaneous inputs that trigger a reaction trigger it only once. Correct output
// for this 2, 4, 6, 8, etc.
target C {
  timeout: 10 sec,
  fast: true
}

reactor Clock(offset: time = 0, period: time = 1 sec) {
  output y: int
  timer t(offset, period)
  state count: int = 0

  reaction(t) -> y {=
    (self->count)++;
    lf_set(y, self->count);
  =}
}

reactor Destination {
  input x: int
  input w: int
  state s: int = 2

  reaction(x, w) {=
    int sum = 0;
    if (x->is_present) {
      sum += x->value;
    }
    if (w->is_present) {
      sum += w->value;
    }
    printf("Sum of inputs is: %d\n", sum);
    if (sum != self->s) {
      printf("FAILURE: Expected sum to be %d, but it was %d.\n", self->s, sum);
      exit(1);
    }
    self->s += 2;
  =}
}

main reactor DoubleReactionThreaded {
  c1 = new Clock()
  c2 = new Clock()
  d = new Destination()
  c1.y -> d.x
  c2.y -> d.w
}
