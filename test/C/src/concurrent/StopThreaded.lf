/**
 * A test for the lf_request_stop() functionality in Lingua Franca. This version of the test is
 * threaded.
 *
 * @author Soroush Bateni
 */
target C {
  timeout: 11 msec,
  build-type: RelWithDebInfo  // logging: DEBUG
}

import Sender from "../lib/LoopedActionSender.lf"

reactor Consumer {
  input in: int
  state reaction_invoked_correctly: bool = false

  reaction(in) {=
    tag_t current_tag = lf_tag();
    if (lf_tag_compare(current_tag,
             (tag_t) { .time = MSEC(10) + lf_time_start(), .microstep = 9}) > 0) {
      // The reaction should not have been called at tags larger than (10
      // msec, 9)
      char time[255];
      lf_print_error_and_exit("Invoked reaction(in) at tag (%llu, %d) which is bigger than shutdown.",
        current_tag.time - lf_time_start(), current_tag.microstep);
    } else if (lf_tag_compare(current_tag,
             (tag_t) { .time = MSEC(10) + lf_time_start(), .microstep = 8}) == 0) {
      // Call lf_request_stop() at relative tag (10 msec, 8)
      lf_print("Requesting stop.");
      lf_request_stop();
    } else if (lf_tag_compare(current_tag,
             (tag_t) { .time = MSEC(10) + lf_time_start(), .microstep = 9}) == 0) {
      // Check that this reaction is indeed also triggered at (10 msec, 9)
      // printf("Reaction invoked.\n");
      self->reaction_invoked_correctly = true;
    }
  =}

  reaction(shutdown) {=
    tag_t current_tag = lf_tag();
    lf_print("Shutdown invoked at tag (%lld, %u).", current_tag.time - lf_time_start(), current_tag.microstep);
    // Check to see if shutdown is called at relative tag (10 msec, 9)
    if (lf_tag_compare(current_tag,
      (tag_t) { .time = MSEC(10) + lf_time_start(), .microstep = 9}) == 0 &&
      self->reaction_invoked_correctly == true) {
      lf_print("SUCCESS: successfully enforced stop.");
    } else if(lf_tag_compare(current_tag,
      (tag_t) { .time = MSEC(10) + lf_time_start(), .microstep = 9}) > 0) {
        lf_print_error_and_exit("Shutdown invoked at tag (%llu, %d). Failed to enforce timeout.",
              current_tag.time - lf_time_start(), current_tag.microstep);
    } else if (self->reaction_invoked_correctly == false) {
      // Check to see if reactions were called correctly
      lf_print_error_and_exit("Failed to invoke reaction(in) at tag (%llu, %d).",
              current_tag.time - lf_time_start(), current_tag.microstep);
    }
  =}
}

main reactor {
  consumer = new[4] Consumer()
  producer = new[4] Sender(break_interval = 1 msec)

  producer.out -> consumer.in
}
