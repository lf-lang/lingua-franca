// This test connects a simple counting source to tester that checks against its own count.
target C {
  timeout: 10 sec,
  fast: true
}

reactor A_Really_Long_Name_For_A_Source(period: time = 2 sec) {
  output y: int
  timer t(1 sec, period)
  state count: int = 0

  reaction(t) -> y {=
    (self->count)++;
    lf_set(y, self->count);
  =}
}

reactor Another_Really_Long_Name_For_A_Test_Class {
  input x: int
  state count: int = 0

  reaction(x) {=
    (self->count)++;
    printf("Received %d\n", x->value);
    if (x->value != self->count) {
      printf("FAILURE: Expected %d\n", self->count);
      exit(1);
    }
  =}
}

main reactor IdentifierLength {
  a_really_long_name_for_a_source_instance = new A_Really_Long_Name_For_A_Source()
  another_really_long_name_for_a_test_instance = new Another_Really_Long_Name_For_A_Test_Class()
  a_really_long_name_for_a_source_instance.y -> another_really_long_name_for_a_test_instance.x
}
