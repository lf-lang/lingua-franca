target C {
  fast: true,
  build-type: Debug,  // logging: DEBUG,
  scheduler: STATIC
}

preamble {=
  #define ITERATION 1000
=}

reactor A(iteration: int = 1000) {
  input in: int
  output out: int
  state count: int = 0

  reaction(startup, in) -> out {=
    self->count++;
    lf_set(out, self->count);
    lf_print("In A: count = %d", self->count);
  =}
}

reactor B(iteration: int = 1000) {
  input in: int
  output out: int

  reaction(in) -> out {=
    lf_print("In B");
    if (in->value < self->iteration)
        lf_set_present(out);
    else if (in->value == self->iteration)
        lf_print("SUCCESS: all iterations finished.");
  =}
}

main reactor {
  a = new A(iteration = {= ITERATION =})
  b = new B(iteration = {= ITERATION =})
  a.out -> b.in
  b.out -> a.in after 1 msec
}
