// Check bank of reactors sending to bank of reactors with multiports.
target C {
  timeout: 2 sec,
  fast: true
}

reactor Source(width: int = 1) {
  timer t(0, 200 msec)
  output[width] out: int
  state s: int = 0

  reaction(t) -> out {=
    for(int i = 0; i < out_width; i++) {
      lf_set(out[i], self->s++);
    }
  =}
}

reactor Destination(width: int = 1) {
  state s: int = 6
  input[width] in: int

  reaction(in) {=
    int sum = 0;
    for (int i = 0; i < in_width; i++) {
      if (in[i]->is_present) sum += in[i]->value;
    }
    printf("Sum of received: %d.\n", sum);
    if (sum != self->s) {
      printf("ERROR: Expected %d.\n", self->s);
      exit(1);
    }
    self->s += 16;
  =}

  reaction(shutdown) {=
    if (self->s <= 6) {
      fprintf(stderr, "ERROR: Destination received no input!\n");
      exit(1);
    }
    printf("Success.\n");
  =}
}

main reactor BankToBankMultiport(bank_width: int = 4) {
  a = new[bank_width] Source(width=4)
  b = new[bank_width] Destination(width=4)
  a.out -> b.in
}
