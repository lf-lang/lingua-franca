target C

reactor Base(bank_index: int = 0) {
  input[2] I: int
  state received: bool = false

  reaction(shutdown) {=
    if(!self->received) {
      lf_print_error_and_exit("Bank member %d did not receive all inputs.",
        self->bank_index
      );
    }
  =}
}

reactor Hello extends Base {
  reaction(I) {=
    if (I[0]->is_present && I[1]->is_present) {
      printf("Hello %d\n", self->bank_index);
      self->received = true;
    }
  =}
}

reactor World extends Base {
  reaction(I) {=
    if (I[0]->is_present && I[1]->is_present) {
      printf("World %d\n", self->bank_index);
      self->received = true;
    }
  =}
}

main reactor {
  hellos = new[3] Hello()
  worlds = new[3] World()

  reaction(startup) -> hellos.I, worlds.I {=
    for(int i = 0; i < hellos_width; i++) {
      lf_set(hellos[i].I[0], true);
      lf_set(hellos[i].I[1], true);
    }
    for(int i = 0; i < worlds_width; i++) {
      lf_set(worlds[i].I[0], true);
      lf_set(worlds[i].I[1], true);
    }
  =}
}
