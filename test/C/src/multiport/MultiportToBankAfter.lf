// Check multiport output to bank of recipients where the width of the bank is inferred.
target C {
  timeout: 2 sec,
  fast: true
}

reactor Source(width: int = 2) {
  output[width] out: int

  reaction(startup) -> out {=
    for(int i = 0; i < out_width; i++) {
      lf_set(out[i], i);
    }
  =}
}

reactor Destination(bank_index: int = 0) {
  input in: int
  state received: bool = false

  reaction(in) {=
    printf("Destination %d received %d.\n", self->bank_index, in->value);
    if (self->bank_index != in->value) {
      printf("ERROR: Expected %d.\n", self->bank_index);
      exit(1);
    }
    if (lf_time_logical_elapsed() != SEC(1)) {
      printf("ERROR: Expected to receive input after one second.\n");
      exit(2);
    }
    self->received = true;
  =}

  reaction(shutdown) {=
    if (!self->received) {
      fprintf(stderr, "ERROR: Destination %d received no input!\n", self->bank_index);
      exit(3);
    }
    printf("Success.\n");
  =}
}

main reactor(width: int = 3) {
  a = new Source(width=width)
  b = new[width] Destination()
  a.out -> b.in after 1 sec  // Width of the bank of delays will be inferred.
}
