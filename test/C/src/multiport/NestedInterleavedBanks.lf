/**
 * Test nested banks with interleaving.
 * @author Edward A. Lee
 */
target C

reactor A(bank_index: int = 0, outer_bank_index: int = 0) {
  output[2] p: int

  reaction(startup) -> p {=
    for (int i = 0; i < p_width; i++) {
      lf_set(p[i], self->outer_bank_index * 4 + self->bank_index * 2 + i + 1);
      lf_print("A sending %d.", p[i]->value);
    }
  =}
}

reactor B(bank_index: int = 0) {
  output[4] q: int
  a = new[2] A(outer_bank_index=bank_index)
  interleaved(a.p) -> q
}

reactor C {
  input[8] i: int

  reaction(i) {=
    int expected[] = {1, 3, 2, 4, 5, 7, 6, 8};
    for(int j = 0; j < i_width; j++) {
      lf_print("C received %d.", i[j]->value);
      if (i[j]->value != expected[j]) {
        lf_print_error_and_exit("Expected %d.", expected[j]);
      }
    }
  =}
}

main reactor {
  b = new[2] B()
  c = new C()
  b.q -> c.i
}
