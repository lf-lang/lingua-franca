/** This program tests bank of transients */
target C {
  timeout: 2 s
}

reactor Count {
  output out: int
  state count: int = 0
  timer t(0, 500 msec)

  reaction(t) -> out {=
    lf_print("Sending count: %d", self->count);
    lf_set(out, self->count);
    self->count++;
  =}
}

reactor Pass {
  input in: int
  output out: int
  state count: int = 0

  reaction(in) -> out {=
    self->count = in-> value;
        lf_set(out, self->count);
  =}
}

reactor Print {
  input in: int

  reaction(in) {= lf_print("Received %d.", in->value); =}
}

federated reactor {
  count = new[2] Count()
  print = new[2] Print()
  @transient
  pass = new[2] Pass()

  count.out -> pass.in
  pass.out -> print.in
}
