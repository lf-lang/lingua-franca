/**
 * Test a particularly simple form of a distributed deterministic system where a federation that
 * receives timestamped messages only over connections that are marked 'physical' (using the ~>
 * arrow). Therefore, no additional coordination of the advancement of time (HLA or Ptides) is
 * needed.
 *
 * @author Edward A. Lee
 * @author Soroush Bateni
 */
target C {
  timeout: 1 sec,
  coordination: decentralized
}

reactor Count {
  timer t(200 msec, 1 sec)
  state s: int = 0
  output out: int

  reaction(t) -> out {=
    lf_set(out, self->s);
    self->s++;
  =}
}

reactor Print {
  input in: int
  state c: int = 0

  reaction(in) {=
    interval_t elapsed_time = lf_time_logical_elapsed();
    printf("At time %lld, received %d.\n", elapsed_time, in->value);
    if (in->value  != self->c) {
      fprintf(stderr, "ERROR: Expected to receive %d.\n", self->c);
      exit(1);
    }
    if (!(elapsed_time > (SEC(1) * self->c) + MSEC(200))) {
      fprintf(stderr, "ERROR: Expected received time to be strictly greater than %lld.\n", MSEC(200) * self->c);
      exit(3);
    }
    self->c++;
  =}

  reaction(shutdown) {=
    if (self->c != 1) {
      fprintf(stderr, "ERROR: Expected to receive 1 item. Received %d.\n", self->c);
      exit(2);
    }
    printf("SUCCESS: Successfully received 1 item.\n");
  =}
}

federated reactor at localhost {
  c = new Count()
  p = new Print()
  c.out ~> p.in  // Indicating a 'physical' connection.
}
