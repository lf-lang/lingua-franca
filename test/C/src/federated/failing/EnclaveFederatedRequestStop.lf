/**
 * Test that enclaves within federates all stop at the time requested by the first enclave to
 * request a stop. Note that the test has no timeout because any finite timeout can, in theory,
 * cause the test to fail. The first federate to request a stop does so at 50 ms, so the program
 * should terminate quickly if all goes well.
 * Placed in failing as we do not have full support for scheduling enclaves yet.
 */
target C

reactor Stop(
    // Zero value here means "don't stop".
    stop_time: time = 0) {
  timer t(stop_time)

  reaction(t) {=
    if (self->stop_time > 0) lf_request_stop();
  =}

  reaction(shutdown) {=
    lf_print("Stopped at tag (" PRINTF_TIME ", %d)", lf_time_logical_elapsed(), lf_tag().microstep);
    if (lf_time_logical_elapsed() != 50000000LL || lf_tag().microstep != 1) {
        lf_print_error_and_exit("Expected stop tag to be (50ms, 1).");
    }
  =}
}

reactor Fed(least_stop_time: time = 0) {
  @enclave
  s1 = new Stop()
  @enclave
  s2 = new Stop(stop_time=least_stop_time)
}

federated reactor {
  f1 = new Fed()
  f2 = new Fed(least_stop_time = 50 ms)
}
