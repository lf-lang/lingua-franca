 /** 
 * Test a form of a distributed deterministic system
 * where a federate that receives timestamped messages has a timer in addition to the messages
 * as triggers. Therefore, careful coordination of the advancement of time using Ptides is needed.
 * @author Edward A. Lee
 * @author Soroush Bateni
 */
target C {
    timeout: 4900 msec,
    coordination: decentralized
};

import Count from "../lib/Count.lf";

reactor Print {
    input in:int; // STP ()
    // STP(in, 30 msec);
    state success:int(0);
    state success_stp_violation:int(0);
    timer t(0, 10 usec); // Force a timer to be invoke periodically
                         // to ensure logical time will advance in the
                         // absence of incoming messages.
    state c:int(0);
    reaction(in) {=
        tag_t current_tag = get_current_tag();
        printf("At tag (%lld, %u) received %d. Intended tag is (%lld, %u).\n",
            get_elapsed_logical_time(),
            get_microstep(),
            in->value,
            in->intended_tag.time - get_start_time(),
            in->intended_tag.microstep);
        if (compare_tags((tag_t){.time=current_tag.time - get_start_time(), .microstep=current_tag.microstep}, 
                         (tag_t){.time=SEC(1) *  self->c, .microstep=0}) == 0) {
            self->success++; // Message was on-time
        }
        self->c++;
    =} STP (0) {=
        tag_t current_tag = get_current_tag();
        printf("At tag (%lld, %u), message has violated the STP offset by (%lld, %u).\n",
                current_tag.time - start_time, current_tag.microstep,
	            current_tag.time - in->intended_tag.time,
	            current_tag.microstep - in->intended_tag.microstep);
        self->success_stp_violation++;
        self->c++;
    =}
    reaction(t) {=
        // Do nothing.
    =}
    
    reaction(shutdown) {=
        if ((self->success +  self->success_stp_violation) != 5) {
            fprintf(stderr, "Failed to detect STP violations in messages.\n");
            exit(1);
        } else {
            printf("Successfully detected STP violation (%d violations, %d on-time).\n", self->success_stp_violation, self->success);
        }
    =}
}

federated reactor {
    c = new Count();
    p = new Print();
    c.out -> p.in;    // Indicating a 'logical' connection.
}
