// Check multiport connections between federates.
target C {
  timeout: 1 sec,
  coordination: centralized
}

reactor Source(width: int = 2) {
  output[width] out: int
  timer t(0, 100 msec)
  state count: int = 0

  reaction(t) -> out {=
    for (int i = 0; i < out_width; i++) {
      lf_set(out[i], self->count++);
    }
  =}
}

reactor Destination(width: int = 3) {
  input[width] in: int
  state count: int = 0

  reaction(in) {=
    for (int i = 0; i < in_width; i++) {
      if (in[i]->is_present) {
        lf_print("Received %d at %d.", in[i]->value, i);
        if (in[i]->value != self->count++) {
            lf_print_error_and_exit("Expected %d.", self->count - 1);
        }
      }
    }
  =}

  reaction(shutdown) {=
    if (self->count == 0) {
      lf_print_error_and_exit("No data received.");
    }
  =}
}

federated reactor DistributedMultiport {
  s = new Source(width=4)
  d = new Destination(width=4)
  s.out -> d.in
}
