target C {
  timeout: 1 sec
}

reactor Loop {
  input in: int
  output out: int
  timer t(0, 100 msec)
  state count: int = 1

  reaction(in) {=
    lf_print("Received %d.", in->value);
    if (in->value != self->count) {
      lf_print_error_and_exit(
        "Expected %d. Got %d.",
        self->count,
        in->value
      );
    }
    self->count++;
  =}

  reaction(t) -> out {= lf_set(out, self->count); =}

  reaction(shutdown) {=
    if (self->count != 11) {
      lf_print_error_and_exit(
        "Expected 11 messages. Got %d.",
        self->count
      );
    }
  =}
}

federated reactor {
  l = new Loop()

  l.out -> l.in after 0
}
