/** This test checks that a downstream reaction is triggered only if its trigger is present. */
target C {
  timeout: 1 sec,
  fast: true
}

reactor Source {
  output[2] out: int
  state count: int = 0
  timer t(0, 200 msec)

  reaction(t) -> out {=
    if (self->count++ % 2 == 0) {
      lf_set(out[0], self->count);
    } else {
      lf_set(out[1], self->count);
    }
  =}
}

reactor Destination {
  input in: int

  reaction(in) {=
    if (!in->is_present) {
      fprintf(stderr, "Reaction to input of triggered even though all inputs are absent!\n");
      exit(1);
    }
  =}
}

main reactor TriggerDownstreamOnlyIfPresent2 {
  s = new Source()
  d = new[2] Destination()
  s.out -> d.in
}
