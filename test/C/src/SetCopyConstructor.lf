// This tests lf_set_copy_constructor() This tests the use of the "polymorphic"
// delay reactor on a struct. It delays by a logical time any pointer datatype.
target C {
    files: ["include/array.h"]
}

preamble {=
    #include "array.h"
=}

reactor Source {
    output out: int_array_t*

    reaction(startup) -> out {=
        lf_set_copy_constructor(out, int_array_copy_constructor);
        lf_set_destructor(out, int_array_destructor);
        int_array_t* arr = int_array_constructor(2);
        arr->data[0] = 42;
        arr->data[1] = 24;
        lf_set(out, arr);
    =}
}

reactor Destination {
    mutable input in: int_array_t*

    reaction(in) {=
        if (in->value->data[0] != 42 || in->value->data[1] != 24) {
            lf_print_error_and_exit("ERROR: Input data does not match expected data");
        } else {
            lf_print("SUCCESS");
        }
        in->value->data[0] = ~0;
        in->value->data[1] = ~0;
    =}
}

main reactor {
    s = new Source()
    d1 = new Destination()
    d2 = new Destination()
    s.out -> d1.in
    s.out -> d2.in
}
