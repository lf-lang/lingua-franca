target Cpp

reactor Source {
  output y: int
  timer t

  reaction(t) -> y {= y.set(1); =}
}

reactor Destination {
  input x: int
  input y: int

  reaction(x, y) {=
    int sum = 0;
    if (x.is_present()) {
      sum += *x.get();
    }
    if (y.is_present()) {
      sum += *y.get();
    }
    std::cout << "Received " << sum << std::endl;
    if (sum != 2) {
      std::cerr << "FAILURE: Expected 2." << std::endl;
      exit(4);
    }
  =}
}

reactor Pass {
  input x: int
  output y: int

  reaction(x) -> y {= y.set(x.get()); =}
}

main reactor {
  s = new Source()
  d = new Destination()
  p1 = new Pass()
  p2 = new Pass()
  s.y -> d.y
  s.y -> p1.x
  p1.y -> p2.x
  p2.y -> d.x
}
