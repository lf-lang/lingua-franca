// Test that two simultaneous inputs that trigger a reaction trigger it only once. Correct output
// for this 2, 4, 6, 8, etc.
target Cpp {
  timeout: 10 sec,
  fast: true
}

reactor Clock(offset: time = 0, period: time = 1 sec) {
  output y: int
  timer t(offset, period)
  state count: int = 0

  reaction(t) -> y {=
    count++;
    y.set(count);
  =}
}

reactor Destination {
  input x: int
  input w: int
  state s: int = 2

  reaction(x, w) {=
    int sum = 0;
    if (x.is_present()) {
      sum += *x.get();
    }
    if (w.is_present()) {
      sum += *w.get();
    }
    std::cout << "Sum of inputs is: " << sum << std::endl;
    if (sum != s) {
      std::cerr << "FAILURE: Expected sum to be " << s
            << "but it was " << sum << std::endl;
      exit(1);
    }
    s += 2;
  =}
}

main reactor {
  c1 = new Clock()
  c2 = new Clock()
  d = new Destination()
  c1.y -> d.x
  c2.y -> d.w
}
