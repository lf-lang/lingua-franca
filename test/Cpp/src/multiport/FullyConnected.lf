target Cpp

reactor Node(bank_index: size_t = 0, num_nodes: size_t = 4) {
  input[num_nodes] in: size_t
  output out: size_t

  state received: bool = false

  reaction(startup) -> out {=
    std::cout << "Hello from node " << bank_index << "!\n";
    // broadcast my ID to everyone
    out.set(bank_index);
  =}

  reaction(in) {=
    std::cout << "Node " << bank_index << " received messages from ";
    received = true;
    size_t count{0};
    for (auto i: in.present_indices_unsorted()) {
      count++;
      std::cout << *in[i].get() << ", ";
    }

    std::cout << '\n';
    if (count != num_nodes) {
      std::cerr << "ERROR: received less messages than expected!";
      exit(1);
    }
  =}

  reaction(shutdown) {=
    if (!received) {
      std::cerr << "Error: received no input!\n";
      exit(2);
    }
  =}
}

main reactor(num_nodes: size_t = 4) {
  nodes = new[num_nodes] Node(num_nodes=num_nodes)
  (nodes.out)+ -> nodes.in
}
