// Check multiport output to bank of recipients. Here, the bank is smaller than the width of the
// sending port.
target Cpp {
  timeout: 2 sec,
  fast: true
}

reactor Source(bank_index: size_t = 0) {
  output out: unsigned

  reaction(startup) -> out {= out.set(bank_index); =}
}

reactor Container {
  output[3] out: unsigned
  s = new[3] Source()
  s.out -> out
}

reactor Destination {
  input[3] in: unsigned
  state received: bool = false

  reaction(in) {=
    for (size_t i = 0; i < in.size(); i++) {
      std::cout << "Destination channel " << i << " received " << *in[i].get() << ".\n";
      if (i != *in[i].get()) {
        std::cerr << "ERROR: Expected " << i << ".\n";
        exit(1);
      }
    }
    received = true;
  =}

  reaction(shutdown) {=
    if (!received) {
      std::cerr << "ERROR: Destination received no input!\n";
      exit(1);
    }
    std::cout << "Success.\n";
  =}
}

main reactor {
  a = new Container()
  b = new Destination()
  a.out -> b.in
}
