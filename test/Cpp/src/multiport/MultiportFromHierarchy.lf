// Check multiport output to multiport input, where the former is a hierarchical reactor.
target Cpp {
  timeout: 2 sec,
  fast: true
}

reactor Source {
  timer t(0, 200 msec)
  output[4] out: int
  state s: int = 0

  reaction(t) -> out {=
    for(int i = 0; i < 4; i++) {
      out[i].set(s++);
    }
  =}
}

reactor Destination {
  state s: int = 6
  input[4] in: int

  reaction(in) {=
    int sum = 0;
    for (auto i : in.present_indices_unsorted()) {
      sum += *in[i].get();
    }

    std::cout << "Sum of received: " << sum << ".\n";
    if (sum != s) {
      std::cerr << "ERROR: Expected " << s << ".\n";
      exit(1);
    }
    s += 16;
  =}

  reaction(shutdown) {=
    if (s <= 6) {
      std::cerr << "ERROR: Destination received no input!\n";
      exit(1);
    }
    std::cout << "Success.\n";
  =}
}

reactor Container {
  output[4] out: int
  src = new InsideContainer()
  src.out -> out
}

reactor InsideContainer {
  output[4] out: int
  src = new Source()
  src.out -> out
}

main reactor MultiportFromHierarchy {
  a = new Container()
  b = new Destination()
  a.out -> b.in
}
