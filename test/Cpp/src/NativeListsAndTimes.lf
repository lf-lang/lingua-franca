target Cpp

// This test passes if it is successfully compiled into valid target code.
reactor Foo(
    x: int(0),
    y: time(0),                // Units are missing but not required
    z(1 msec),                 // Type is missing but not required
    p: int[]{1, 2, 3, 4},      // List of integers
    q: {=  // list of time values
        std::vector<reactor::Duration>
    =}{1 msec, 2 msec, 3 msec},
    r: time({= 0 =}),          // Zero-valued target code also is a valid time
    g: time[]{1 msec, 2 msec}  // List of time values
) {
    state s: time(y)   // Reference to explicitly typed time parameter
    state t: time(z)   // Reference to implicitly typed time parameter
    state v: bool      // Uninitialized boolean state variable
    state w: time      // Uninitialized time state variable
    timer tick(0)      // Units missing but not required
    timer tock(1 sec)  // Implicit type time
    timer toe(z)       // Implicit type time
    state baz(p)       // Implicit type int[]
    state period(z)    // Implicit type time
    state times: std::vector<  // a list of lists
        std::vector<{= reactor::Duration =}>
    >{q, g}

    reaction(tick) {=
        // Target code
    =}
}

main reactor NativeListsAndTimes {
    foo = new Foo()
}
