/**
 * @author Maiko Brants TU Dresden
 *
 * This checks that a logical action is scheduled the specified logical time after the current
 * logical time.
 *
 * Modeled after the C version of this test.
 */
target Cpp {
  fast: true,
  timeout: 3 sec
}

reactor foo {
  input x: int
  output y: int
  logical action a: void

  reaction(x) -> y, a {=
    y.set( 2*(*x.get()));
    // The following uses physical time, incorrectly.
    a.schedule(500ms);
  =}

  reaction(a) -> y {= y.set(-42); =}
}

reactor print {
  state expected_time: time = 0
  input x: int

  reaction(x) {=
    auto elapsed_time = get_elapsed_logical_time();
    reactor::log::Info() << "Result is " << *x.get();
    reactor::log::Info() << "Current logical time is: " << elapsed_time;
    reactor::log::Info() << "Current physical time is: " << get_elapsed_physical_time().count();
    if(elapsed_time != expected_time) {
      reactor::log::Error() << "ERROR: Expected logical time to be " << expected_time;
      exit(1);
    }
    expected_time += 500ms;
  =}
}

main reactor {
  f = new foo()
  p = new print()
  timer t(0, 1 sec)
  f.y -> p.x

  reaction(t) -> f.x {= f.x.set(42); =}
}
