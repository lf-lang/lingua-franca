target Cpp

// That's the stuff that shall be generated for the after
reactor GeneratedDelay {
  input y_in: int
  output y_out: int
  state y_state: int = 0

  logical action act(100 msec): int

  reaction(y_in) -> act {= act.schedule(y_in.get()); =}

  reaction(act) -> y_out {= y_out.set(act.get()); =}
}

reactor Source {
  output out: int
  timer t

  reaction(t) -> out {= out.set(1); =}  // reaction(t) -> out after 100 msec {=
}

reactor Sink {
  input in: int

  reaction(in) {=
    auto elapsed_logical = get_elapsed_logical_time();
    std::cout << "Elapsed logical time: " << elapsed_logical << '\n';
    if (elapsed_logical != 100ms) {
      std::cerr << "ERROR: Expected 100 ms\n";
      exit(1);
    }
  =}
}

main reactor ManualDelayedReaction {
  source = new Source()
  sink = new Sink()
  g = new GeneratedDelay()

  source.out -> g.y_in  // source.out -> sink.in; rewritten above
  g.y_out -> sink.in
}
