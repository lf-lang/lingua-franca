// Check that a state variable can have a statically initialized struct as a value. Check how
// preambles work
target Rust

main reactor StructAsState {
  preamble {=
    struct Hello {
      name: String,
      value: i32,
    }
  =}
  /**
   * notice this uses parentheses todo
   * - state s: Hello(name= "Earth".into(), value= 42);
   * - state s: Hello(name: "Earth".into(), value: 42);
   * - state s: Hello { name: "Earth".into(), value: 42 };
   */
  state s: Hello = {= Hello { name: "Earth".into(), value: 42 } =}

  reaction(startup) {=
    println!("State s.name=\"{}\", s.value={}.", self.s.name, self.s.value);
    if self.s.value != 42 {
      eprintln!("FAILED: Expected 42.");
      std::process::exit(1);
    }
  =}
}
