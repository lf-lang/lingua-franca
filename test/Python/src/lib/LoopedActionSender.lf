/**
 * A sender reactor that outputs integers in superdense time.
 *
 * @author Soroush Bateni
 */
target Python

/**
 * @param take_a_break_after: Indicates how many messages are sent in consecutive superdense time
 * @param break_interval: Determines how long the reactor should take a break after sending
 * take_a_break_after messages.
 */
reactor Sender(take_a_break_after=10, break_interval = 400 msec) {
  output out
  logical action act
  state sent_messages = 0

  reaction(startup, act) -> act, out {=
    # Send a message on out
    out.set(self.sent_messages)
    self.sent_messages += 1
    if self.sent_messages < self.take_a_break_after:
      act.schedule(0)
    else:
      # Take a break
      self.sent_messages=0;
      act.schedule(self.break_interval)
  =}
}
