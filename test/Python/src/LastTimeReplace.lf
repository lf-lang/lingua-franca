target Python {
  timeout: 1 sec
}

main reactor {
  timer t(0, 100 msec)
  logical action a(1 msec, 300 msec, "replace")
  state c = 0
  state last = never

  reaction(t) -> a {=
    now = lf.tag()
    start = lf.time.start()
    print(f"(Timer) Current: {now.time - start}, Scheduled: {now.time + MSEC(1) - start}, Count: {self.c}")
    a.schedule(0, self.c)
    self.c += 1
  =}

  reaction(a) {=
    now = lf.tag()
    start = lf.time.start()
    print(f"(Action) Current: {now.time - start}, Microstep: {now.microstep}, Count: {a.value}")
    if now.time < self.last + MSEC(300):
        print("Minimum spacing of 300ms was violated.")  # lf_print_error
        sys.exit(1)  # and_exit
    if a.value != self.c - 1:
        print(f"Expected value {self.c - 1}.")  # lf_print_error
        sys.exit(1)  # and_exit
    self.last = now.time
  =}
}
