# Test a deadline where the deadline violation produces an output and the container reacts to that
# output.
target Python

preamble {= import time =}

reactor Deadline(threshold = 100 msec) {
  input x
  output deadline_violation

  reaction(x) -> deadline_violation {=
    sys.stderr.write("ERROR: Deadline violation was not detected!\n")
    exit(1)
  =} deadline(threshold) {=
    print("Deadline violation detected.")
    deadline_violation.set(True)
  =}
}

main reactor DeadlineHandledAbove {
  state violation_detected = False
  d = new Deadline(threshold = 10 msec)

  reaction(startup) -> d.x {=
    time.sleep(0.2)
    d.x.set(42)
  =}

  reaction(d.deadline_violation) {=
    if d.deadline_violation.value is True:
      print("Output successfully produced by deadline miss handler.")
      self.violation_detected = True
  =}

  reaction(shutdown) {=
    if self.violation_detected is True:
      print("SUCCESS. Test passes.")
    else:
      sys.stderr.write("FAILURE. Container did not react to deadline violation.\n")
      exit(2)
  =}
}
