# Check reaction to multiport input of a contained reactor.
target Python {
  timeout: 2 sec,
  fast: true
}

reactor Destination(width=1) {
  state s = 6
  input[width] _in

  reaction(_in) {=
    sm = 0;
    for port in _in:
      if port.is_present:
        sm += port.value
    print("Sum of received: ", sm)
    if sm != self.s:
      sys.stderr.write("ERROR: Expected {:d}.\n".format(self.s))
      exit(1)

    self.s += 16
  =}

  reaction(shutdown) {=
    if self.s <= 6:
      sys.stderr.write("ERROR: Destination received no input!\n")
      exit(1)
    print("Success.")
  =}
}

main reactor MultiportFromReaction {
  timer t(0, 200 msec)
  state s = 0
  b = new Destination(width=4)

  reaction(t) -> b._in {=
    for (idx, port) in enumerate(b._in):
      print("Before SET, b.in[{:d}].is_present has value {:d}".format(idx, port.is_present))
      port.set(self.s)
      self.s += 1
      print("AFTER set, b.in[{:d}].is_present has value {:d}".format(idx, port.is_present))
      print("AFTER set, b.in[{:d}].value has value {:d}".format(idx, port.value))
  =}
}
