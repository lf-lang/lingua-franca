# Check multiport output to multiport input, where the former is a hierarchical reactor.
target Python {
  timeout: 2 sec,
  fast: true
}

reactor Source {
  timer t(0, 200 msec)
  output[4] out
  state s = 0

  reaction(t) -> out {=
    for port in out:
      port.set(self.s)
      self.s = self.s + 1
  =}
}

reactor Destination {
  state s = 6
  input[4] _in

  reaction(_in) {=
    sm = 0
    for port in _in:
      if port.is_present:
        sm += port.value
    print("Sum of received: " + str(sm))
    if (sm != self.s):
      sys.stderr.write("ERROR: Expected " + str(self.s) + ".\n")
      exit(1)
    self.s += 16
  =}

  reaction(shutdown) {=
    if self.s <= 6:
      sys.stderr.write("ERROR: Destination received no input!\n")
      exit(1)
    print("Success.")
  =}
}

reactor Container {
  output[4] out
  src = new InsideContainer()
  src.out -> out
}

reactor InsideContainer {
  output[4] out
  src = new Source()
  src.out -> out
}

main reactor MultiportFromHierarchy {
  a = new Container()
  b = new Destination()
  a.out -> b._in
}
