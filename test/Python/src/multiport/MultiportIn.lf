# This is a version fo the Threaded test that uses a multiport input at the destination. Its purpose
# is to test multiport inputs.
target Python {
  timeout: 2 sec,
  fast: true
}

reactor Source {
  timer t(0, 200 msec)
  output out
  state s = 0

  reaction(t) -> out {=
    out.set(self.s)
    self.s+=1
  =}
}

reactor Computation {
  input inp
  output out

  reaction(inp) -> out {=
    out.set(inp.value)
  =}
}

reactor Destination {
  state s = 0
  input[4] inp

  reaction(inp) {=
    sum = 0
    for port in inp:
      sum += port.value

    print("Sum of received: " + str(sum))
    if sum != self.s:
      sys.stderr.write("ERROR: Expected " + str(self.s))
      exit(1)

    self.s += 4
  =}

  reaction(shutdown) {=
    if self.s == 0:
      sys.stderr.write("ERROR: Destination received no input!")
      exit(1)

    print("Success.")
  =}
}

main reactor MultiportIn {
  a = new Source()
  t1 = new Computation()
  t2 = new Computation()
  t3 = new Computation()
  t4 = new Computation()
  b = new Destination()
  a.out -> t1.inp
  a.out -> t2.inp
  a.out -> t3.inp
  a.out -> t4.inp
  t1.out, t2.out, t3.out, t4.out -> b.inp
}
