# Check multiport output to multiport input. Destination port is wider than sending port.
target Python {
  timeout: 2 sec,
  fast: true
}

reactor Source {
  timer t(0, 200 msec)
  output[2] out
  state s = 0

  reaction(t) -> out {=
    for port in out:
      port.set([self.s, self.s + 1, self.s + 2])
      self.s += 3
  =}
}

reactor Destination {
  state s = 15
  input[2] _in

  reaction(_in) {=
    sm = 0
    for port in _in:
      if port.is_present:
        sm += sum(port.value)

    print("Sum of received: ", sm);
    if sm != self.s:
      sys.stderr.write("ERROR: Expected {:d}.\n".format(self.s))
      exit(1)

    self.s += 36
  =}

  reaction(shutdown) {=
    if self.s <= 15:
      sys.stderr.write("ERROR: Destination received no input!\n")
      exit(1)
    print("Success.")
  =}
}

main reactor MultiportToMultiportArray {
  a = new Source()
  b = new Destination()
  a.out -> b._in
}
