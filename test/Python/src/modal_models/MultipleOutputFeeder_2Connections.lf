/**
 * Modal Reactor Test.
 *
 * Tests if connections in the same reactor that have the same destination work if they are located
 * in separate modes.
 */
target Python {
  fast: false,
  timeout: 2 sec
}

import TraceTesting from "util/TraceTesting.lf"

reactor Modal {
  input next
  output count

  initial mode One {
    counter1 = new Counter(period = 250 msec)
    counter1.value -> count
    reaction(next) -> reset(Two) {= Two.set() =}
  }

  mode Two {
    counter2 = new Counter(period = 100 msec)
    counter2.value -> count
    reaction(next) -> history(One) {= One.set() =}
  }
}

reactor Counter(period = 1 sec) {
  output value

  timer t(0, period)
  reset state curval = 0

  reaction(t) -> value {=
    value.set(self.curval)
    self.curval += 1
  =}
}

main reactor {
  timer stepper(500 msec, 500 msec)

  modal = new Modal()
  test = new TraceTesting(events_size = 1, trace = (  // keep-format
    0,1,0,
    250000000,1,1,
    250000000,1,2,
    0,1,0,
    100000000,1,1,
    100000000,1,2,
    100000000,1,3,
    100000000,1,4,
    100000000,1,5,
    250000000,1,3,
    250000000,1,4,
    0,1,0,
    100000000,1,1,
    100000000,1,2,
    100000000,1,3,
    100000000,1,4,
    100000000,1,5
  ), training = False)

  modal.count -> test.events

  reaction(stepper) -> modal.next {= modal.next.set(True) =}  # Trigger mode change

  reaction(modal.count) {= print(modal.count.value) =}        # Print
}
