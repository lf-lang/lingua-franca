target Python {
  fast: true
}

reactor Source {
  logical action foo
  output y

  reaction(foo) -> y {=
    y.set(foo.value)
  =}
}

reactor SourceExtended extends Source {
  reaction(startup) -> foo {=
    foo.schedule(0, 42)
  =}
}

reactor Test {
  input x
  state count = 0

  reaction(x) {=
    self.count += 1
    print("Received ", x.value)
    if x.value != 42:
      sys.stderr.write("FAILURE: Expected 42\n")
      exit(1)
  =}

  reaction(shutdown) {=
    if self.count == 0:
      sys.stderr.write("FAILURE: No data received.\n")
  =}
}

main reactor {
  s = new SourceExtended()
  d = new Test()
  s.y -> d.x
}
