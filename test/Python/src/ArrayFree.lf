# Source produces a dynamically allocated array, which it passes to Free. Free requests a writable
# copy, which, instead of copying, it just gets ownership of the original array. It then does
# nothing further with it. This test checks that the memory gets freed automatically even with the
# mutable input.
target Python

import Source, Print from "ArrayPrint.lf"
import Scale from "ArrayScale.lf"

reactor Free(scale=2) {
  mutable input inp

  reaction(inp) {=
    for i in range(len(inp.value)):
      inp.value[i] *= self.scale
  =}
}

main reactor ArrayFree {
  s = new Source()
  c = new Free()
  c2 = new Scale()
  p = new Print(scale=2)
  s.out -> c.inp
  s.out -> c2.inp
  c2.out -> p.inp
}
