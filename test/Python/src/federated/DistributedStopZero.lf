/**
 * Test for request_stop() in federated execution with centralized coordination at tag (0,0).
 *
 * @author Soroush Bateni
 */
# reason for failing: lf_tag().microstep and lf.tag_compare() are not not supported in python target
target Python

preamble {= import sys =}

reactor Sender {
  output out
  timer t(0, 1 usec)
  state startup_logical_time

  reaction(startup) {= self.startup_logical_time = lf.time.logical() =}

  reaction(t) -> out {=
    tag = lf.tag()
    print("Sending 42 at ({}, {}).".format(
           tag.time,
           tag.microstep))
    out.set(42)
    zero = Tag(time=self.startup_logical_time, microstep=0)
    if lf.tag_compare(lf.tag(), zero) == 0:
      # Request stop at (0,0)
      print("Requesting stop at ({}, {}).".format(
           lf.time.logical_elapsed(),
           lf.tag().microstep))
      request_stop()
  =}

  reaction(shutdown) {=
    tag = lf.tag()
    if tag.time != USEC(0) or tag.microstep != 1:
      sys.stderr.write("ERROR: Sender failed to stop the federation in time. Stopping at ({}, {}).\n".format(
           tag.time,
           tag.microstep))
      sys.exit(1)
    print("SUCCESS: Successfully stopped the federation at ({}, {}).".format(
           tag.time,
           tag.microstep))
  =}
}

reactor Receiver {
  input in_
  state startup_logical_time

  reaction(startup) {= self.startup_logical_time = lf.time.logical() =}

  reaction(in_) {=
    tag = lf.tag()
    print("Received {} at ({}, {}).\n".format(
           in_.value,
           tag.time,
           tag.microstep))
    zero = Tag(time=self.startup_logical_time, microstep=0)
    if lf.tag_compare(lf.tag(), zero) == 0:
      # Request stop at (0,0)
      print("Requesting stop at ({}, {}).".format(
           tag.time,
           tag.microstep))
      request_stop()
  =}

  reaction(shutdown) {=
    # Sender should have requested stop earlier than the receiver.
    # Therefore, the shutdown events must occur at (1000, 0) on the
    # receiver.
    tag = lf.tag()
    if tag.time != USEC(0) or tag.microstep != 1:
      sys.stderr.write("ERROR: Receiver failed to stop the federation in time. Stopping at ({}, {}).\n".format(
           tag.time,
           tag.microstep))
      sys.exit(1)
    print("SUCCESS: Successfully stopped the federation at ({}, {}).\n".format(
           tag.time,
           tag.microstep))
  =}
}

federated reactor {
  sender = new Sender()
  receiver = new Receiver()

  sender.out -> receiver.in_
}
