# Source produces a dynamically allocated array, which it passes to Print. Reference counting
# ensures that the array is freed.
target Python

reactor Source {
  output out

  reaction(startup) -> out {=
    # Dynamically allocate an output array of length 3 and populate it.
    out.set([0,1,2])
  =}
}

# The scale parameter is just for testing.
reactor Print(scale=1) {
  input _in

  reaction(_in) {=
    print("Received: [%s]" % ", ".join(map(str, _in.value)))
    if _in.value != [x * self.scale for x in [0, 1, 2]]:
      sys.stderr.write("ERROR: Value received by Print does not match expectation!\n")
      exit(1)
  =}
}

main reactor ArrayPrint {
  s = new Source()
  p = new Print()
  s.out -> p._in
}
