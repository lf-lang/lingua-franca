# Test logical action with delay.
target Python

reactor GeneratedDelay {
  input y_in
  output y_out
  state y_state = 0
  logical action act(100 msec)

  reaction(y_in) -> act {=
    self.y_state = y_in.value
    act.schedule(MSEC(0))
  =}

  reaction(act) -> y_out {= y_out.set(self.y_state) =}
}

reactor Source {
  output out

  reaction(startup) -> out {= out.set(1) =}
}

reactor Sink {
  input _in

  reaction(_in) {=
    elapsed_logical = lf.time.logical_elapsed()
    logical = lf.time.logical()
    physical = lf.time.physical()
    print("Logical, physical, and elapsed logical: ", logical, physical, elapsed_logical)
    if elapsed_logical != MSEC(100):
      sys.stderr.write("FAILURE: Expected " + str(MSEC(100)) + " but got " + str(elapsed_logical) + ".\n")
      exit(1)
    else:
      print("SUCCESS. Elapsed logical time is 100 msec.\n")
  =}
}

main reactor ActionDelay {
  source = new Source()
  sink = new Sink()
  g = new GeneratedDelay()

  source.out -> g.y_in
  g.y_out -> sink._in
}
