/** This test checks that a downstream reaction is triggered only if its trigger is present. */
target Python {
  timeout: 1 sec,
  fast: true
}

reactor Source {
  output a
  output b
  state count = 0
  timer t(0, 200 msec)

  reaction(t) -> a, b {=
    if (self.count % 2) == 0:
      a.set(self.count)
    else:
      b.set(self.count)
  =}
}

reactor Destination {
  input a
  input b

  reaction(a) {=
    if a.is_present is not True:
      sys.stderr.write("Reaction to a triggered even though all inputs are absent!\n")
      exit(1)
  =}

  reaction(b) {=
    if b.is_present is not True:
      sys.stderr.write("Reaction to b triggered even though all inputs are absent!\n")
      exit(2)
  =}
}

main reactor TriggerDownstreamOnlyIfPresent {
  s = new[2] Source()
  d = new[2] Destination()
  s.a -> d.a
  s.b -> d.b
}
