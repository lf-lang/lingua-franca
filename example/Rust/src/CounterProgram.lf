//! A simple counter program. The counter's stride and period
//! may be configured using the CLI:
//!     ./counter_program --main-stride 20 --main-period 500msec
//!
//! Author: ClÃ©ment Fournier

target Rust {
    timeout: 3 sec,
    cargo-features: ["cli"]
};

reactor Counter(stride: u32(1), period: time(1 sec)) {
    state count: u32(0);
    state stride(stride);
    timer t(0, period);
    output out: u32;
    reaction(t) -> out {=
        ctx.set(out, self.count);
        self.count += self.stride;
    =}
}
reactor Printer {
    input in: u32;
    reaction(in) {=
        if let Some(value) = ctx.get(r#in) {
            println!("Hello World! value={}.", value);
        }
    =}
}
main reactor CounterProgram(stride: u32(10), period: time(1 sec)) {
    counter = new Counter(stride=stride, period=period);
    printer = new Printer();
    counter.out -> printer.in;
}
