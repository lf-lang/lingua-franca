/**
 * Rhythm generator using samples of percussion instruments.
 * This version can run on multiple machines leveraging
 * synchronized clocks to stay in sync.
 * This program runs on MacOS and Linux, at least.
 * 
 * This program tests clock synchronization by producing
 * sounds on each of two computers that, if the clocks are
 * synchronized well enough, sound like they are occurring
 * at identical times. In this version, there is no communication
 * between the components other than clock synchronization.
 * 
 * To map these programs onto distinct machines, at the end
 * of this file, change the lines like this:
 * ```
 *      player1 = new RhythmPlayer();
 * ```
 * to something like
 * ```
 *      player1 = new RhythmPlayer() at 10.0.0.42;
 * ```
 * where the last part is the IP address or machine name of
 * a machine on which you want to run the particular component.
 * See [[https://github.com/icyphy/lingua-franca/wiki/Distributed-Execution]].
 * 
 * @see RhythmMac.lf
 * @see RhythmMacDistributed.lf
 * @see RhythmMacDistributedIndependent.lf
 * 
 * @author Edward A. Lee
 */
target C {
    coordination: decentralized,
    timeout: 10 sec,
    clock-sync: on,
    clock-sync-options: {
        local-federates-on: true,
        test-offset: 200 msec,
        period: 5 msec,
        trials: 10,
        attenuation: 10
    },
    files: [
        "/lib/C/util/wave_file_reader.c", "/lib/C/util/wave_file_reader.h",
        "/lib/C/util/audio_loop_mac.c", "/lib/C/util/audio_loop.h",
        "/lib/C/util/audio_loop_linux.c",
        "sounds/Bass-Drum-1.wav", "sounds/Hi-Bongo.wav", "sounds/Claves.wav", "sounds/High-Conga-1.wav",
        "sounds/Cowbell-1.wav", "sounds/Cuica-1.wav", "sounds/Guiro.wav",
        "sounds/Ensoniq-ESQ-1-Snare.wav", "sounds/Floor-Tom-1.wav"]
};
import PlayWaveform from "PlayWaveform.lf"

/**
 * Reactor that outputs a note request at the specified period.
 */
reactor BeatSource(period:time(1600 msec)) {    
    output note:float;     // To play a note with the given emphasis.
    
    timer tick(0, period);
        
    reaction(tick) -> note {=
        SET(note, 1.0f);
    =}
}

reactor RhythmPlayer {
    source = new BeatSource();
    play = new PlayWaveform(default_waveform_id = 3);
    source.note -> play.note;
}

federated reactor {
    player1 = new RhythmPlayer();
    player2 = new RhythmPlayer();
}

