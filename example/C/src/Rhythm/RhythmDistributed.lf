/**
 * Demonstration of timed distributed Lingua Franca programs.
 * This program runs on MacOS and Linux, at least.
 * 
 * This program elaborates Rhythm to have two players that
 * run on different machines. Both players can select a musical
 * instrument, but only one of the players can control the rhythm
 * and the tempo.
 * 
 * To run this program, open three distinct terminal windows
 * and run the following generated binaries, one in each window:
 * 
 * * RTI -n 2
 * * bin/RhythmDistributed_player1
 * * bin/RhythmDistributed_player2
 * 
 * The `-n 2` argument specifies the number of federates.
 * Note that you have to have installed the RTI on your path.
 * See the instructions in the README file in this directory in the LF repo:
 * 
 *     org.lflang/src/lib/core/federated/RTI
 * 
 * You can also map these three to distinct machines by specifying an `at` clause
 * on the lines at the end of this file that instantiate the reactors.
 * See [[https://github.com/icyphy/lingua-franca/wiki/Distributed-Execution]].
 * 
 * @see Rhythm.lf
 * @see RhythmDistributedNoUI.lf
 *
 * @author Edward A. Lee
 */
target C {
    coordination: centralized,
    files: [
        "/lib/C/util/sensor_simulator.c", "/lib/C/util/sensor_simulator.h",
        "/lib/C/util/wave_file_reader.c", "/lib/C/util/wave_file_reader.h",
        "/lib/C/util/audio_loop_mac.c", "/lib/C/util/audio_loop.h",
        "/lib/C/util/audio_loop_linux.c",
        "sounds/Bass-Drum-1.wav", "sounds/Hi-Bongo.wav", "sounds/Claves.wav", "sounds/High-Conga-1.wav",
        "sounds/Cowbell-1.wav", "sounds/Cuica-1.wav", "sounds/Guiro.wav",
        "sounds/Ensoniq-ESQ-1-Snare.wav", "sounds/Floor-Tom-1.wav"]
};
 
import RhythmSource from "Rhythm.lf"
import PlayWaveform from "PlayWaveform.lf"

reactor Player {
    input tempo_change_in:interval_t; // To accept a tempo change.
    input rhythm_change_in:char;      // To accept a rhythm change.
    output tempo_change:interval_t;   // To change the tempo.
    output rhythm_change:char;        // To change the rhythm.
    source = new RhythmSource();
    play = new PlayWaveform();
    source.note -> play.note;
    source.instrument -> play.waveform;
    source.rhythm_change -> rhythm_change;
    source.tempo_change -> tempo_change;
    rhythm_change_in -> source.rhythm_change_in;
    tempo_change_in -> source.tempo_change_in;
}

federated reactor {
    player1 = new Player();
    player2 = new Player();
    player1.rhythm_change -> player2.rhythm_change_in;
    player1.tempo_change -> player2.tempo_change_in;
    player2.rhythm_change -> player1.rhythm_change_in;
    player2.tempo_change -> player1.tempo_change_in;
}