target C {
    timeout: 3 secs,
    fast: true,
    build: "./build.sh FurutaPendulumWithOutput"
}
import Controller from "FurutaPendulum.lf";
import PendulumModel from "FurutaPendulumSimulation.lf";

reactor Print(filename:string("output.data")) {
    input y:double;
    state file:FILE*({=NULL=});
    reaction(startup) {=
        self->file = fopen(self->filename, "w");
        if(self->file == NULL) {
            error_print_and_exit("Failed to open file: %s", self->filename);
        }
    =}
    reaction(y) {=
        double t = get_elapsed_logical_time() / 1.0e9;
        fprintf(self->file, "%f %f\n", t, y->value);
    =}
    reaction(shutdown) {=
        fclose(self->file);
    =}
}

main reactor {
    p = new PendulumModel(sample_period = 5 msec);
    c = new Controller();
    pr_pendulum = new Print(filename = "pendulum.data");
    pr_mode = new Print(filename = "mode.data");
    pr_energy = new Print(filename = "energy.data");
    p.phi, p.d_phi -> c.phi, c.d_phi;
    p.theta, p.d_theta -> c.theta, c.d_theta;
    c.control -> p.u;
    c.control -> pr_pendulum.y;
    c.modeID -> pr_mode.y;
    c.energy -> pr_energy.y;
}