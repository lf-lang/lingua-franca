# @package benchmark
name: "Recursive Matrix Multiplication"
params:
  workers: 20
  data_length: 1024
  block_threshold: 16384
  priorities: 10

# target specific configuration
targets:
  akka:
    jar: "${savina_path}/target/savina-0.0.1-SNAPSHOT-jar-with-dependencies.jar"
    class: "edu.rice.habanero.benchmarks.recmatmul.MatMulAkkaActorBenchmark"
    run_args:
      workers: ["-w", "<value>"]
      data_length: ["-n", "<value>"]
      block_threshold: ["-t", "<value>"]
      priorities: ["-p", "<value>"]
  caf:
    bin: "caf_23_recmatmul"
    run_args:
      workers: ["-w", "<value>"]
      data_length: ["-n", "<value>"]
      block_threshold: ["-t", "<value>"]
  lf-cpp:
    copy_sources:
      - "${lf_path}/benchmark/Cpp/Savina/src/BenchmarkRunner.lf"
      - "${lf_path}/benchmark/Cpp/Savina/src/parallelism"
      - "${lf_path}/benchmark/Cpp/Savina/src/IncludeHeaders.cmake"
      - "${lf_path}/benchmark/Cpp/Savina/src/Matrix.hh"
    lf_file: "parallelism/MatMul.lf"
    binary: "MatMul"
    gen_args: null
    run_args:
      data_length: ["--dataLength", "<value>"]
      block_threshold: ["--blockThreshold", "<value>"]
      priorities: ["--priorities", "<value>"]
      workers: ["--numWorkers", "<value>"]
  lf-c:
    copy_sources:
      - "${lf_path}/benchmark/C/Savina/src/parallelism/"
      - "${lf_path}/benchmark/C/Savina/src/lib/"
      - "${lf_path}/benchmark/C/Savina/src/include/"
    lf_file: "parallelism/MatMul.lf"
    binary: "MatMul"
    gen_args:
      data_length: ["-D", "data_length=<value>"]
      block_threshold: ["-D", "block_threshold=<value>"]
      priorities: ["-D", "priorities=<value>"]
      workers: ["-D", "num_workers=<value>"]
